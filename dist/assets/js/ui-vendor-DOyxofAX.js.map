{"version":3,"file":"ui-vendor-DOyxofAX.js","sources":["../../../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js","../../../node_modules/.pnpm/react@18.3.1/node_modules/react/cjs/react-jsx-runtime.production.min.js","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../../node_modules/.pnpm/motion-utils@12.23.6/node_modules/motion-utils/dist/es/array.mjs","../../../node_modules/.pnpm/motion-utils@12.23.6/node_modules/motion-utils/dist/es/clamp.mjs","../../../node_modules/.pnpm/motion-utils@12.23.6/node_modules/motion-utils/dist/es/global-config.mjs","../../../node_modules/.pnpm/motion-utils@12.23.6/node_modules/motion-utils/dist/es/is-numerical-string.mjs","../../../node_modules/.pnpm/motion-utils@12.23.6/node_modules/motion-utils/dist/es/is-object.mjs","../../../node_modules/.pnpm/motion-utils@12.23.6/node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../../../node_modules/.pnpm/motion-utils@12.23.6/node_modules/motion-utils/dist/es/memo.mjs","../../../node_modules/.pnpm/motion-utils@12.23.6/node_modules/motion-utils/dist/es/noop.mjs","../../../node_modules/.pnpm/motion-utils@12.23.6/node_modules/motion-utils/dist/es/pipe.mjs","../../../node_modules/.pnpm/motion-utils@12.23.6/node_modules/motion-utils/dist/es/progress.mjs","../../../node_modules/.pnpm/motion-utils@12.23.6/node_modules/motion-utils/dist/es/subscription-manager.mjs","../../../node_modules/.pnpm/motion-utils@12.23.6/node_modules/motion-utils/dist/es/time-conversion.mjs","../../../node_modules/.pnpm/motion-utils@12.23.6/node_modules/motion-utils/dist/es/velocity-per-second.mjs","../../../node_modules/.pnpm/motion-utils@12.23.6/node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../../../node_modules/.pnpm/motion-utils@12.23.6/node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../../../node_modules/.pnpm/motion-utils@12.23.6/node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../../../node_modules/.pnpm/motion-utils@12.23.6/node_modules/motion-utils/dist/es/easing/back.mjs","../../../node_modules/.pnpm/motion-utils@12.23.6/node_modules/motion-utils/dist/es/easing/anticipate.mjs","../../../node_modules/.pnpm/motion-utils@12.23.6/node_modules/motion-utils/dist/es/easing/circ.mjs","../../../node_modules/.pnpm/motion-utils@12.23.6/node_modules/motion-utils/dist/es/easing/ease.mjs","../../../node_modules/.pnpm/motion-utils@12.23.6/node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../../../node_modules/.pnpm/motion-utils@12.23.6/node_modules/motion-utils/dist/es/easing/utils/map.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/frameloop/order.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/frameloop/frame.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/value/types/color/index.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/utils/mix/number.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/utils/mix/color.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/utils/mix/index.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/utils/interpolate.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../../../node_modules/.pnpm/motion-utils@12.23.6/node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/utils/make-animation-instant.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/value/types/test.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/value/types/auto.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/value/types/int.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/utils/is-html-element.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/value/index.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/gestures/hover.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/gestures/press/index.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/html/use-html-visual-state.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/svg/use-svg-visual-state.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/motion/index.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/store.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/animation/utils/calc-child-stagger.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/events/event-info.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/utils/distance.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/projection/node/state.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../../node_modules/.pnpm/motion-dom@12.23.12/node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/utils/delay.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/gestures/hover.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/gestures/press.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/render/components/motion/feature-bundle.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/gestures/focus.mjs","../../../node_modules/.pnpm/framer-motion@12.23.12_reac_b8914230e9e02860960fb67e7a0fcdeb/node_modules/framer-motion/dist/es/motion/features/layout.mjs"],"sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticeably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`, \"cubic-bezier-length\");\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`, \"invalid-easing-type\");\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n    getAnimatableNone: (v) => {\n        const parsed = color.parse(v);\n        parsed.alpha = 0;\n        return color.transform(parsed);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : color.test(v) ? color.getAnimatableNone(v) : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`, \"color-not-animatable\");\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`, \"complex-values-different\");\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += Math.round(easing(i / (numPoints - 1)) * 10000) / 10000 + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\", \"spring-duration-limit\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\", \"range-length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`, \"spring-two-frames\");\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `Mini animate() doesn't support \"type\" as a string.`, \"mini-spring\");\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys that might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","function makeAnimationInstant(options) {\n    options.duration = 0;\n    options.type === \"keyframes\";\n}\n\nexport { makeAnimationInstant };\n","import { memo } from 'motion-utils';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    const subject = motionValue?.owner?.current;\n    /**\n     * We use this check instead of isHTMLElement() because we explicitly\n     * **don't** want elements in different timing contexts (i.e. popups)\n     * to be accelerated, as it's not possible to sync these animations\n     * properly with those driven from the main window frameloop.\n     */\n    if (!(subject instanceof HTMLElement)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { makeAnimationInstant } from './utils/make-animation-instant.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            makeAnimationInstant(options);\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". \"${isOriginAnimatable ? targetKeyframe : originKeyframe}\" is not an animatable value.`, \"value-not-animatable\");\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`, \"max-css-var-depth\");\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v) {\n        if (!this.passiveEffect) {\n            this.updateAndNotify(v);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { isHTMLElement } from 'motion-dom';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const parent = element.offsetParent;\n            const parentWidth = isHTMLElement(parent)\n                ? parent.offsetWidth || 0\n                : 0;\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n            size.right = parentWidth - size.width - size.left;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent, anchorX, root }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left, right } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        const x = anchorX === \"left\" ? `left: ${left}` : `right: ${right}`;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        const parent = root ?? document.head;\n        parent.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            ${x}px !important;\n            top: ${top}px !important;\n          }\n        `);\n        }\n        return () => {\n            if (parent.contains(style)) {\n                parent.removeChild(style);\n            }\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, root }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    let isReusedContext = true;\n    let context = useMemo(() => {\n        isReusedContext = false;\n        return {\n            id,\n            initial,\n            isPresent,\n            custom,\n            onExitComplete: (childId) => {\n                presenceChildren.set(childId, true);\n                for (const isComplete of presenceChildren.values()) {\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n                onExitComplete && onExitComplete();\n            },\n            register: (childId) => {\n                presenceChildren.set(childId, false);\n                return () => presenceChildren.delete(childId);\n            },\n        };\n    }, [isPresent, presenceChildren, onExitComplete]);\n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    if (presenceAffectsLayout && isReusedContext) {\n        context = { ...context };\n    }\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, root: root, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, anchorX = \"left\", root }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return null;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender?.();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && safeToRemove?.();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, root: root, onExitComplete: isPresent ? undefined : onExit, anchorX: anchorX, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (typeof isValidProp !== \"function\")\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attributes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction useRender(Component, props, ref, { latestValues, }, isStatic, forwardMotionProps = false) {\n    const useVisualProps = isSVGComponent(Component)\n        ? useSVGProps\n        : useHTMLProps;\n    const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n    const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n    const elementProps = Component !== Fragment ? { ...filteredProps, ...visualProps, ref } : {};\n    /**\n     * If component has been handed a motion value as its child,\n     * memoise its initial value and render that. Subsequent updates\n     * will be handled by the onChange handler\n     */\n    const { children } = props;\n    const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n    return createElement(Component, {\n        ...elementProps,\n        children: renderedChildren,\n    });\n}\n\nexport { useRender };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\n\nexport { makeUseVisualState };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useHTMLVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps,\n    createRenderState: createHtmlRenderState,\n});\n\nexport { useHTMLVisualState };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useSVGVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    createRenderState: createSvgRenderState,\n});\n\nexport { useSVGVisualState };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement =\n        createVisualElement ||\n            lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        visualElement.scheduleRenderMicrotask();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n        /**\n         * Now we've finished triggering animations for this element we\n         * can wipe the enteringChildren set for the next render.\n         */\n        visualElement.enteringChildren = undefined;\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { useRender } from '../render/dom/use-render.mjs';\nimport { isSVGComponent } from '../render/dom/utils/is-svg-component.mjs';\nimport { useHTMLVisualState } from '../render/html/use-html-visual-state.mjs';\nimport { useSVGVisualState } from '../render/svg/use-svg-visual-state.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent(Component, { forwardMotionProps = false } = {}, preloadedFeatures, createVisualElement) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    const useVisualState = isSVGComponent(Component)\n        ? useSVGVisualState\n        : useHTMLVisualState;\n    function MotionDOMComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, forwardMotionProps)] }));\n    }\n    MotionDOMComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionDOMComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage, \"lazy-strict-mode\")\n            : invariant(false, strictMessage, \"lazy-strict-mode\");\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { warnOnce } from 'motion-utils';\nimport { createMotionComponent } from '../../motion/index.mjs';\n\nfunction createMotionProxy(preloadedFeatures, createVisualElement) {\n    if (typeof Proxy === \"undefined\") {\n        return createMotionComponent;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const factory = (Component, options) => {\n        return createMotionComponent(Component, options, preloadedFeatures, createVisualElement);\n    };\n    /**\n     * Support for deprecated`motion(Component)` pattern\n     */\n    const deprecatedFactoryFunction = (Component, options) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return factory(Component, options);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return factory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, createMotionComponent(key, undefined, preloadedFeatures, createVisualElement));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone, microtask } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key]);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\", \"reduced-motion-disabled\");\n        }\n        this.parent?.addChild(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent?.removeChild(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    addChild(child) {\n        this.children.add(child);\n        this.enteringChildren ?? (this.enteringChildren = new Set());\n        this.enteringChildren.add(child);\n    }\n    removeChild(child) {\n        this.children.delete(child);\n        this.enteringChildren && this.enteringChildren.delete(child);\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n            this.scheduleRender();\n        });\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n    scheduleRenderMicrotask() {\n        microtask.render(this.render);\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addEventListener(\"change\", setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    const elementStyle = element.style;\n    let key;\n    for (key in style) {\n        // CSSStyleDeclaration has [index: number]: string; in the types, so we use that as key type.\n        elementStyle[key] = style[key];\n    }\n    // Write projection styles directly to element style\n    projection?.applyProjectionStyles(elementStyle, styleProp);\n    for (key in vars) {\n        // Loop over any CSS variables and assign those.\n        // They can only be assigned using `setProperty`.\n        elementStyle.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, makeAnimationInstant, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        makeAnimationInstant(options);\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        makeAnimationInstant(options);\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","function calcChildStagger(children, child, delayChildren, staggerChildren = 0, staggerDirection = 1) {\n    const index = Array.from(children)\n        .sort((a, b) => a.sortNodePosition(b))\n        .indexOf(child);\n    const numChildren = children.size;\n    const maxStaggerDuration = (numChildren - 1) * staggerChildren;\n    const delayIsFunction = typeof delayChildren === \"function\";\n    return delayIsFunction\n        ? delayChildren(index, numChildren)\n        : staggerDirection === 1\n            ? index * staggerChildren\n            : maxStaggerDuration - index * staggerChildren;\n}\n\nexport { calcChildStagger };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { calcChildStagger } from '../utils/calc-child-stagger.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, forwardDelay, delayChildren, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delay = 0, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    for (const child of visualElement.variantChildren) {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delay +\n                (typeof delayChildren === \"function\" ? 0 : delayChildren) +\n                calcChildStagger(visualElement.variantChildren, child, delayChildren, staggerChildren, staggerDirection),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    }\n    return Promise.all(animations);\n}\n\nexport { animateVariant };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { calcChildStagger } from '../../animation/utils/calc-child-stagger.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => {\n                    const options = { type };\n                    /**\n                     * If we're performing the initial animation, but we're not\n                     * rendering at the same time as the variant-controlling parent,\n                     * we want to use the parent's transition to calculate the stagger.\n                     */\n                    if (typeof animation === \"string\" &&\n                        isInitialRender &&\n                        !willAnimateViaParent &&\n                        visualElement.manuallyAnimateOnMount &&\n                        visualElement.parent) {\n                        const { parent } = visualElement;\n                        const parentVariant = resolveVariant(parent, animation);\n                        if (parent.enteringChildren && parentVariant) {\n                            const { delayChildren } = parentVariant.transition || {};\n                            options.delay = calcChildStagger(parent.enteringChildren, visualElement, delayChildren);\n                        }\n                    }\n                    return {\n                        animation: animation,\n                        options,\n                    };\n                }));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow = window, dragSnapToOrigin = false, distanceThreshold = 3, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursor.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= this.distanceThreshold;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.distanceThreshold = distanceThreshold;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        /**\n         * The latest pointer event. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPointerEvent = null;\n        /**\n         * The latest pan info. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPanInfo = null;\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false, distanceThreshold } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.stop(event, info);\n            this.latestPointerEvent = null;\n            this.latestPanInfo = null;\n        };\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            distanceThreshold,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    /**\n     * @internal\n     */\n    stop(event, panInfo) {\n        const finalEvent = event || this.latestPointerEvent;\n        const finalPanInfo = panInfo || this.latestPanInfo;\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging || !finalPanInfo || !finalEvent)\n            return;\n        const { velocity } = finalPanInfo;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(finalEvent, finalPanInfo));\n        }\n    }\n    /**\n     * @internal\n     */\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\", \"drag-constraints-ref\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\n/**\n * Track whether we've taken any snapshots yet. If not,\n * we can safely skip notification of didUpdate.\n *\n * Difficult to capture in a test but to prevent flickering\n * we must set this to true either on update or unmount.\n * Running `next-env/layout-id` in Safari will show this behaviour if broken.\n */\nlet hasTakenAnySnapshot = false;\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            if (hasTakenAnySnapshot) {\n                projection.root.didUpdate();\n            }\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        hasTakenAnySnapshot = true;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        hasTakenAnySnapshot = true;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, frame, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            this.animationCommitId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                let innerWidth = 0;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                // Set initial innerWidth in a frame.read callback to batch the read\n                frame.read(() => {\n                    innerWidth = window.innerWidth;\n                });\n                attachResizeListener(instance, () => {\n                    const newInnerWidth = window.innerWidth;\n                    if (newInnerWidth === innerWidth)\n                        return;\n                    innerWidth = newInnerWidth;\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                        /**\n                         * Set animation origin after starting animation to avoid layout jump\n                         * caused by stopping previous layout animation\n                         */\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            /**\n             * If this is a repeat of didUpdate then ignore the animation.\n             */\n            if (this.animationId <= this.animationCommitId) {\n                this.nodes.forEach(clearIsLayoutDirty);\n                return;\n            }\n            this.animationCommitId = this.animationId;\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            else {\n                this.isUpdating = false;\n                /**\n                 * Write\n                 */\n                this.nodes.forEach(resetTransformStyle);\n                /**\n                 * Read ==================\n                 */\n                // Update layout measurements of updated children\n                this.nodes.forEach(updateLayout);\n                /**\n                 * Write\n                 */\n                // Notify listeners that the layout is updated\n                this.nodes.forEach(notifyLayoutUpdate);\n            }\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop();\n            this.resumingFrom?.currentAnimation?.stop();\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    velocity: 0,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        applyProjectionStyles(targetStyle, // CSSStyleDeclaration - doesn't allow numbers to be assigned to properties\n        styleProp) {\n            if (!this.instance || this.isSVG)\n                return;\n            if (!this.isVisible) {\n                targetStyle.visibility = \"hidden\";\n                return;\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                targetStyle.visibility = \"\";\n                targetStyle.opacity = \"\";\n                targetStyle.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                targetStyle.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                if (this.options.layoutId) {\n                    targetStyle.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    targetStyle.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    targetStyle.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return;\n            }\n            targetStyle.visibility = \"\";\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            let transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                transform = transformTemplate(valuesToRender, transform);\n            }\n            targetStyle.transform = transform;\n            const { x, y } = this.projectionDelta;\n            targetStyle.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        targetStyle[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        targetStyle[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                targetStyle.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { createProjectionNode } from './create-projection-node.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { createDomVisualElement } from '../../dom/create-visual-element.mjs';\nimport { createMotionProxy } from '../create-proxy.mjs';\nimport { featureBundle } from './feature-bundle.mjs';\n\nconst motion = /*@__PURE__*/ createMotionProxy(featureBundle, createDomVisualElement);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n\nexport { featureBundle };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n"],"names":["jsxRuntimeModule","exports","f","require$$0","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","reactJsxRuntime_production_min","jsx","jsxs","LayoutGroupContext","createContext","useConstant","init","useRef","isBrowser","window","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","PresenceContext","addUniqueItem","arr","item","indexOf","push","removeItem","index","splice","clamp","min","max","v","MotionGlobalConfig","isNumericalString","test","isObject","value","isZeroValueString","memo","callback","result","noop","any","combineFunctions","pipe","transformers","reduce","progress","from","to","toFromDifference","SubscriptionManager","constructor","this","subscriptions","add","handler","notify","numSubscriptions","length","i","getSize","clear","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","velocityPerSecond","velocity","frameDuration","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","Math","abs","binarySubdivide","mirrorEasing","easing","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","easeIn","easeOut","easeInOut","isBezierDefinition","Array","isArray","easingLookup","linear","easingDefinitionToFunction","definition","x1","y1","x2","y2","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","acc","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","has","step","schedule","keepAlive","immediate","queue","cancel","delete","process","frameData","forEach","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","processBatch","useManualTiming","performance","now","frame","cancelFrame","frameSteps","requestAnimationFrame","clearTime","time","set","newTime","queueMicrotask","checkStringStartsWith","token","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","number","parse","parseFloat","transform","alpha","scale","default","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","Boolean","isNullish","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","substring","parseInt","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","getAnimatableNone","parsed","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","values","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","isNaN","_a","_b","transformer","map","hueToRgb","mixImmediate","mixNumber","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","origin","target","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","start","stop","generateLinearEasing","duration","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","initialGuess","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","options","keys","some","spring","optionsOrVisualDuration","visualDuration","keyframes","restSpeed","restDelta","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","interpolate","input","isClamp","ease","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","applyToOptions","generatorOptions","createGenerator","createGeneratorEasing","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","speed","resolvedKeyframes","filter","transitionTypeMap","decay","tween","replaceTransitionType","transition","WithPromise","updateFinished","finished","_finished","Promise","resolve","notifyFinished","then","onResolve","onReject","percentToProgress","JSAnimation","super","startTime","isStopped","currentTime","holdTime","playbackSpeed","motionValue","updatedAt","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","onUpdate","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","driver","newSpeed","hasChanged","onPlay","complete","onComplete","onCancel","stopDriver","sampleTime","attachTimeline","timeline","allowFlatten","observe","radToDeg","rad","rotate","angle","atan2","rebaseAngle","matrix2dParsers","y","translateX","translateY","scaleX","scaleY","rotateZ","skewX","atan","skewY","skew","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","includes","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","transformPropOrder","transformProps","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","width","paddingLeft","paddingRight","height","paddingTop","paddingBottom","top","_bbox","left","bottom","right","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","element","transformsToRestore","Map","removedTransforms","visualElement","getValue","get","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","isAsync","scheduleResolve","currentValue","valueAsRead","readValue","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","opacity","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","fill","iterations","direction","isGenerator","NativeAnimation","finishedTime","isPseudoElement","applyGeneratorOptions","animation","onfinish","keyframe","updateMotionValue","isCSSVar","style","setProperty","setStyle","commitStyles","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","sampleAnimation","setWithVelocity","isAnimatable","makeAnimationInstant","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","owner","HTMLElement","transformTemplate","getProps","supportsBrowserAnimation","catch","pendingTimeline","_onReject","finally","splitCSSVariableRegex","getVariableValue","depth","fallback","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","getValueTransition","positionalKeys","testValueType","dimensionValueTypes","findDimensionValueType","isNone","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","scaleZ","distance","perspective","transformPerspective","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","getValueAsType","isHTMLElement","MotionValue","canTrackVelocity","events","updateAndNotify","setPrevFrameValue","prev","setCurrent","change","dependents","dependent","dirty","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","addDependent","removeDependent","getPrevious","getVelocity","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","microtask","isDragging","isDragActive","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","isValidHover","event","pointerType","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","startEvent","currentTarget","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","addEventListener","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","tagName","tabIndex","hasAttribute","isSVGElement","isMotionValue","valueTypes","MotionConfigContext","transformPagePoint","isStatic","reducedMotion","PopChildMeasure","React.Component","getSnapshotBeforeUpdate","prevProps","childRef","isPresent","offsetParent","parentWidth","offsetWidth","size","sizeRef","offsetHeight","offsetTop","offsetLeft","componentDidUpdate","children","PopChild","anchorX","id","useId","nonce","useContext","useInsertionEffect","dataset","motionPopId","head","appendChild","sheet","insertRule","contains","removeChild","React.cloneElement","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","isReusedContext","context","useMemo","childId","isComplete","register","_","React.useEffect","Provider","usePresence","subscribe","safeToRemove","useCallback","getChildKey","onlyElements","filtered","Children","isValidElement","AnimatePresence","propagate","isParentPresent","presentChildren","presentKeys","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","exitingChildren","nextChildren","forceRender","Fragment","isEveryExitComplete","isExitComplete","LazyContext","strict","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","MotionContext","isAnimationControls","isVariantLabel","variantPriorityOrder","variantProps","isControllingVariants","isVariantNode","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","scaleCorrectors","isForcedMotionValue","layoutId","translateAlias","numTransforms","buildHTMLStyles","latestValues","vars","transformOrigin","hasTransform","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","visualState","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","whileTap","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","styleProp","viewBox","attrs","transformBox","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","Component","visualProps","rawStyles","lowercaseSVGElements","isSVGComponent","useRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","getValueState","resolveVariantFromProps","resolveMotionValue","makeLatestValues","presenceContext","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","transitionEnd","valueTarget","makeUseVisualState","config","make","scrapeMotionValuesFromProps","createRenderState","renderState","makeState","newValues","liveStyle","useHTMLVisualState","scrapeMotionValuesFromProps$1","charAt","toUpperCase","useSVGVisualState","motionComponentSymbol","isRefObject","useMotionRef","externalRef","instance","onMount","mount","unmount","camelToDash","str","optimizedAppearDataAttribute","SwitchLayoutGroupContext","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","initialLayoutGroupConfig","projection","initialPromotionConfig","dragConstraints","layoutScroll","layoutRoot","layoutCrossfade","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","crossfade","createProjectionNode","isMounted","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","updateFeatures","scheduleRenderMicrotask","animationState","animateChanges","MotionHandoffMarkAsComplete","enteringChildren","allowProjection","createMotionComponent","preloadedFeatures","features","loadFeatures","useVisualState","MotionDOMComponent","MeasureLayout","configAndProps","useLayoutId","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","createMotionProxy","Proxy","componentCache","factory","_target","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","point","originPoint","applyPointDelta","translate","boxScale","applyAxisDelta","axis","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","createBox","prefersReducedMotion","hasReducedMotionListener","visualElementStore","WeakMap","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","shouldReduceMotion","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","scheduleRender","baseTarget","initialValues","variantChildren","manuallyAnimateOnMount","willChange","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","initPrefersReducedMotion","addChild","remove","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","isTransformDirty","removeSyncCheck","MotionCheckAppearSync","sortNodePosition","other","sortInstanceNodePosition","featureDefinition","Feature","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","setStaticValue","prevPresenceContext","listener","nextValue","prevValue","addValue","hasValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getDefaultTransition","getTransformPagePoint","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","getBaseTarget","valueFromInitial","variant","args","DOMVisualElement","arguments","compareDocumentPosition","childSubscription","textContent","renderHTML","elementStyle","applyProjectionStyles","HTMLVisualElement","isProjecting","readTransformValue","computedStyle","camelCaseAttributes","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","createDomVisualElement","resolveVariant","isKeyframesTarget","setMotionValue","resolveFinalValueInKeyframes","addValueToWillChange","WillChange","newWillChange","getOptimisedAppearId","underDampedSpring","keyframesTransition","valueKey","animateMotionValue","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","isSync","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animations","animationTypeState","getState","MotionHandoffAnimation","appearId","all","setTarget","calcChildStagger","sort","numChildren","maxStaggerDuration","animateVariant","getAnimation","getChildAnimations","forwardDelay","animateChildren","first","last","shallowCompare","prevLength","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","willAnimateViaParent","parentVariant","fallbackAnimation","initialTransition","fallbackTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileDrag","whileFocus","node","updateAnimationControlsSubscription","unmountControls","prevAnimate","prevIsPresent","exitAnimation","addDomEvent","extractEventInfo","pageX","pageY","addPointerEvent","addPointerInfo","calcLength","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","eachAxis","getContextWindow","ownerDocument","defaultView","PanSession","handlers","contextWindow","dragSnapToOrigin","distanceThreshold","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","latestPointerEvent","latestPanInfo","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","finalEvent","finalPanInfo","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","hasTakenAnySnapshot","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","compareByDepth","FlatTree","isDirty","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","transformAxes","resetDistortingTransform","sharedAnimationValues","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","animationCommitId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","cancelDelay","innerWidth","resizeUnblockUpdate","newInnerWidth","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","animationOptions","setAnimationOrigin","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","_c","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","targetStyle","visibility","pointerEvents","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","handleHoverEvent","lifecycle","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","motion","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","_element","globalTapTarget","onFocus","isFocusVisible","onBlur","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent"],"mappings":"iGAGEA,EAAAC,qCCMW,IAAIC,EAAEC,IAAiBC,EAAEC,OAAOC,IAAI,iBAAiBC,EAAEF,OAAOC,IAAI,kBAAkBE,EAAEC,OAAOC,UAAUC,eAAeC,EAAEV,EAAEW,mDAAmDC,kBAAkBC,EAAE,CAACC,KAAI,EAAGC,KAAI,EAAGC,QAAO,EAAGC,UAAS,GAChP,SAASC,EAAEC,EAAEC,EAAEC,GAAG,IAAIC,EAAEC,EAAE,CAAA,EAAGC,EAAE,KAAKC,EAAE,KAAiF,IAAIH,UAAhF,IAASD,IAAIG,EAAE,GAAGH,QAAG,IAASD,EAAEN,MAAMU,EAAE,GAAGJ,EAAEN,UAAK,IAASM,EAAEL,MAAMU,EAAEL,EAAEL,KAAcK,EAAEd,EAAEoB,KAAKN,EAAEE,KAAKT,EAAEJ,eAAea,KAAKC,EAAED,GAAGF,EAAEE,IAAI,GAAGH,GAAGA,EAAEQ,aAAa,IAAIL,KAAKF,EAAED,EAAEQ,kBAAe,IAASJ,EAAED,KAAKC,EAAED,GAAGF,EAAEE,IAAI,MAAM,CAACM,SAAS1B,EAAE2B,KAAKV,EAAEL,IAAIU,EAAET,IAAIU,EAAEK,MAAMP,EAAEQ,OAAOrB,EAAEsB,QAAQ,QAACC,WAAiB5B,EAAE4B,EAAAC,IAAYhB,EAAEe,EAAAE,KAAajB,IDPvVjB,eEAnB,MAAMmC,EAAqBC,EAAAA,cAAc,ICMzC,SAASC,EAAYC,GACjB,MAAMxB,EAAMyB,EAAAA,OAAO,MAInB,OAHoB,OAAhBzB,EAAIiB,UACJjB,EAAIiB,QAAUO,KAEXxB,EAAIiB,OACf,CCfA,MAAMS,EAA8B,oBAAXC,OCGnBC,EAA4BF,EAAYG,EAAAA,gBAAkBC,EAAAA,UCG1DC,EACUT,EAAAA,cAAc,MCP9B,SAASU,EAAcC,EAAKC,IACE,IAAtBD,EAAIE,QAAQD,IACZD,EAAIG,KAAKF,EACjB,CACA,SAASG,EAAWJ,EAAKC,GACrB,MAAMI,EAAQL,EAAIE,QAAQD,GACtBI,GAAQ,GACRL,EAAIM,OAAOD,EAAO,EAC1B,CCRA,MAAME,EAAQ,CAACC,EAAKC,EAAKC,IACjBA,EAAID,EACGA,EACPC,EAAIF,EACGA,EACJE,ECLX,MAAMC,EAAqB,CAAA,ECGrBC,EAAqBF,GAAM,+BAA+BG,KAAKH,GCHrE,SAASI,EAASC,GACd,MAAwB,iBAAVA,GAAgC,OAAVA,CACxC,CCCA,MAAMC,EAAqBN,GAAM,cAAcG,KAAKH,GCFpD,SAASO,EAAKC,GACV,IAAIC,EACJ,MAAO,UACY,IAAXA,IACAA,EAASD,KACNC,EAEf,CCPA,MAAMC,EAAQC,GAAQA,ECMhBC,EAAmB,CAAClD,EAAGE,IAAOoC,GAAMpC,EAAEF,EAAEsC,IACxCa,EAAO,IAAIC,IAAiBA,EAAaC,OAAOH,GCKhDI,EAAW,CAACC,EAAMC,EAAIb,KACxB,MAAMc,EAAmBD,EAAKD,EAC9B,OAA4B,IAArBE,EAAyB,GAAKd,EAAQY,GAAQE,GCbzD,MAAMC,EACF,WAAAC,GACIC,KAAKC,cAAgB,EACzB,CACA,GAAAC,CAAIC,GAEA,OADApC,EAAciC,KAAKC,cAAeE,GAC3B,IAAM/B,EAAW4B,KAAKC,cAAeE,EAChD,CACA,MAAAC,CAAOhE,EAAGE,EAAGH,GACT,MAAMkE,EAAmBL,KAAKC,cAAcK,OAC5C,GAAKD,EAEL,GAAyB,IAArBA,EAIAL,KAAKC,cAAc,GAAG7D,EAAGE,EAAGH,QAG5B,IAAA,IAASoE,EAAI,EAAGA,EAAIF,EAAkBE,IAAK,CAKvC,MAAMJ,EAAUH,KAAKC,cAAcM,GACnCJ,GAAWA,EAAQ/D,EAAGE,EAAGH,EAC7B,CAER,CACA,OAAAqE,GACI,OAAOR,KAAKC,cAAcK,MAC9B,CACA,KAAAG,GACIT,KAAKC,cAAcK,OAAS,CAChC,EC7BJ,MAAMI,EAAyBC,GAAsB,IAAVA,EAErCC,EAAyBC,GAAiBA,EAAe,ICH/D,SAASC,EAAkBC,EAAUC,GACjC,OAAOA,EAAgBD,GAAY,IAAOC,GAAiB,CAC/D,CCYA,MAAMC,EAAa,CAACC,EAAGC,EAAIC,OAAU,EAAM,EAAMA,EAAK,EAAMD,GAAMD,GAAK,EAAME,EAAK,EAAMD,IAAOD,EAAI,EAAMC,GACrGD,EAoBJ,SAASG,EAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAOrC,EACX,MAAMsC,EAAYC,GArBtB,SAAyBC,EAAGC,EAAYC,EAAYR,EAAKE,GACrD,IAAIO,EACAC,EACAzB,EAAI,EACR,GACIyB,EAAWH,GAAcC,EAAaD,GAAc,EACpDE,EAAWd,EAAWe,EAAUV,EAAKE,GAAOI,EACxCG,EAAW,EACXD,EAAaE,EAGbH,EAAaG,QAEZC,KAAKC,IAAIH,GAfO,QAgBnBxB,EAfuB,IAgB7B,OAAOyB,CACX,CAK6BG,CAAgBR,EAAI,EAAG,EAAGL,EAAKE,GAExD,OAAQN,GAAY,IAANA,GAAiB,IAANA,EAAUA,EAAID,EAAWS,EAASR,GAAIK,EAAKE,EACxE,CC9CA,MAAMW,EAAgBC,GAAYxG,GAAMA,GAAK,GAAMwG,EAAO,EAAIxG,GAAK,GAAK,EAAIwG,EAAO,GAAK,EAAIxG,KAAO,ECA7FyG,EAAiBD,GAAYxG,GAAM,EAAIwG,EAAO,EAAIxG,GCElD0G,EAAwBlB,EAAY,IAAM,KAAM,IAAM,KACtDmB,IAAqCD,GACrCE,IAAuCD,GCJvCE,EAAc7G,IAAOA,GAAK,GAAK,EAAI,GAAM2G,EAAO3G,GAAK,IAAO,EAAIoG,KAAKU,IAAI,GAAG,IAAO9G,EAAI,KCCvF+G,EAAU/G,GAAM,EAAIoG,KAAKY,IAAIZ,KAAKa,KAAKjH,IACvCkH,EAAUT,EAAcM,GACxBI,EAAYZ,EAAaQ,GCHzBK,EAAuB5B,EAAY,IAAM,EAAG,EAAG,GAC/C6B,EAAwB7B,EAAY,EAAG,EAAG,IAAM,GAChD8B,EAA0B9B,EAAY,IAAM,EAAG,IAAM,GCJrD+B,EAAsBf,GAAWgB,MAAMC,QAAQjB,IAAgC,iBAAdA,EAAO,GCSxEkB,EAAe,CACjBC,OAAQpE,EACR6D,SACAE,YACAD,UACAN,SACAI,YACAD,UACAP,SACAC,YACAF,UACAG,cAKEe,EAA8BC,IAChC,GAAIN,EAAmBM,GAAa,CAEtBA,EAAWpD,OACrB,MAAOqD,EAAIC,EAAIC,EAAIC,GAAMJ,EACzB,OAAOrC,EAAYsC,EAAIC,EAAIC,EAAIC,EACnC,CAAA,MARyB,iBASFJ,EAGZH,EAAaG,GAEjBA,GCrCLK,EAAa,CACf,QACA,OACA,mBACA,YACA,SACA,YACA,SACA,cCHJ,SAASC,EAAoBC,EAAmBC,GAC5C,IAAIC,GAAe,EACfC,GAAoB,EACxB,MAAMC,EAAQ,CACVC,MAAO,EACPC,UAAW,EACXC,cAAc,GAEZC,EAAmB,IAAON,GAAe,EACzCO,EAAQX,EAAWtE,OAAO,CAACkF,EAAK7I,KAClC6I,EAAI7I,GCbZ,SAA0BqI,GAKtB,IAAIS,MAAgBC,IAChBC,MAAgBD,IAKhBL,GAAe,EACfO,GAAiB,EAIrB,MAAMC,MAAkBC,QACxB,IAAIC,EAAkB,CAClBZ,MAAO,EACPC,UAAW,EACXC,cAAc,GAGlB,SAASW,EAAgBjG,GACjB8F,EAAYI,IAAIlG,KAChBmG,EAAKC,SAASpG,GACdiF,KAGJjF,EAASgG,EACb,CACA,MAAMG,EAAO,CAITC,SAAU,CAACpG,EAAUqG,GAAY,EAAOC,GAAY,KAChD,MACMC,EADoBD,GAAahB,EACLI,EAAYE,EAK9C,OAJIS,GACAP,EAAY9E,IAAIhB,GACfuG,EAAML,IAAIlG,IACXuG,EAAMvF,IAAIhB,GACPA,GAKXwG,OAASxG,IACL4F,EAAUa,OAAOzG,GACjB8F,EAAYW,OAAOzG,IAKvB0G,QAAUC,IACNX,EAAkBW,EAMdrB,EACAO,GAAiB,GAGrBP,GAAe,GACdI,EAAWE,GAAa,CAACA,EAAWF,GAErCA,EAAUkB,QAAQX,GAUlBP,EAAUnE,QACV+D,GAAe,EACXO,IACAA,GAAiB,EACjBM,EAAKO,QAAQC,OAIzB,OAAOR,CACX,CD1EmBU,CAAiBtB,GACrBE,GACR,CAAA,IACGqB,MAAEA,OAAOC,EAAAC,iBAAMA,EAAAC,UAAkBA,SAAWC,EAAAC,UAAQA,EAAAC,OAAWA,EAAAC,WAAQA,GAAgB7B,EACvF8B,EAAe,KACjB,MAAMjC,EAAY5F,EAAmB8H,gBAC/BpC,EAAME,UACNmC,YAAYC,MAClBxC,GAAe,EACVxF,EAAmB8H,kBACpBpC,EAAMC,MAAQF,EACR,IAAO,GACPnC,KAAKxD,IAAIwD,KAAKzD,IAAI+F,EAAYF,EAAME,UAvBnC,IAuB2D,IAEtEF,EAAME,UAAYA,EAClBF,EAAMG,cAAe,EAErBwB,EAAMJ,QAAQvB,GACd4B,EAAKL,QAAQvB,GACb6B,EAAiBN,QAAQvB,GACzB8B,EAAUP,QAAQvB,GAClB+B,EAAOR,QAAQvB,GACfgC,EAAUT,QAAQvB,GAClBiC,EAAOV,QAAQvB,GACfkC,EAAWX,QAAQvB,GACnBA,EAAMG,cAAe,EACjBL,GAAgBD,IAChBE,GAAoB,EACpBH,EAAkBuC,KAwB1B,MAAO,CAAElB,SAdQvB,EAAWtE,OAAO,CAACkF,EAAK7I,KACrC,MAAMuJ,EAAOX,EAAM5I,GAMnB,OALA6I,EAAI7I,GAAO,CAAC8J,EAASL,GAAY,EAAOC,GAAY,KAC3CrB,IATTA,GAAe,EACfC,GAAoB,EACfC,EAAMG,cACPP,EAAkBuC,IAQXnB,EAAKC,SAASM,EAASL,EAAWC,IAEtCb,GACR,CAAA,GAMgBe,OALHE,IACZ,IAAA,IAASrF,EAAI,EAAGA,EAAIwD,EAAWzD,OAAQC,IACnCmE,EAAMX,EAAWxD,IAAImF,OAAOE,IAGTvB,QAAOK,QACtC,CEjEA,MAAQY,SAAUsB,EAAOlB,OAAQmB,EAAaxC,MAAOwB,EAAWnB,MAAOoC,KAAqF,oBAA1BC,sBAAwCA,sBAAwB3H,GAAM,GCAxM,IAAIuH,EACJ,SAASK,IACLL,OAAM,CACV,CASA,MAAMM,EAAO,CACTN,IAAK,UACW,IAARA,GACAM,EAAKC,IAAIrB,EAAUrB,cAAgB7F,EAAmB8H,gBAChDZ,EAAUtB,UACVmC,YAAYC,OAEfA,GAEXO,IAAMC,IACFR,EAAMQ,EACNC,eAAeJ,KC1BjBK,GAAyBC,GAAWxL,GAAuB,iBAARA,GAAoBA,EAAIyL,WAAWD,GACtFE,MAC8B,MAC9BC,MAC8B,UAC9BC,GAAsB3I,KACA0I,GAAsB1I,IAIvC4I,GAAuB9I,KAAKE,EAAM6I,MAAM,MAAM,GAAGC,QAEtDF,GAAyB,sFCVzBG,GAAS,CACXjJ,KAAOH,GAAmB,iBAANA,EACpBqJ,MAAOC,WACPC,UAAYvJ,GAAMA,GAEhBwJ,GAAQ,IACPJ,GACHG,UAAYvJ,GAAMH,EAAM,EAAG,EAAGG,IAE5ByJ,GAAQ,IACPL,GACHM,QAAS,GCXPC,GAAY3J,GAAMuD,KAAKqG,MAAU,IAAJ5J,GAAc,ICF3C6J,GAAa,8BCAnB,MAAMC,GAAmB,sHCQnBC,GAAgB,CAAC5L,EAAM6L,IAAchK,GAChCiK,QAAsB,iBAANjK,GACnB8J,GAAiB3J,KAAKH,IACtBA,EAAE6I,WAAW1K,IACZ6L,ICZT,SAAmBhK,GACf,OAAY,MAALA,CACX,CDWakK,CAAUlK,IACXnD,OAAOC,UAAUC,eAAeiB,KAAKgC,EAAGgK,IAE9CG,GAAa,CAACC,EAAOC,EAAOC,IAAWtK,IACzC,GAAiB,iBAANA,EACP,OAAOA,EACX,MAAOtC,EAAGE,EAAGH,EAAG+L,GAASxJ,EAAEuK,MAAMV,IACjC,MAAO,CACHO,CAACA,GAAQd,WAAW5L,GACpB2M,CAACA,GAAQf,WAAW1L,GACpB0M,CAACA,GAAQhB,WAAW7L,GACpB+L,WAAiB,IAAVA,EAAsBF,WAAWE,GAAS,IElBnDgB,GAAU,IACTpB,GACHG,UAAYvJ,GAAMuD,KAAKqG,MAHN,CAAC5J,GAAMH,EAAM,EAAG,IAAKG,GAGTyK,CAAazK,KAExC0K,GAAO,CACTvK,KAAoB4J,GAAc,MAAO,OACzCV,MAAqBc,GAAW,MAAO,QAAS,QAChDZ,UAAW,EAAGoB,MAAKC,QAAOC,OAAMrB,MAAOsB,EAAU,KAAQ,QACrDN,GAAQjB,UAAUoB,GAClB,KACAH,GAAQjB,UAAUqB,GAClB,KACAJ,GAAQjB,UAAUsB,GAClB,KACAlB,GAASH,GAAMD,UAAUuB,IACzB,KCYR,MAAMC,GAAM,CACR5K,QAAkC,KAClCkJ,MAhCJ,SAAkBrJ,GACd,IAAIgL,EAAI,GACJrN,EAAI,GACJC,EAAI,GACJF,EAAI,GAmBR,OAjBIsC,EAAE4B,OAAS,GACXoJ,EAAIhL,EAAEiL,UAAU,EAAG,GACnBtN,EAAIqC,EAAEiL,UAAU,EAAG,GACnBrN,EAAIoC,EAAEiL,UAAU,EAAG,GACnBvN,EAAIsC,EAAEiL,UAAU,EAAG,KAInBD,EAAIhL,EAAEiL,UAAU,EAAG,GACnBtN,EAAIqC,EAAEiL,UAAU,EAAG,GACnBrN,EAAIoC,EAAEiL,UAAU,EAAG,GACnBvN,EAAIsC,EAAEiL,UAAU,EAAG,GACnBD,GAAKA,EACLrN,GAAKA,EACLC,GAAKA,EACLF,GAAKA,GAEF,CACHiN,IAAKO,SAASF,EAAG,IACjBJ,MAAOM,SAASvN,EAAG,IACnBkN,KAAMK,SAAStN,EAAG,IAClB4L,MAAO9L,EAAIwN,SAASxN,EAAG,IAAM,IAAM,EAE3C,EAII6L,UAAWmB,GAAKnB,WCnCd4B,GAAkBC,IAAA,CACpBjL,KAAOH,GAAmB,iBAANA,GAAkBA,EAAEqL,SAASD,IAAiC,IAAxBpL,EAAEkJ,MAAM,KAAKtH,OACvEyH,MAAOC,WACPC,UAAYvJ,GAAM,GAAGA,IAAIoL,MAEvBE,MAAuC,OACvCC,MAAuC,KACvCC,MAAkC,MAClCC,MAAkC,MAClCC,MAAkC,MAClCC,GAAoC,MAAA,IACnCJ,GACHlC,MAAQrJ,GAAMuL,GAAQlC,MAAMrJ,GAAK,IACjCuJ,UAAYvJ,GAAMuL,GAAQhC,UAAc,IAAJvJ,KAHE,GCNpC4L,GAAO,CACTzL,KAAoB4J,GAAc,MAAO,OACzCV,MAAqBc,GAAW,MAAO,aAAc,aACrDZ,UAAW,EAAGsC,MAAKC,aAAYC,YAAWvC,MAAOsB,EAAU,KAC/C,QACJvH,KAAKqG,MAAMiC,GACX,KACAN,GAAQhC,UAAUI,GAASmC,IAC3B,KACAP,GAAQhC,UAAUI,GAASoC,IAC3B,KACApC,GAASH,GAAMD,UAAUuB,IACzB,KCbNkB,GAAQ,CACV7L,KAAOH,GAAM0K,GAAKvK,KAAKH,IAAM+K,GAAI5K,KAAKH,IAAM4L,GAAKzL,KAAKH,GACtDqJ,MAAQrJ,GACA0K,GAAKvK,KAAKH,GACH0K,GAAKrB,MAAMrJ,GAEb4L,GAAKzL,KAAKH,GACR4L,GAAKvC,MAAMrJ,GAGX+K,GAAI1B,MAAMrJ,GAGzBuJ,UAAYvJ,GACY,iBAANA,EACRA,EACAA,EAAEjD,eAAe,OACb2N,GAAKnB,UAAUvJ,GACf4L,GAAKrC,UAAUvJ,GAE7BiM,kBAAoBjM,IAChB,MAAMkM,EAASF,GAAM3C,MAAMrJ,GAE3B,OADAkM,EAAO1C,MAAQ,EACRwC,GAAMzC,UAAU2C,KC3BzBC,GAAa,qHCYnB,MAAMC,GAAe,SACfC,GAAc,QAKdC,GAAe,kOACrB,SAASC,GAAoBlM,GACzB,MAAMmM,EAAgBnM,EAAMoM,WACtBC,EAAS,GACTC,EAAU,CACZX,MAAO,GACP5C,OAAQ,GACRwD,IAAK,IAEHC,EAAQ,GACd,IAAIhL,EAAI,EACR,MAmBMqH,EAnBYsD,EAAcM,QAAQR,GAAeS,IAC/Cf,GAAM7L,KAAK4M,IACXJ,EAAQX,MAAMvM,KAAKoC,GACnBgL,EAAMpN,KAAK4M,IACXK,EAAOjN,KAAKuM,GAAM3C,MAAM0D,KAEnBA,EAAYlE,WApBF,SAqBf8D,EAAQC,IAAInN,KAAKoC,GACjBgL,EAAMpN,KAvBA,OAwBNiN,EAAOjN,KAAKsN,KAGZJ,EAAQvD,OAAO3J,KAAKoC,GACpBgL,EAAMpN,KAAK2M,IACXM,EAAOjN,KAAK6J,WAAWyD,OAEzBlL,EA7BU,QAgCQqH,MAhCR,OAiChB,MAAO,CAAEwD,SAAQxD,QAAOyD,UAASE,QACrC,CACA,SAASG,GAAkBhN,GACvB,OAAOuM,GAAoBvM,GAAG0M,MAClC,CACA,SAASO,GAAkBC,GACvB,MAAMhE,MAAEA,EAAA2D,MAAOA,GAAUN,GAAoBW,GACvCC,EAAcjE,EAAMtH,OAC1B,OAAQ5B,IACJ,IAAIoN,EAAS,GACb,IAAA,IAASvL,EAAI,EAAGA,EAAIsL,EAAatL,IAE7B,GADAuL,GAAUlE,EAAMrH,QACH,IAAT7B,EAAE6B,GAAkB,CACpB,MAAM1D,EAAO0O,EAAMhL,GAEfuL,GADAjP,IAASiO,GACCzC,GAAS3J,EAAE6B,IAEhB1D,IAASkO,GACJL,GAAMzC,UAAUvJ,EAAE6B,IAGlB7B,EAAE6B,EAEpB,CAEJ,OAAOuL,EAEf,CACA,MAAMC,GAAwBrN,GAAmB,iBAANA,EAAiB,EAAIgM,GAAM7L,KAAKH,GAAKgM,GAAMC,kBAAkBjM,GAAKA,EAM7G,MAAMsN,GAAU,CACZnN,KA/EJ,SAAcH,WACV,OAAQuN,MAAMvN,IACG,iBAANA,KACN,OAAAwN,IAAEjD,MAAMV,UAAR,EAAA2D,EAAqB5L,SAAU,KAC3B,OAAA6L,EAAAzN,EAAEuK,MAAM4B,UAAR,EAAAsB,EAAqB7L,SAAU,GAChC,CACZ,EA0EIyH,MAAO2D,GACPC,qBACJhB,kBATA,SAA2BjM,GACvB,MAAMkM,EAASc,GAAkBhN,GAEjC,OADoBiN,GAAkBjN,EAC/B0N,CAAYxB,EAAOyB,IAAIN,IAClC,GCjFA,SAASO,GAASzQ,EAAGK,EAAGgF,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDrF,EAAc,GAATK,EAAIL,GAASqF,EACzBA,EAAI,GACGhF,EACPgF,EAAI,EAAI,EACDrF,GAAKK,EAAIL,IAAM,EAAI,EAAIqF,GAAK,EAChCrF,CACX,CCbA,SAAS0Q,GAAanQ,EAAGE,GACrB,OAAQT,GAAOA,EAAI,EAAIS,EAAIF,CAC/B,CCmBA,MAAMoQ,GAAY,CAAC7M,EAAMC,EAAIF,IAClBC,GAAQC,EAAKD,GAAQD,ECX1B+M,GAAiB,CAAC9M,EAAMC,EAAIlB,KAC9B,MAAMgO,EAAW/M,EAAOA,EAClBgN,EAAOjO,GAAKkB,EAAKA,EAAK8M,GAAYA,EACxC,OAAOC,EAAO,EAAI,EAAI1K,KAAK2K,KAAKD,IAE9BE,GAAa,CAACpD,GAAKL,GAAMkB,IAE/B,SAASwC,GAAOpC,GACZ,MAAM7N,GAFY6B,EAEQgM,EAFFmC,GAAWE,KAAMlQ,GAASA,EAAKgC,KAAKH,KAA3C,IAACA,EAIlB,IAAKiK,QAAQ9L,GACT,OAAO,EACX,IAAImQ,EAAQnQ,EAAKkL,MAAM2C,GAKvB,OAJI7N,IAASyN,KAET0C,EHZR,UAAoBzC,IAAEA,EAAAC,WAAKA,YAAYC,EAAWvC,MAAAA,IAC9CqC,GAAO,IAEPE,GAAa,IACb,IAAIpB,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GALAiB,GAAc,IAQT,CACD,MAAMtO,EAAIuO,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrC3O,EAAI,EAAI4O,EAAYvO,EAC1BmN,EAAMiD,GAASzQ,EAAGK,EAAGqO,EAAM,EAAI,GAC/BjB,EAAQgD,GAASzQ,EAAGK,EAAGqO,GACvBhB,EAAO+C,GAASzQ,EAAGK,EAAGqO,EAAM,EAAI,EACpC,MAVIlB,EAAMC,EAAQC,EAAOkB,EAWzB,MAAO,CACHpB,IAAKpH,KAAKqG,MAAY,IAANe,GAChBC,MAAOrH,KAAKqG,MAAc,IAARgB,GAClBC,KAAMtH,KAAKqG,MAAa,IAAPiB,GACjBrB,MAAAA,EAER,CGbgB+E,CAAWD,IAEhBA,CACX,CACA,MAAME,GAAW,CAACvN,EAAMC,KACpB,MAAMuN,EAAWL,GAAOnN,GAClByN,EAASN,GAAOlN,GACtB,IAAKuN,IAAaC,EACd,OAAOb,GAAa5M,EAAMC,GAE9B,MAAMyN,EAAU,IAAKF,GACrB,OAAQzO,IACJ2O,EAAQhE,IAAMoD,GAAeU,EAAS9D,IAAK+D,EAAO/D,IAAK3K,GACvD2O,EAAQ/D,MAAQmD,GAAeU,EAAS7D,MAAO8D,EAAO9D,MAAO5K,GAC7D2O,EAAQ9D,KAAOkD,GAAeU,EAAS5D,KAAM6D,EAAO7D,KAAM7K,GAC1D2O,EAAQnF,MAAQsE,GAAUW,EAASjF,MAAOkF,EAAOlF,MAAOxJ,GACjD0K,GAAKnB,UAAUoF,KC1CxBC,GAAkB,IAAIzI,IAAI,CAAC,OAAQ,WCSzC,SAAS2H,GAAUpQ,EAAGE,GAClB,OAAQT,GAAM0R,GAAYnR,EAAGE,EAAGT,EACpC,CACA,SAAS2R,GAASpR,GACd,MAAiB,iBAANA,EACAoQ,GAEW,iBAANpQ,EACLsL,GAAmBtL,GACpBmQ,GACA7B,GAAM7L,KAAKzC,GACP8Q,GACAO,GAELpK,MAAMC,QAAQlH,GACZsR,GAEW,iBAANtR,EACLsO,GAAM7L,KAAKzC,GAAK8Q,GAAWS,GAE/BpB,EACX,CACA,SAASmB,GAAStR,EAAGE,GACjB,MAAMwP,EAAS,IAAI1P,GACbwR,EAAY9B,EAAOxL,OACnBuN,EAAazR,EAAEiQ,IAAI,CAAC3N,EAAG6B,IAAMiN,GAAS9O,EAAT8O,CAAY9O,EAAGpC,EAAEiE,KACpD,OAAQ1E,IACJ,IAAA,IAAS0E,EAAI,EAAGA,EAAIqN,EAAWrN,IAC3BuL,EAAOvL,GAAKsN,EAAWtN,GAAG1E,GAE9B,OAAOiQ,EAEf,CACA,SAAS6B,GAAUvR,EAAGE,GAClB,MAAMwP,EAAS,IAAK1P,KAAME,GACpBuR,EAAa,CAAA,EACnB,IAAA,MAAW/R,KAAOgQ,OACC,IAAX1P,EAAEN,SAAiC,IAAXQ,EAAER,KAC1B+R,EAAW/R,GAAO0R,GAASpR,EAAEN,GAAX0R,CAAiBpR,EAAEN,GAAMQ,EAAER,KAGrD,OAAQ4C,IACJ,IAAA,MAAW5C,KAAO+R,EACd/B,EAAOhQ,GAAO+R,EAAW/R,GAAK4C,GAElC,OAAOoN,EAEf,CAaA,MAAM2B,GAAa,CAACK,EAAQC,KACxB,MAAMC,EAAWhC,GAAQL,kBAAkBoC,GACrCE,EAAchD,GAAoB6C,GAClCI,EAAcjD,GAAoB8C,GAIxC,OAHuBE,EAAY5C,QAAQC,IAAIhL,SAAW4N,EAAY7C,QAAQC,IAAIhL,QAC9E2N,EAAY5C,QAAQX,MAAMpK,SAAW4N,EAAY7C,QAAQX,MAAMpK,QAC/D2N,EAAY5C,QAAQvD,OAAOxH,QAAU4N,EAAY7C,QAAQvD,OAAOxH,OAE3DgN,GAAgBlI,IAAI0I,KACpBI,EAAY9C,OAAO9K,QACnBgN,GAAgBlI,IAAI2I,KAChBE,EAAY7C,OAAO9K,OD1EpC,SAAuBwN,EAAQC,GAC3B,OAAIT,GAAgBlI,IAAI0I,GACZjS,GAAOA,GAAK,EAAIiS,EAASC,EAGzBlS,GAAOA,GAAK,EAAIkS,EAASD,CAEzC,CCoEmBK,CAAcL,EAAQC,GAE1BxO,EAAKmO,GA1BpB,SAAoBI,EAAQC,GACxB,MAAMK,EAAgB,GAChBC,EAAW,CAAE3D,MAAO,EAAGY,IAAK,EAAGxD,OAAQ,GAC7C,IAAA,IAASvH,EAAI,EAAGA,EAAIwN,EAAO3C,OAAO9K,OAAQC,IAAK,CAC3C,MAAM1D,EAAOkR,EAAOxC,MAAMhL,GACpB+N,EAAcR,EAAOzC,QAAQxO,GAAMwR,EAASxR,IAC5C0R,EAAcT,EAAO1C,OAAOkD,IAAgB,EAClDF,EAAc7N,GAAKgO,EACnBF,EAASxR,IACb,CACA,OAAOuR,CACX,CAe6BI,CAAWP,EAAaC,GAAcA,EAAY9C,QAAS4C,GAIzEzB,GAAauB,EAAQC,ICpFpC,SAASU,GAAI9O,EAAMC,EAAI/D,GACnB,GAAoB,iBAAT8D,GACO,iBAAPC,GACM,iBAAN/D,EACP,OAAO2Q,GAAU7M,EAAMC,EAAI/D,GAG/B,OADc2R,GAAS7N,EAChB+O,CAAM/O,EAAMC,EACvB,CCRA,MAAM+O,GAAmBvI,IACrB,MAAMwI,EAAgB,EAAGrK,eAAgB6B,EAAO7B,GAChD,MAAO,CACHsK,MAAO,CAACtJ,GAAY,IAASqB,EAAMR,OAAOwI,EAAerJ,GACzDuJ,KAAM,IAAMjI,EAAY+H,GAKxBjI,IAAK,IAAOd,EAAUrB,aAAeqB,EAAUtB,UAAY0C,EAAKN,QCZlEoI,GAAuB,CAAC1M,EAAQ2M,EACtCC,EAAa,MAET,IAAIC,EAAS,GACb,MAAMC,EAAYlN,KAAKxD,IAAIwD,KAAKqG,MAAM0G,EAAWC,GAAa,GAC9D,IAAA,IAAS1O,EAAI,EAAGA,EAAI4O,EAAW5O,IAC3B2O,GAAUjN,KAAKqG,MAAoC,IAA9BjG,EAAO9B,GAAK4O,EAAY,KAAe,IAAQ,KAExE,MAAO,UAAUD,EAAOvF,UAAU,EAAGuF,EAAO5O,OAAS,OCJnD8O,GAAuB,IAC7B,SAASC,GAAsBC,GAC3B,IAAIN,EAAW,EAEf,IAAI3K,EAAQiL,EAAUC,KAAKP,GAC3B,MAAQ3K,EAAMmL,MAAQR,EAAWI,IAC7BJ,GAHa,GAIb3K,EAAQiL,EAAUC,KAAKP,GAE3B,OAAOA,GAAYI,GAAuBK,IAAWT,CACzD,CCXA,SAASU,GAAsBC,EAAczO,EAAGlE,GAC5C,MAAM4S,EAAQ3N,KAAKxD,IAAIyC,EAFI,EAEwB,GACnD,OAAOJ,EAAkB9D,EAAU2S,EAAaC,GAAQ1O,EAAI0O,EAChE,CCNA,MAAMC,GAES,IAFTA,GAGO,GAHPA,GAII,EAJJA,GAKQ,EALRA,GAOQ,IAPRA,GAQM,GARNA,GASc,GATdA,GAWS,CACPC,SAAU,IACV1H,QAAS,GAbXyH,GAeS,CACPC,SAAU,KACV1H,QAAS,IAjBXyH,GAoBW,IApBXA,GAqBW,GArBXA,GAsBU,IAtBVA,GAuBU,ECpBVE,GAAU,KAChB,SAASC,IAAWhB,SAAEA,EAAWa,UAAyBI,EAASJ,GAAe9O,SAAQA,EAAW8O,GAAeK,KAAUA,EAAOL,KACjI,IAAIM,EACAC,EAEAC,EAAe,EAAIJ,EAIvBI,EAAe9R,EAAMsR,GAA2BA,GAA2BQ,GAC3ErB,EAAWzQ,EAAMsR,GAA4BA,GAA4BjP,EAAsBoO,IAC3FqB,EAAe,GAIfF,EAAYG,IACR,MAAMC,EAAmBD,EAAeD,EAClC/L,EAAQiM,EAAmBvB,EAC3B5S,EAAImU,EAAmBxP,EACvBzE,EAAIkU,GAAgBF,EAAcD,GAClClU,EAAI8F,KAAKwO,KAAKnM,GACpB,OAAOyL,GAAW3T,EAAIE,EAAKH,GAE/BiU,EAAcE,IACV,MACMhM,EADmBgM,EAAeD,EACPrB,EAC3BzS,EAAI+H,EAAQvD,EAAWA,EACvBvE,EAAIyF,KAAKU,IAAI0N,EAAc,GAAKpO,KAAKU,IAAI2N,EAAc,GAAKtB,EAC5DhU,EAAIiH,KAAKwO,KAAKnM,GACdjI,EAAImU,GAAgBvO,KAAKU,IAAI2N,EAAc,GAAID,GAErD,QADgBF,EAASG,GAAgBP,GAAU,GAAI,EAAK,KACzCxT,EAAIC,GAAKxB,GAAMqB,KAOtC8T,EAAYG,GACErO,KAAKwO,KAAKH,EAAetB,KACxBsB,EAAevP,GAAYiO,EAAW,GAC1C,KAEXoB,EAAcE,GACArO,KAAKwO,KAAKH,EAAetB,IACIA,EAAWA,GAAvCjO,EAAWuP,KAI9B,MACMA,EAmBV,SAAyBH,EAAUC,EAAYM,GAC3C,IAAIvR,EAASuR,EACb,IAAA,IAASnQ,EAAI,EAAGA,EAAIoQ,GAAgBpQ,IAChCpB,GAAkBgR,EAAShR,GAAUiR,EAAWjR,GAEpD,OAAOA,CACX,CAzByByR,CAAgBT,EAAUC,EAD1B,EAAIpB,GAGzB,GADAA,IAAiCA,GAC7B/C,MAAMqE,GACN,MAAO,CACHO,UAAWhB,GACXiB,QAASjB,GACTb,YAGH,CACD,MAAM6B,EAAY5O,KAAKU,IAAI2N,EAAc,GAAKJ,EAC9C,MAAO,CACHW,YACAC,QAAwB,EAAfT,EAAmBpO,KAAK2K,KAAKsD,EAAOW,GAC7C7B,WAER,CACJ,CACA,MAAM2B,GAAiB,GAQvB,SAASH,GAAgBF,EAAcD,GACnC,OAAOC,EAAerO,KAAK2K,KAAK,EAAIyD,EAAeA,EACvD,CCzEA,MAAMU,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAaC,EAASC,GAC3B,OAAOA,EAAKC,KAAMtV,QAAyB,IAAjBoV,EAAQpV,GACtC,CAuCA,SAASuV,GAAOC,EAA0BzB,GAA+BI,EAASJ,IAC9E,MAAMqB,EAA6C,iBAA5BI,EACjB,CACEC,eAAgBD,EAChBE,UAAW,CAAC,EAAG,GACfvB,UAEFqB,EACN,IAAIG,UAAEA,EAAAC,UAAWA,GAAcR,EAC/B,MAAMpD,EAASoD,EAAQM,UAAU,GAC3BzD,EAASmD,EAAQM,UAAUN,EAAQM,UAAUlR,OAAS,GAKtD+D,EAAQ,CAAEmL,MAAM,EAAOzQ,MAAO+O,IAC9B+C,UAAEA,UAAWC,EAAAZ,KAASA,EAAAlB,SAAMA,WAAUjO,EAAA4Q,uBAAUA,GAtD1D,SAA0BT,GACtB,IAAIU,EAAgB,CAChB7Q,SAAU8O,GACVgB,UAAWhB,GACXiB,QAASjB,GACTK,KAAML,GACN8B,wBAAwB,KACrBT,GAGP,IAAKD,GAAaC,EAASF,KACvBC,GAAaC,EAASH,IACtB,GAAIG,EAAQK,eAAgB,CACxB,MAAMA,EAAiBL,EAAQK,eACzBM,EAAQ,EAAI5P,KAAK6P,IAAwB,IAAjBP,GACxBV,EAAYgB,EAAOA,EACnBf,EAAU,EACZvS,EAAM,IAAM,EAAG,GAAK2S,EAAQjB,QAAU,IACtChO,KAAK2K,KAAKiE,GACde,EAAgB,IACTA,EACH1B,KAAML,GACNgB,YACAC,UAER,KACK,CACD,MAAMiB,EAAU/B,GAAWkB,GAC3BU,EAAgB,IACTA,KACAG,EACH7B,KAAML,IAEV+B,EAAcD,wBAAyB,CAC3C,CAEJ,OAAOC,CACX,CAiBsFI,CAAiB,IAC5Fd,EACHnQ,UAAWH,EAAsBsQ,EAAQnQ,UAAY,KAEnDkR,EAAkBlR,GAAY,EAC9BsP,EAAeS,GAAW,EAAI7O,KAAK2K,KAAKiE,EAAYX,IACpDgC,EAAenE,EAASD,EACxBqE,EAAsBvR,EAAsBqB,KAAK2K,KAAKiE,EAAYX,IAQlEkC,EAAkBnQ,KAAKC,IAAIgQ,GAAgB,EAOjD,IAAIG,EACJ,GAPAZ,IAAcA,EAAYW,EACpBvC,GAAyBC,SACzBD,GAAyBzH,SAC/BsJ,IAAcA,EAAYU,EACpBvC,GAAyBC,SACzBD,GAAyBzH,SAE3BiI,EAAe,EAAG,CAClB,MAAMiC,EAAc9B,GAAgB2B,EAAqB9B,GAEzDgC,EAAiBnR,IACb,MAAMiP,EAAWlO,KAAKwO,KAAKJ,EAAe8B,EAAsBjR,GAChE,OAAQ6M,EACJoC,IACO8B,EACC5B,EAAe8B,EAAsBD,GACrCI,EACArQ,KAAKY,IAAIyP,EAAcpR,GACvBgR,EAAejQ,KAAKsQ,IAAID,EAAcpR,IAE1D,MAAA,GAC0B,IAAjBmP,EAELgC,EAAiBnR,GAAM6M,EACnB9L,KAAKwO,KAAK0B,EAAsBjR,IAC3BgR,GACID,EAAkBE,EAAsBD,GAAgBhR,OAEpE,CAED,MAAMsR,EAAoBL,EAAsBlQ,KAAK2K,KAAKyD,EAAeA,EAAe,GACxFgC,EAAiBnR,IACb,MAAMiP,EAAWlO,KAAKwO,KAAKJ,EAAe8B,EAAsBjR,GAE1DuR,EAAWxQ,KAAKzD,IAAIgU,EAAoBtR,EAAG,KACjD,OAAQ6M,EACHoC,IACK8B,EACE5B,EAAe8B,EAAsBD,GACrCjQ,KAAKyQ,KAAKD,GACVD,EACIN,EACAjQ,KAAK0Q,KAAKF,IAClBD,EAEhB,CACA,MAAMlD,EAAY,CACdsD,mBAAoBjB,GAAyB3C,GAAmB,KAChEO,KAAOrO,IACH,MAAMlE,EAAUqV,EAAcnR,GAC9B,GAAKyQ,EAmBDtN,EAAMmL,KAAOtO,GAAK8N,MAnBO,CACzB,IAAI6D,EAAwB,IAAN3R,EAAU+Q,EAAkB,EAM9C5B,EAAe,IACfwC,EACU,IAAN3R,EACMR,EAAsBuR,GACtBvC,GAAsB2C,EAAenR,EAAGlE,IAEtD,MAAM8V,EAA2B7Q,KAAKC,IAAI2Q,IAAoBpB,EACxDsB,EAA+B9Q,KAAKC,IAAI6L,EAAS/Q,IAAY0U,EACnErN,EAAMmL,KACFsD,GAA4BC,CACpC,CAKA,OADA1O,EAAMtF,MAAQsF,EAAMmL,KAAOzB,EAAS/Q,EAC7BqH,GAEX8G,SAAU,KACN,MAAMyH,EAAqB3Q,KAAKzD,IAAI6Q,GAAsBC,GAAYF,IAChE/M,EAAS0M,GAAsBrP,GAAa4P,EAAUC,KAAKqD,EAAqBlT,GAAUX,MAAO6T,EAAoB,IAC3H,OAAOA,EAAqB,MAAQvQ,GAExC2Q,aAAc,QAElB,OAAO1D,CACX,CClKA,SAAS2D,IAAUzB,UAAAA,EAAAA,SAAWzQ,EAAW,EAAAmS,MAAKA,EAAQ,gBAAKC,EAAe,IAAAC,cAAKA,EAAgB,GAAAC,gBAAIA,EAAkB,iBAAKC,EAAA9U,IAAcA,EAAAC,IAAKA,YAAKiT,EAAY,GAAAD,UAAKA,IAC/J,MAAM3D,EAAS0D,EAAU,GACnBnN,EAAQ,CACVmL,MAAM,EACNzQ,MAAO+O,GAGLyF,EAAmB7U,QACT,IAARF,EACOC,OACC,IAARA,GAEGwD,KAAKC,IAAI1D,EAAME,GAAKuD,KAAKC,IAAIzD,EAAMC,GAD/BF,EAC0CC,EAEzD,IAAI+U,EAAYN,EAAQnS,EACxB,MAAM0S,EAAQ3F,EAAS0F,EACjBzF,OAA0B,IAAjBuF,EAA6BG,EAAQH,EAAaG,GAK7D1F,IAAW0F,IACXD,EAAYzF,EAASD,GACzB,MAAM4F,EAAaxS,IAAOsS,EAAYvR,KAAKwO,KAAKvP,EAAIiS,GAC9CQ,EAAczS,GAAM6M,EAAS2F,EAAUxS,GACvC0S,EAAiB1S,IACnB,MAAMoD,EAAQoP,EAAUxS,GAClB2S,EAASF,EAAWzS,GAC1BmD,EAAMmL,KAAOvN,KAAKC,IAAIoC,IAAUoN,EAChCrN,EAAMtF,MAAQsF,EAAMmL,KAAOzB,EAAS8F,GAQxC,IAAIC,EACAC,EACJ,MAAMC,EAAsB9S,IAjCN,IAACxC,KAkCA2F,EAAMtF,WAlCS,IAARP,GAAqBE,EAAIF,QAAiB,IAARC,GAAqBC,EAAID,KAoCrFqV,EAAsB5S,EACtB6S,EAAW1C,GAAO,CACdG,UAAW,CAACnN,EAAMtF,MAAOwU,EAAgBlP,EAAMtF,QAC/CgC,SAAU2O,GAAsBiE,EAAYzS,EAAGmD,EAAMtF,OACrD+R,QAASsC,EACTvC,UAAWwC,EACX3B,YACAD,gBAIR,OADAuC,EAAmB,GACZ,CACHpB,mBAAoB,KACpBrD,KAAOrO,IAOH,IAAI+S,GAAkB,EAUtB,OATKF,QAAoC,IAAxBD,IACbG,GAAkB,EAClBL,EAAc1S,GACd8S,EAAmB9S,SAMK,IAAxB4S,GAAqC5S,GAAK4S,EACnCC,EAASxE,KAAKrO,EAAI4S,KAGxBG,GAAmBL,EAAc1S,GAC3BmD,IAIvB,CChDA,SAAS6P,GAAYC,EAAOrI,GAAUvN,MAAO6V,GAAU,EAAMC,KAAAA,EAAAA,MAAM3F,GAAU,IACzE,MAAM4F,EAAcH,EAAM7T,OAM1B,GAL0BwL,EAAOxL,OAKb,IAAhBgU,EACA,MAAO,IAAMxI,EAAO,GACxB,GAAoB,IAAhBwI,GAAqBxI,EAAO,KAAOA,EAAO,GAC1C,MAAO,IAAMA,EAAO,GACxB,MAAMyI,EAAmBJ,EAAM,KAAOA,EAAM,GAExCA,EAAM,GAAKA,EAAMG,EAAc,KAC/BH,EAAQ,IAAIA,GAAOK,UACnB1I,EAAS,IAAIA,GAAQ0I,WAEzB,MAAMC,EAlDV,SAAsB3I,EAAQuI,EAAMK,GAChC,MAAMD,EAAS,GACTE,EAAeD,GAAe/V,EAAmB8P,KAAOA,GACxDmG,EAAY9I,EAAOxL,OAAS,EAClC,IAAA,IAASC,EAAI,EAAGA,EAAIqU,EAAWrU,IAAK,CAChC,IAAImO,EAAQiG,EAAa7I,EAAOvL,GAAIuL,EAAOvL,EAAI,IAC/C,GAAI8T,EAAM,CACN,MAAMQ,EAAiBxR,MAAMC,QAAQ+Q,GAAQA,EAAK9T,IAAMnB,EAAOiV,EAC/D3F,EAAQnP,EAAKsV,EAAgBnG,EACjC,CACA+F,EAAOtW,KAAKuQ,EAChB,CACA,OAAO+F,CACX,CAqCmBK,CAAahJ,EAAQuI,EAAM3F,GACpCkG,EAAYH,EAAOnU,OACnByU,EAAgBrW,IAClB,GAAI6V,GAAoB7V,EAAIyV,EAAM,GAC9B,OAAOrI,EAAO,GAClB,IAAIvL,EAAI,EACR,GAAIqU,EAAY,EACZ,KAAOrU,EAAI4T,EAAM7T,OAAS,KAClB5B,EAAIyV,EAAM5T,EAAI,IADOA,KAKjC,MAAMyU,IAA2Bb,EAAM5T,GAAI4T,EAAM5T,EAAI,GAAI7B,GACzD,OAAO+V,EAAOlU,GAAGyU,IAErB,OAAOZ,EACA1V,GAAMqW,EAAaxW,EAAM4V,EAAM,GAAIA,EAAMG,EAAc,GAAI5V,IAC5DqW,CACV,CCrEA,SAASE,GAAcjX,GACnB,MAAMkX,EAAS,CAAC,GAEhB,OCFJ,SAAoBA,EAAQC,GACxB,MAAM3W,EAAM0W,EAAOA,EAAO5U,OAAS,GACnC,IAAA,IAASC,EAAI,EAAGA,GAAK4U,EAAW5U,IAAK,CACjC,MAAM6U,EAAiB1V,EAAS,EAAGyV,EAAW5U,GAC9C2U,EAAO/W,KAAKqO,GAAUhO,EAAK,EAAG4W,GAClC,CACJ,CDLIC,CAAWH,EAAQlX,EAAIsC,OAAS,GACzB4U,CACX,CEEA,SAAS1D,IAAUxC,SAAEA,EAAW,IAAKwC,UAAW8D,QAAgBC,EAAOlB,KAAAA,EAAO,cAK1E,MAAMmB,ECbY,CAACnB,GACZhR,MAAMC,QAAQ+Q,IAA4B,iBAAZA,EAAK,GDYlBoB,CAAcpB,GAChCA,EAAKhI,IAAI5I,GACTA,EAA2B4Q,GAK3BhQ,EAAQ,CACVmL,MAAM,EACNzQ,MAAOuW,EAAe,IAKpBI,EE3BV,SAA8BR,EAAQlG,GAClC,OAAOkG,EAAO7I,IAAKsJ,GAAMA,EAAI3G,EACjC,CFyB0B4G,CAGtBL,GAASA,EAAMjV,SAAWgV,EAAehV,OACnCiV,EACAN,GAAcK,GAAiBtG,GAC/B6G,EAAoB3B,GAAYwB,EAAeJ,EAAgB,CACjEjB,KAAMhR,MAAMC,QAAQkS,GACdA,GA9BSpK,EA+BKkK,EA/BGjT,EA+BamT,EA9BjCpK,EAAOiB,IAAI,IAAMhK,GAAUc,GAAW7E,OAAO,EAAG8M,EAAO9K,OAAS,MAD3E,IAAuB8K,EAAQ/I,EAiC3B,MAAO,CACHuQ,mBAAoB5D,EACpBO,KAAOrO,IACHmD,EAAMtF,MAAQ8W,EAAkB3U,GAChCmD,EAAMmL,KAAOtO,GAAK8N,EACX3K,GAGnB,CLwHAgN,GAAOyE,eAAkB5E,IACrB,MAAM6E,EQjKV,SAA+B7E,EAAS/I,EAAQ,IAAK6N,GACjD,MAAM1G,EAAY0G,EAAgB,IAAK9E,EAASM,UAAW,CAAC,EAAGrJ,KACzD6G,EAAW/M,KAAKzD,IAAI6Q,GAAsBC,GAAYF,IAC5D,MAAO,CACHvS,KAAM,YACNwX,KAAO3U,GACI4P,EAAUC,KAAKP,EAAWtP,GAAUX,MAAQoJ,EAEvD6G,WAAgCA,GAExC,CRuJ6BiH,CAAsB/E,EAAS,IAAKG,IAI7D,OAHAH,EAAQmD,KAAO0B,EAAiB1B,KAChCnD,EAAQlC,SAAWtO,EAAsBqV,EAAiB/G,UAC1DkC,EAAQrU,KAAO,YACRqU,GS3KX,MAAMgF,GAAanX,GAAoB,OAAVA,EAC7B,SAASoX,GAAiB3E,GAAW4E,OAAEA,EAAAC,WAAQA,EAAa,QAAUC,EAAeC,EAAQ,GACzF,MAAMC,EAAoBhF,EAAUiF,OAAOP,IAErC7X,EADmBkY,EAAQ,GAAMH,GAAyB,SAAfC,GAAyBD,EAAS,GAAM,EACxD,EAAII,EAAkBlW,OAAS,EAChE,OAAQjC,QAA2B,IAAlBiY,EAEXA,EADAE,EAAkBnY,EAE5B,CCJA,MAAMqY,GAAoB,CACtBC,MAAO1D,GACPA,WACA2D,MAAOpF,GACPA,aACAH,WAEJ,SAASwF,GAAsBC,GACI,iBAApBA,EAAWja,OAClBia,EAAWja,KAAO6Z,GAAkBI,EAAWja,MAEvD,CCfA,MAAMka,GACF,WAAAhX,GACIC,KAAKgX,gBACT,CACA,YAAIC,GACA,OAAOjX,KAAKkX,SAChB,CACA,cAAAF,GACIhX,KAAKkX,UAAY,IAAIC,QAASC,IAC1BpX,KAAKoX,QAAUA,GAEvB,CACA,cAAAC,GACIrX,KAAKoX,SACT,CAMA,IAAAE,CAAKC,EAAWC,GACZ,OAAOxX,KAAKiX,SAASK,KAAKC,EAAWC,EACzC,ECVJ,MAAMC,GAAqBxN,GAAYA,EAAU,IACjD,MAAMyN,WAAoBX,GACtB,WAAAhX,CAAYmR,GACRyG,QACA3X,KAAKqE,MAAQ,OACbrE,KAAK4X,UAAY,KACjB5X,KAAK6X,WAAY,EAIjB7X,KAAK8X,YAAc,EAInB9X,KAAK+X,SAAW,KAIhB/X,KAAKgY,cAAgB,EAKrBhY,KAAK8O,KAAO,aACR,MAAQmJ,YAAAA,GAAgBjY,KAAKkR,QACzB+G,GAAeA,EAAYC,YAAcjR,EAAKN,OAC9C3G,KAAKmY,KAAKlR,EAAKN,OAEnB3G,KAAK6X,WAAY,EACE,SAAf7X,KAAKqE,QAETrE,KAAKoY,WACL,OAAAjM,GAAAD,EAAAlM,KAAKkR,SAAQmH,SAAblM,EAAAzP,KAAAwP,KAGJlM,KAAKkR,QAAUA,EACflR,KAAKsY,gBACLtY,KAAKuY,QACoB,IAArBrH,EAAQsH,UACRxY,KAAKyY,OACb,CACA,aAAAH,GACI,MAAMpH,QAAEA,GAAYlR,KACpB6W,GAAsB3F,GACtB,MAAMrU,KAAEA,EAAO2U,GAAA4E,OAAWA,EAAS,EAAAsC,YAAGA,EAAc,EAAArC,WAAGA,EAAAtV,SAAYA,EAAW,GAAOmQ,EACrF,IAAMM,UAAWmH,GAAgBzH,EACjC,MAAM0H,EAAmB/b,GAAQ2U,GAK7BoH,IAAqBpH,IACK,iBAAnBmH,EAAY,KACnB3Y,KAAK6Y,aAAetZ,EAAKkY,GAAmBhJ,GAAIkK,EAAY,GAAIA,EAAY,KAC5EA,EAAc,CAAC,EAAG,MAEtB,MAAMrJ,EAAYsJ,EAAiB,IAAK1H,EAASM,UAAWmH,IAKzC,WAAftC,IACArW,KAAK8Y,kBAAoBF,EAAiB,IACnC1H,EACHM,UAAW,IAAImH,GAAanE,UAC5BzT,UAAWA,KAWkB,OAAjCuO,EAAUsD,qBACVtD,EAAUsD,mBAAqBvD,GAAsBC,IAEzD,MAAMsD,mBAAEA,GAAuBtD,EAC/BtP,KAAK4S,mBAAqBA,EAC1B5S,KAAK+Y,iBAAmBnG,EAAqB8F,EAC7C1Y,KAAKgZ,cAAgBhZ,KAAK+Y,kBAAoB3C,EAAS,GAAKsC,EAC5D1Y,KAAKsP,UAAYA,CACrB,CACA,UAAA2J,CAAW1U,GACP,MAAM2U,EAAgBjX,KAAKqG,MAAM/D,EAAYvE,KAAK4X,WAAa5X,KAAKgY,cAE9C,OAAlBhY,KAAK+X,SACL/X,KAAK8X,YAAc9X,KAAK+X,SAMxB/X,KAAK8X,YAAcoB,CAE3B,CACA,IAAAf,CAAK5T,EAAW4U,GAAS,GACrB,MAAM7J,UAAEA,EAAA0J,cAAWA,EAAAH,aAAeA,oBAAcC,EAAAC,iBAAmBA,EAAAnG,mBAAkBA,GAAwB5S,KAC7G,GAAuB,OAAnBA,KAAK4X,UACL,OAAOtI,EAAUC,KAAK,GAC1B,MAAQ6J,MAAAA,EAAQ,EAAG5H,UAAAA,EAAAA,OAAW4E,EAAAC,WAAQA,EAAAqC,YAAYA,EAAA7b,KAAaA,EAAAwc,SAAMA,EAAA/C,cAAUA,GAAmBtW,KAAKkR,QAOnGlR,KAAKuW,MAAQ,EACbvW,KAAK4X,UAAY3V,KAAKzD,IAAIwB,KAAK4X,UAAWrT,GAErCvE,KAAKuW,MAAQ,IAClBvW,KAAK4X,UAAY3V,KAAKzD,IAAI+F,EAAYyU,EAAgBhZ,KAAKuW,MAAOvW,KAAK4X,YAEvEuB,EACAnZ,KAAK8X,YAAcvT,EAGnBvE,KAAKiZ,WAAW1U,GAGpB,MAAM+U,EAAmBtZ,KAAK8X,YAAcsB,GAASpZ,KAAKgY,eAAiB,EAAI,GAAI,GAC7EuB,EAAiBvZ,KAAKgY,eAAiB,EACvCsB,EAAmB,EACnBA,EAAmBN,EACzBhZ,KAAK8X,YAAc7V,KAAKxD,IAAI6a,EAAkB,GAE3B,aAAftZ,KAAKqE,OAA0C,OAAlBrE,KAAK+X,WAClC/X,KAAK8X,YAAckB,GAEvB,IAAIQ,EAAUxZ,KAAK8X,YACf2B,EAAiBnK,EACrB,GAAI8G,EAAQ,CAMR,MAAM1W,EAAWuC,KAAKzD,IAAIwB,KAAK8X,YAAakB,GAAiBD,EAK7D,IAAIW,EAAmBzX,KAAK0X,MAAMja,GAK9Bka,EAAoBla,EAAW,GAK9Bka,GAAqBla,GAAY,IAClCka,EAAoB,GAEF,IAAtBA,GAA2BF,IAC3BA,EAAmBzX,KAAKzD,IAAIkb,EAAkBtD,EAAS,GAIhCzN,QAAQ+Q,EAAmB,KAE3B,YAAfrD,GACAuD,EAAoB,EAAIA,EACpBlB,IACAkB,GAAqBlB,EAAcK,IAGnB,WAAf1C,IACLoD,EAAiBX,IAGzBU,EAAUjb,EAAM,EAAG,EAAGqb,GAAqBb,CAC/C,CAMA,MAAM1U,EAAQkV,EACR,CAAE/J,MAAM,EAAOzQ,MAAOyS,EAAU,IAChCiI,EAAelK,KAAKiK,GACtBX,IACAxU,EAAMtF,MAAQ8Z,EAAaxU,EAAMtF,QAErC,IAAIyQ,KAAEA,GAASnL,EACVkV,GAAyC,OAAvB3G,IACnBpD,EACIxP,KAAKgY,eAAiB,EAChBhY,KAAK8X,aAAekB,EACpBhZ,KAAK8X,aAAe,GAElC,MAAM+B,EAAwC,OAAlB7Z,KAAK+X,WACb,aAAf/X,KAAKqE,OAAwC,YAAfrE,KAAKqE,OAAuBmL,GAW/D,OATIqK,GAAuBhd,IAASoW,KAChC5O,EAAMtF,MAAQoX,GAAiB3E,EAAWxR,KAAKkR,QAASoF,EAAetW,KAAKuW,QAE5E8C,GACAA,EAAShV,EAAMtF,OAEf8a,GACA7Z,KAAK8Z,SAEFzV,CACX,CAMA,IAAAiT,CAAKF,EAAS2C,GACV,OAAO/Z,KAAKiX,SAASK,KAAKF,EAAS2C,EACvC,CACA,YAAI/K,GACA,OAAOpO,EAAsBZ,KAAK4S,mBACtC,CACA,QAAI3L,GACA,OAAOrG,EAAsBZ,KAAK8X,YACtC,CACA,QAAI7Q,CAAKE,SACLA,IAAgCA,GAChCnH,KAAK8X,YAAc3Q,EACI,OAAnBnH,KAAK4X,WACa,OAAlB5X,KAAK+X,UACkB,IAAvB/X,KAAKgY,cACLhY,KAAK+X,SAAW5Q,EAEXnH,KAAKga,SACVha,KAAK4X,UAAY5X,KAAKga,OAAOrT,MAAQQ,EAAUnH,KAAKgY,eAExD,OAAA9L,EAAAlM,KAAKga,WAAQnL,OAAM,EACvB,CACA,SAAI0H,GACA,OAAOvW,KAAKgY,aAChB,CACA,SAAIzB,CAAM0D,GACNja,KAAKiZ,WAAWhS,EAAKN,OACrB,MAAMuT,EAAala,KAAKgY,gBAAkBiC,EAC1Cja,KAAKgY,cAAgBiC,EACjBC,IACAla,KAAKiH,KAAOrG,EAAsBZ,KAAK8X,aAE/C,CACA,IAAAS,WACI,GAAIvY,KAAK6X,UACL,OACJ,MAAMmC,OAAEA,EAASrL,GAAAiJ,UAAiBA,GAAc5X,KAAKkR,QAChDlR,KAAKga,SACNha,KAAKga,OAASA,EAAQzV,GAAcvE,KAAKmY,KAAK5T,KAElD,OAAA4H,GAAAD,EAAAlM,KAAKkR,SAAQiJ,SAAbhO,EAAAzP,KAAAwP,GACA,MAAMvF,EAAM3G,KAAKga,OAAOrT,MACL,aAAf3G,KAAKqE,OACLrE,KAAKgX,iBACLhX,KAAK4X,UAAYjR,GAEM,OAAlB3G,KAAK+X,SACV/X,KAAK4X,UAAYjR,EAAM3G,KAAK+X,SAEtB/X,KAAK4X,YACX5X,KAAK4X,UAAYA,GAAajR,GAEf,aAAf3G,KAAKqE,OAAwBrE,KAAKuW,MAAQ,IAC1CvW,KAAK4X,WAAa5X,KAAK4S,oBAE3B5S,KAAK+X,SAAW,KAKhB/X,KAAKqE,MAAQ,UACbrE,KAAKga,OAAOnL,OAChB,CACA,KAAA4J,GACIzY,KAAKqE,MAAQ,SACbrE,KAAKiZ,WAAWhS,EAAKN,OACrB3G,KAAK+X,SAAW/X,KAAK8X,WACzB,CACA,QAAAsC,GACuB,YAAfpa,KAAKqE,OACLrE,KAAKuY,OAETvY,KAAKqE,MAAQ,WACbrE,KAAK+X,SAAW,IACpB,CACA,MAAA+B,WACI9Z,KAAKqX,iBACLrX,KAAKoY,WACLpY,KAAKqE,MAAQ,WACb,OAAA8H,GAAAD,EAAAlM,KAAKkR,SAAQmJ,aAAblO,EAAAzP,KAAAwP,EACJ,CACA,MAAAxG,WACI1F,KAAK+X,SAAW,KAChB/X,KAAK4X,UAAY,EACjB5X,KAAKmY,KAAK,GACVnY,KAAKoY,WACL,OAAAjM,GAAAD,EAAAlM,KAAKkR,SAAQoJ,WAAbnO,EAAAzP,KAAAwP,EACJ,CACA,QAAAkM,GACIpY,KAAKqE,MAAQ,OACbrE,KAAKua,aACLva,KAAK4X,UAAY5X,KAAK+X,SAAW,IAErC,CACA,UAAAwC,GACSva,KAAKga,SAEVha,KAAKga,OAAOlL,OACZ9O,KAAKga,YAAS,EAClB,CACA,MAAAb,CAAOqB,GAEH,OADAxa,KAAK4X,UAAY,EACV5X,KAAKmY,KAAKqC,GAAY,EACjC,CACA,cAAAC,CAAeC,SAOX,OANI1a,KAAKkR,QAAQyJ,eACb3a,KAAKkR,QAAQrU,KAAO,YACpBmD,KAAKkR,QAAQmD,KAAO,SACpBrU,KAAKsY,iBAET,OAAApM,EAAAlM,KAAKga,SAAL9N,EAAa4C,OACN4L,EAASE,QAAQ5a,KAC5B,ECjVJ,MAAM6a,GAAYC,GAAe,IAANA,EAAa7Y,KAAK6P,GACvCiJ,GAAUrc,IACZ,MAAMsc,EAAQH,GAAS5Y,KAAKgZ,MAAMvc,EAAE,GAAIA,EAAE,KAC1C,OAAOwc,GAAYF,IAEjBG,GAAkB,CACpBvZ,EAAG,EACHwZ,EAAG,EACHC,WAAY,EACZC,WAAY,EACZC,OAAQ,EACRC,OAAQ,EACRrT,MAAQzJ,IAAOuD,KAAKC,IAAIxD,EAAE,IAAMuD,KAAKC,IAAIxD,EAAE,KAAO,EAClDqc,UACAU,QAASV,GACTW,MAAQhd,GAAMmc,GAAS5Y,KAAK0Z,KAAKjd,EAAE,KACnCkd,MAAQld,GAAMmc,GAAS5Y,KAAK0Z,KAAKjd,EAAE,KACnCmd,KAAOnd,IAAOuD,KAAKC,IAAIxD,EAAE,IAAMuD,KAAKC,IAAIxD,EAAE,KAAO,GAE/Cwc,GAAeF,KACjBA,GAAgB,KACJ,IACRA,GAAS,KACNA,GAGLO,GAAU7c,GAAMuD,KAAK2K,KAAKlO,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IACjD8c,GAAU9c,GAAMuD,KAAK2K,KAAKlO,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IACjDod,GAAkB,CACpBla,EAAG,GACHwZ,EAAG,GACHW,EAAG,GACHV,WAAY,GACZC,WAAY,GACZU,WAAY,GACZT,UACAC,UACArT,MAAQzJ,IAAO6c,GAAO7c,GAAK8c,GAAO9c,IAAM,EACxCud,QAAUvd,GAAMwc,GAAYL,GAAS5Y,KAAKgZ,MAAMvc,EAAE,GAAIA,EAAE,MACxDwd,QAAUxd,GAAMwc,GAAYL,GAAS5Y,KAAKgZ,OAAOvc,EAAE,GAAIA,EAAE,MACzD+c,QAfYV,GAgBZA,OAhBYA,GAiBZW,MAAQhd,GAAMmc,GAAS5Y,KAAK0Z,KAAKjd,EAAE,KACnCkd,MAAQld,GAAMmc,GAAS5Y,KAAK0Z,KAAKjd,EAAE,KACnCmd,KAAOnd,IAAOuD,KAAKC,IAAIxD,EAAE,IAAMuD,KAAKC,IAAIxD,EAAE,KAAO,GAErD,SAASyd,GAAsBC,GAC3B,OAAOA,EAAKC,SAAS,SAAW,EAAI,CACxC,CACA,SAASC,GAAwBrU,EAAWmU,GACxC,IAAKnU,GAA2B,SAAdA,EACd,OAAOkU,GAAsBC,GAEjC,MAAMG,EAAgBtU,EAAUgB,MAAM,gCACtC,IAAIuT,EACAvT,EACJ,GAAIsT,EACAC,EAAUV,GACV7S,EAAQsT,MAEP,CACD,MAAME,EAAgBxU,EAAUgB,MAAM,8BACtCuT,EAAUrB,GACVlS,EAAQwT,CACZ,CACA,IAAKxT,EACD,OAAOkT,GAAsBC,GAEjC,MAAMM,EAAcF,EAAQJ,GACtBhR,EAASnC,EAAM,GAAGrB,MAAM,KAAKyE,IAAIsQ,IACvC,MAA8B,mBAAhBD,EACRA,EAAYtR,GACZA,EAAOsR,EACjB,CAKA,SAASC,GAAyB5d,GAC9B,OAAOiJ,WAAWjJ,EAAM8I,OAC5B,CC7EA,MAAM+U,GAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,GAAgC,KAAM,IAAIhY,IAAI+X,IAAd,GCpBhCE,GAAiBpe,GAAMA,IAAMoJ,IAAUpJ,IAAMwL,GAC7C6S,GAAgB,IAAIlY,IAAI,CAAC,IAAK,IAAK,MACnCmY,GAAgCJ,GAAmBnG,OAAQ3a,IAASihB,GAAc3X,IAAItJ,IAY5F,MAAMmhB,GAAmB,CAErBC,MAAO,EAAGtb,MAAOub,cAAc,IAAKC,eAAe,OAAUxb,EAAEnD,IAAMmD,EAAEpD,IAAMwJ,WAAWmV,GAAenV,WAAWoV,GAClHC,OAAQ,EAAGjC,MAAOkC,aAAa,IAAKC,gBAAgB,OAAUnC,EAAE3c,IAAM2c,EAAE5c,IAAMwJ,WAAWsV,GAActV,WAAWuV,GAClHC,IAAK,CAACC,GAASD,SAAUxV,WAAWwV,GACpCE,KAAM,CAACD,GAASC,UAAW1V,WAAW0V,GACtCC,OAAQ,EAAGvC,MAAOoC,SAAUxV,WAAWwV,IAAQpC,EAAE3c,IAAM2c,EAAE5c,KACzDof,MAAO,EAAGhc,MAAO8b,UAAW1V,WAAW0V,IAAS9b,EAAEnD,IAAMmD,EAAEpD,KAE1DoD,EAAG,CAAC6b,GAASxV,eAAgBqU,GAAwBrU,EAAW,KAChEmT,EAAG,CAACqC,GAASxV,eAAgBqU,GAAwBrU,EAAW,MAGpEgV,GAAiB5B,WAAa4B,GAAiBrb,EAC/Cqb,GAAiB3B,WAAa2B,GAAiB7B,EC7B/C,MAAMyC,OAAgBhZ,IACtB,IAAIiZ,IAAc,EACdC,IAAsB,EACtBC,IAAW,EACf,SAASC,KACL,GAAIF,GAAqB,CACrB,MAAMG,EAAqB7a,MAAM1D,KAAKke,IAAWpH,OAAQ0H,GAAaA,EAASC,kBACzEC,EAAoB,IAAIxZ,IAAIqZ,EAAmB7R,IAAK8R,GAAaA,EAASG,UAC1EC,MAA0BC,IAKhCH,EAAkBvY,QAASwY,IACvB,MAAMG,EDVlB,SAAyCC,GACrC,MAAMD,EAAoB,GAQ1B,OAPAzB,GAA8BlX,QAAShK,IACnC,MAAMiD,EAAQ2f,EAAcC,SAAS7iB,QACvB,IAAViD,IACA0f,EAAkBtgB,KAAK,CAACrC,EAAKiD,EAAM6f,QACnC7f,EAAMmI,IAAIpL,EAAIyL,WAAW,SAAW,EAAI,MAGzCkX,CACX,CCAsCI,CAAgCP,GACrDG,EAAkBne,SAEvBie,EAAoBrX,IAAIoX,EAASG,GACjCH,EAAQhY,YAGZ4X,EAAmBpY,QAASqY,GAAaA,EAASW,uBAElDT,EAAkBvY,QAASwY,IACvBA,EAAQhY,SACR,MAAMyY,EAAUR,EAAoBK,IAAIN,GACpCS,GACAA,EAAQjZ,QAAQ,EAAEhK,EAAKiD,YACnB,OAAAmN,EAAAoS,EAAQK,SAAS7iB,KAAjBoQ,EAAuBhF,IAAInI,OAKvCmf,EAAmBpY,QAASqY,GAAaA,EAASa,mBAElDd,EAAmBpY,QAASqY,SACU,IAA9BA,EAASc,kBACTvhB,OAAOwhB,SAAS,EAAGf,EAASc,mBAGxC,CACAlB,IAAsB,EACtBD,IAAc,EACdD,GAAU/X,QAASqY,GAAaA,EAAS/D,SAAS4D,KAClDH,GAAUpd,OACd,CACA,SAAS0e,KACLtB,GAAU/X,QAASqY,IACfA,EAASiB,gBACLjB,EAASC,mBACTL,IAAsB,IAGlC,CAOA,MAAMsB,GACF,WAAAtf,CAAYuf,EAAqBjF,EAAY+B,EAAMnE,EAAaqG,EAASiB,GAAU,GAC/Evf,KAAKqE,MAAQ,UAMbrE,KAAKuf,SAAU,EAKfvf,KAAKoe,kBAAmB,EACxBpe,KAAKsf,oBAAsB,IAAIA,GAC/Btf,KAAKqa,WAAaA,EAClBra,KAAKoc,KAAOA,EACZpc,KAAKiY,YAAcA,EACnBjY,KAAKse,QAAUA,EACfte,KAAKuf,QAAUA,CACnB,CACA,eAAAC,GACIxf,KAAKqE,MAAQ,YACTrE,KAAKuf,SACL1B,GAAU3d,IAAIF,MACT8d,KACDA,IAAc,EACdlX,EAAMX,KAAKkZ,IACXvY,EAAMV,iBAAiB+X,OAI3Bje,KAAKof,gBACLpf,KAAKoa,WAEb,CACA,aAAAgF,GACI,MAAME,oBAAEA,EAAAlD,KAAqBA,EAAAkC,QAAMA,EAASrG,YAAAA,GAAgBjY,KAE5D,GAA+B,OAA3Bsf,EAAoB,GAAa,CACjC,MAAMG,EAAe,MAAAxH,OAAA,EAAAA,EAAa2G,MAE5BtI,EAAgBgJ,EAAoBA,EAAoBhf,OAAS,GACvE,QAAqB,IAAjBmf,EACAH,EAAoB,GAAKG,OAC7B,GACSnB,GAAWlC,EAAM,CACtB,MAAMsD,EAAcpB,EAAQqB,UAAUvD,EAAM9F,GACxCoJ,UACAJ,EAAoB,GAAKI,EAEjC,MAC+B,IAA3BJ,EAAoB,KACpBA,EAAoB,GAAKhJ,GAEzB2B,QAAgC,IAAjBwH,GACfxH,EAAY/Q,IAAIoY,EAAoB,GAE5C,EC1HR,SAAuB9N,GACnB,IAAA,IAASjR,EAAI,EAAGA,EAAIiR,EAAUlR,OAAQC,IAClCiR,EAAUjR,KAAOiR,EAAUjR,GAAKiR,EAAUjR,EAAI,GAEtD,CDuHQqf,CAAcN,EAClB,CACA,gBAAAO,GAAqB,CACrB,mBAAAf,GAAwB,CACxB,eAAAgB,GAAoB,CACpB,eAAAd,GAAoB,CACpB,QAAA5E,CAAS2F,GAAmB,GACxB/f,KAAKqE,MAAQ,WACbrE,KAAKqa,WAAWra,KAAKsf,oBAAqBtf,KAAKsW,cAAeyJ,GAC9DlC,GAAUlY,OAAO3F,KACrB,CACA,MAAA0F,GACuB,cAAf1F,KAAKqE,QACLwZ,GAAUlY,OAAO3F,MACjBA,KAAKqE,MAAQ,UAErB,CACA,MAAA2b,GACuB,YAAfhgB,KAAKqE,OACLrE,KAAKwf,iBACb,EE7IJ,MAAMS,GAAyChhB,EAAK,SAAgC,IAA1BvB,OAAOwiB,gBCE3DC,GAAgB,CAAA,ECDtB,SAASC,GAAalhB,EAAUmhB,GAC5B,MAAMC,IAAgBphB,GACtB,MAAO,IAAMihB,GAAcE,IAAiBC,GAChD,CCJA,MAAMC,MAAkD,KACpD,IACIC,SACKC,cAAc,OACdC,QAAQ,CAAEC,QAAS,GAAK,CAAEte,OAAQ,gBAC3C,OACO7F,GACH,OAAO,CACX,CACA,OAAO,GACR,gBCZGokB,GAAsB,EAAExkB,EAAGE,EAAGH,EAAGI,KAAO,gBAAgBH,MAAME,MAAMH,MAAMI,KCE1EskB,GAAuB,CACzBrd,OAAQ,SACR6Q,KAAM,OACNpR,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXP,OAAsBge,GAAoB,CAAC,EAAG,IAAM,IAAM,IAC1D7d,QAAuB6d,GAAoB,CAAC,IAAM,EAAG,EAAG,MACxDpe,OAAsBoe,GAAoB,CAAC,IAAM,IAAM,WACvDre,QAAuBqe,GAAoB,CAAC,IAAM,KAAM,IAAM,OCLlE,SAASE,GAAwBze,EAAQ2M,GACrC,OAAK3M,EAGsB,mBAAXA,EACLke,KACDxR,GAAqB1M,EAAQ2M,GAC7B,WAED5L,EAAmBf,GACjBue,GAAoBve,GAEtBgB,MAAMC,QAAQjB,GACZA,EAAOgK,IAAK0U,GAAkBD,GAAwBC,EAAe/R,IACxE6R,GAAqB3d,SAGlB2d,GAAqBxe,QAf5B,CAiBR,CCrBA,SAAS2e,GAAoB1C,EAAS2C,EAAWzP,GAAa4H,MAAAA,EAAQ,EAAApK,SAAGA,EAAW,IAAAoH,OAAKA,EAAS,aAAGC,EAAa,OAAQhC,KAAAA,EAAO,UAAAkB,MAAWA,GAAW,CAAA,EAAI2L,OAAgB,GACvK,MAAMC,EAAkB,CACpBF,CAACA,GAAYzP,GAEb+D,IACA4L,EAAgBjM,OAASK,GAC7B,MAAMlT,EAASye,GAAwBzM,EAAMrF,GAIzC3L,MAAMC,QAAQjB,KACd8e,EAAgB9e,OAASA,GAI7B,MAAM6O,EAAU,CACZkI,MAAAA,EACApK,WACA3M,OAASgB,MAAMC,QAAQjB,GAAmB,SAATA,EACjC+e,KAAM,OACNC,WAAYjL,EAAS,EACrBkL,UAA0B,YAAfjL,EAA2B,YAAc,UAEpD6K,IACAhQ,EAAQgQ,cAAgBA,GAO5B,OANkB5C,EAAQoC,QAAQS,EAAiBjQ,EAOvD,CCpCA,SAASqQ,GAAY1kB,GACjB,MAAuB,mBAATA,GAAuB,mBAAoBA,CAC7D,CCSA,MAAM2kB,WAAwBzK,GAC1B,WAAAhX,CAAYmR,GAIR,GAHAyG,QACA3X,KAAKyhB,aAAe,KACpBzhB,KAAK6X,WAAY,GACZ3G,EACD,OACJ,MAAMoN,QAAEA,EAAAlC,KAASA,EAAM5K,UAAAA,EAAAA,cAAW0P,eAAevG,GAAe,EAAArE,cAAOA,EAAA+D,WAAeA,GAAgBnJ,EACtGlR,KAAK0hB,gBAAkB/Y,QAAQuY,GAC/BlhB,KAAK2a,aAAeA,EACpB3a,KAAKkR,QAAUA,EACEA,EAAQrU,KACzB,MAAMia,ECpBd,UAA+Bja,KAAEA,KAASqU,IACtC,OAAIqQ,GAAY1kB,IAAS0jB,KACd1jB,EAAKiZ,eAAe5E,IAG3BA,EAAQlC,WAAakC,EAAQlC,SAAW,KACxCkC,EAAQmD,OAASnD,EAAQmD,KAAO,WAE7BnD,EACX,CDW2ByQ,CAAsBzQ,GACzClR,KAAK4hB,UAAYZ,GAAoB1C,EAASlC,EAAM5K,EAAWsF,EAAYoK,IAC/C,IAAxBpK,EAAW0B,UACXxY,KAAK4hB,UAAUnJ,QAEnBzY,KAAK4hB,UAAUC,SAAW,KAEtB,GADA7hB,KAAKyhB,aAAezhB,KAAKiH,MACpBia,EAAe,CAChB,MAAMY,EAAW3L,GAAiB3E,EAAWxR,KAAKkR,QAASoF,EAAetW,KAAKuW,OAC3EvW,KAAK+hB,kBACL/hB,KAAK+hB,kBAAkBD,GE/B3C,SAAkBxD,EAASlC,EAAMrd,GCFhB,CAACqd,GAASA,EAAK7U,WAAW,MDGvCya,CAAS5F,GACHkC,EAAQ2D,MAAMC,YAAY9F,EAAMrd,GAC/Buf,EAAQ2D,MAAM7F,GAAQrd,CACjC,CFkCoBojB,CAAS7D,EAASlC,EAAM0F,GAE5B9hB,KAAK4hB,UAAUlc,QACnB,CACA,MAAA2U,GAAAA,IACAra,KAAKqX,iBAEb,CACA,IAAAkB,GACQvY,KAAK6X,YAET7X,KAAK4hB,UAAUrJ,OACI,aAAfvY,KAAKqE,OACLrE,KAAKgX,iBAEb,CACA,KAAAyB,GACIzY,KAAK4hB,UAAUnJ,OACnB,CACA,QAAA2B,WACI,OAAAjO,GAAAD,EAAAlM,KAAK4hB,WAAU9H,SAAf3N,EAAAzP,KAAAwP,EACJ,CACA,MAAAxG,GACI,IACI1F,KAAK4hB,UAAUlc,QACnB,OACOlJ,GAAK,CAChB,CACA,IAAAsS,GACI,GAAI9O,KAAK6X,UACL,OACJ7X,KAAK6X,WAAY,EACjB,MAAMxT,MAAEA,GAAUrE,KACJ,SAAVqE,GAA8B,aAAVA,IAGpBrE,KAAK+hB,kBACL/hB,KAAK+hB,oBAGL/hB,KAAKoiB,eAEJpiB,KAAK0hB,iBACN1hB,KAAK0F,SACb,CAaA,YAAA0c,WACSpiB,KAAK0hB,iBACN,OAAAvV,GAAAD,EAAAlM,KAAK4hB,WAAUQ,eAAfjW,EAAAzP,KAAAwP,EAER,CACA,YAAI8C,WACA,MAAMA,GAAW,OAAA7C,EAAA,OAAAD,EAAAlM,KAAK4hB,UAAUS,aAAf,EAAAnW,EAAuBoW,oCAAsBtT,WAAY,EAC1E,OAAOpO,EAAsB2hB,OAAOvT,GACxC,CACA,QAAI/H,GACA,SAA6Bsb,OAAOviB,KAAK4hB,UAAU9J,cAAgB,EACvE,CACA,QAAI7Q,CAAKE,GACLnH,KAAKyhB,aAAe,KACpBzhB,KAAK4hB,UAAU9J,YAAcpX,EAAsByG,EACvD,CAKA,SAAIoP,GACA,OAAOvW,KAAK4hB,UAAUY,YAC1B,CACA,SAAIjM,CAAM0D,GAEFA,EAAW,IACXja,KAAKyhB,aAAe,MACxBzhB,KAAK4hB,UAAUY,aAAevI,CAClC,CACA,SAAI5V,GACA,OAA6B,OAAtBrE,KAAKyhB,aACN,WACAzhB,KAAK4hB,UAAUa,SACzB,CACA,aAAI7K,GACA,OAAO2K,OAAOviB,KAAK4hB,UAAUhK,UACjC,CACA,aAAIA,CAAU8K,GACV1iB,KAAK4hB,UAAUhK,UAAY8K,CAC/B,CAIA,cAAAjI,EAAeC,SAAEA,EAAAE,QAAUA,UAKvB,OAJI5a,KAAK2a,eACL,OAAAzO,EAAAlM,KAAK4hB,UAAUS,SAAfnW,EAAuByW,aAAa,CAAEtgB,OAAQ,YAElDrC,KAAK4hB,UAAUC,SAAW,KACtBnH,GAAYuF,MACZjgB,KAAK4hB,UAAUlH,SAAWA,EACnBtb,GAGAwb,EAAQ5a,KAEvB,EItJJ,MAAM4iB,GAA6B,CAC/BlgB,aACAD,YACAO,aAKJ,SAAS6f,GAAoB/L,GACM,iBAApBA,EAAWzC,MACAyC,EAAWzC,QAJnBuO,KAKV9L,EAAWzC,KAAOuO,GAA2B9L,EAAWzC,MAEhE,CCHA,MAAMyO,WAAgCtB,GAClC,WAAAzhB,CAAYmR,GAUR2R,GAAoB3R,GAQpB2F,GAAsB3F,GACtByG,MAAMzG,GACFA,EAAQ0G,YACR5X,KAAK4X,UAAY1G,EAAQ0G,WAE7B5X,KAAKkR,QAAUA,CACnB,CASA,iBAAA6Q,CAAkBhjB,GACd,MAAQkZ,YAAAA,EAAAA,SAAaoB,EAAAgB,WAAUA,UAAYiE,KAAYpN,GAAYlR,KAAKkR,QACxE,IAAK+G,EACD,OACJ,QAAc,IAAVlZ,EAEA,YADAkZ,EAAY/Q,IAAInI,GAGpB,MAAMgkB,EAAkB,IAAIrL,GAAY,IACjCxG,EACHsH,UAAU,IAERgC,EAAa9Z,EAAsBV,KAAKyhB,cAAgBzhB,KAAKiH,MACnEgR,EAAY+K,gBAAgBD,EAAgB5J,OAAOqB,EAhDvC,IAgDiEzb,MAAOgkB,EAAgB5J,OAAOqB,GAAYzb,MAhD3G,IAiDZgkB,EAAgBjU,MACpB,EClDJ,MAAMmU,GAAe,CAAClkB,EAAOqd,IAEZ,WAATA,MAKiB,iBAAVrd,IAAsBsE,MAAMC,QAAQvE,OAE1B,iBAAVA,IACNiN,GAAQnN,KAAKE,IAAoB,MAAVA,GACvBA,EAAMwI,WAAW,UCtB1B,SAAS2b,GAAqBhS,GAC1BA,EAAQlC,SAAW,EACnBkC,EAAQrU,IACZ,CCEA,MAAMsmB,OAAwBte,IAAI,CAC9B,UACA,WACA,SACA,cAIEue,KAAmC,IAAM7nB,OAAOE,eAAeiB,KAAK2mB,QAAQ7nB,UAAW,YCO7F,MAAM8nB,WAAkCvM,GACpC,WAAAhX,EAAYyY,SAAEA,GAAW,EAAMY,MAAAA,EAAQ,EAAAvc,KAAGA,EAAO,YAAAuZ,OAAaA,EAAS,EAAAsC,YAAGA,EAAc,EAAArC,WAAGA,EAAa,OAAQ7E,UAAAA,EAAAA,KAAW4K,EAAMnE,YAAAA,EAAAA,QAAaqG,KAAYpN,UACtJyG,QAIA3X,KAAK8O,KAAO,aACJ9O,KAAKujB,aACLvjB,KAAKujB,WAAWzU,OAChB,OAAA5C,EAAAlM,KAAKwjB,eAALtX,EAAAxP,KAAAsD,OAEJ,OAAAmM,EAAAnM,KAAKyjB,mBAALtX,EAAuBzG,UAE3B1F,KAAK0jB,UAAYzc,EAAKN,MACtB,MAAMgd,EAAsB,CACxBnL,WACAY,MAAAA,EACAvc,OACAuZ,SACAsC,cACArC,aACA+F,OACAnE,YAAAA,EACAqG,aACGpN,GAED0S,SAAqBtF,WAASe,mBAAoBA,GACxDrf,KAAKyjB,iBAAmB,IAAIG,EAAmBpS,EAAW,CAACgF,EAAmBF,EAAeuN,IAAW7jB,KAAK8jB,oBAAoBtN,EAAmBF,EAAeqN,GAAsBE,GAASzH,EAAMnE,EAAaqG,GACrN,OAAApS,EAAAlM,KAAKyjB,mBAALvX,EAAuBsT,iBAC3B,CACA,mBAAAsE,CAAoBtS,EAAW8E,EAAepF,EAAS6S,GACnD/jB,KAAKyjB,sBAAmB,EACxB,MAAMrH,KAAEA,OAAMvf,EAAAkE,SAAMA,EAAUqY,MAAAA,EAAAA,UAAO4K,EAAA3K,SAAWA,GAAanI,EAC7DlR,KAAKikB,WAAahd,EAAKN,MCxC/B,SAAoB6K,EAAW4K,EAAMvf,EAAMkE,GAMvC,MAAMmjB,EAAiB1S,EAAU,GACjC,GAAuB,OAAnB0S,EACA,OAAO,EAMX,GAAa,YAAT9H,GAA+B,eAATA,EACtB,OAAO,EACX,MAAM+H,EAAiB3S,EAAUA,EAAUlR,OAAS,GAC9C8jB,EAAqBnB,GAAaiB,EAAgB9H,GAClDiI,EAAqBpB,GAAakB,EAAgB/H,GAGxD,SAAKgI,IAAuBC,KA9BhC,SAA6B7S,GACzB,MAAMxU,EAAUwU,EAAU,GAC1B,GAAyB,IAArBA,EAAUlR,OACV,OAAO,EACX,IAAA,IAASC,EAAI,EAAGA,EAAIiR,EAAUlR,OAAQC,IAClC,GAAIiR,EAAUjR,KAAOvD,EACjB,OAAO,CAEnB,CAyBYsnB,CAAoB9S,KACb,WAAT3U,GAAqB0kB,GAAY1kB,KAAUkE,EACrD,CDmBawjB,CAAW/S,EAAW4K,EAAMvf,EAAMkE,MAC/BpC,EAAmB6lB,mBAAsBpL,GACzC,MAAAC,GAAAA,EAAWlD,GAAiB3E,EAAWN,EAASoF,IAEpD9E,EAAU,GAAKA,EAAUA,EAAUlR,OAAS,GAC5C4iB,GAAqBhS,GACrBA,EAAQkF,OAAS,GAcrB,MAOMqO,EAAkB,CACpB7M,UARcmM,EACX/jB,KAAKikB,YAEFjkB,KAAKikB,WAAajkB,KAAK0jB,UA9Df,GA+DJ1jB,KAAKikB,WAFTjkB,KAAK0jB,eAIT,EAGFpN,mBACGpF,EACHM,UAAAA,GAOEoQ,GAAaoC,GDlF3B,SAAkC9S,SAC9B,MAAQ+G,YAAAA,EAAAA,KAAamE,EAAA1D,YAAMA,aAAarC,EAAAvF,QAAYA,EAAAjU,KAASA,GAASqU,EAQtE,MAPgB,OAAAhF,EAAA,MAAA+L,OAAA,EAAAA,EAAayM,YAAb,EAAAxY,EAAoBlP,mBAOX2nB,aACrB,OAAO,EAEX,MAAMtL,SAAEA,EAAAuL,kBAAUA,GAAsB3M,EAAYyM,MAAMG,WAC1D,OAAQzB,MACJhH,GACA+G,GAAkB/d,IAAIgX,KACZ,cAATA,IAAyBwI,KAKzBvL,IACAX,GACc,WAAfrC,GACY,IAAZvF,GACS,YAATjU,CACR,CCwDwCioB,CAAyBL,GACnD,IAAI3B,GAAwB,IACvB2B,EACHnG,QAASmG,EAAgBxM,YAAYyM,MAAM1nB,UAE7C,IAAI0a,GAAY+M,GACtB7C,EAAU3K,SAASK,KAAK,IAAMtX,KAAKqX,kBAAkB0N,MAAM3lB,GACvDY,KAAKglB,kBACLhlB,KAAKwjB,aAAe5B,EAAUnH,eAAeza,KAAKglB,iBAClDhlB,KAAKglB,qBAAkB,GAE3BhlB,KAAKujB,WAAa3B,CACtB,CACA,YAAI3K,GACA,OAAKjX,KAAKujB,WAICvjB,KAAK4hB,UAAU3K,SAHfjX,KAAKkX,SAKpB,CACA,IAAAI,CAAKC,EAAW0N,GACZ,OAAOjlB,KAAKiX,SAASiO,QAAQ3N,GAAWD,KAAK,OACjD,CACA,aAAIsK,SAKA,OAJK5hB,KAAKujB,aACN,OAAArX,EAAAlM,KAAKyjB,mBAALvX,EAAuB8T,SpB/D/BhC,IAAW,EACXmB,KACAlB,KACAD,IAAW,GoB+DAhe,KAAKujB,UAChB,CACA,YAAIvU,GACA,OAAOhP,KAAK4hB,UAAU5S,QAC1B,CACA,QAAI/H,GACA,OAAOjH,KAAK4hB,UAAU3a,IAC1B,CACA,QAAIA,CAAKE,GACLnH,KAAK4hB,UAAU3a,KAAOE,CAC1B,CACA,SAAIoP,GACA,OAAOvW,KAAK4hB,UAAUrL,KAC1B,CACA,SAAIlS,GACA,OAAOrE,KAAK4hB,UAAUvd,KAC1B,CACA,SAAIkS,CAAM0D,GACNja,KAAK4hB,UAAUrL,MAAQ0D,CAC3B,CACA,aAAIrC,GACA,OAAO5X,KAAK4hB,UAAUhK,SAC1B,CACA,cAAA6C,CAAeC,GAOX,OANI1a,KAAKujB,WACLvjB,KAAKwjB,aAAexjB,KAAK4hB,UAAUnH,eAAeC,GAGlD1a,KAAKglB,gBAAkBtK,EAEpB,IAAM1a,KAAK8O,MACtB,CACA,IAAAyJ,GACIvY,KAAK4hB,UAAUrJ,MACnB,CACA,KAAAE,GACIzY,KAAK4hB,UAAUnJ,OACnB,CACA,QAAA2B,GACIpa,KAAK4hB,UAAUxH,UACnB,CACA,MAAA1U,SACQ1F,KAAKujB,YACLvjB,KAAK4hB,UAAUlc,SAEnB,OAAAwG,EAAAlM,KAAKyjB,mBAALvX,EAAuBxG,QAC3B,EE/JJ,MAAMyf,GAAA,2DAWN,SAASC,GAAiBpoB,EAASshB,EAAS+G,EAAQ,GAEhD,MAAO/d,EAAOge,GAVlB,SAA0BtoB,GACtB,MAAMiM,EAAQkc,GAAsBI,KAAKvoB,GACzC,IAAKiM,EACD,MAAO,CAAA,GACX,OAASuc,EAAQC,EAAQH,GAAYrc,EACrC,MAAO,CAAC,KAAKuc,GAAUC,IAAUH,EACrC,CAI8BI,CAAiB1oB,GAE3C,IAAKsK,EACD,OAEJ,MAAMqe,EAAWjoB,OAAOkoB,iBAAiBtH,GAASuH,iBAAiBve,GACnE,GAAIqe,EAAU,CACV,MAAMG,EAAUH,EAAS9d,OACzB,OAAOjJ,EAAkBknB,GAAW9d,WAAW8d,GAAWA,CAC9D,CACA,OAAOpe,GAAmB4d,GACpBF,GAAiBE,EAAUhH,EAAS+G,EAAQ,GAC5CC,CACV,CCtCA,SAASS,GAAmBjP,EAAYhb,GACpC,OAAQ,MAAAgb,OAAA,EAAAA,EAAahb,MACjB,MAAAgb,OAAA,EAAAA,EAAa,UACbA,CACR,CCFA,MAAMkP,OAAqBnhB,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,YACG+X,KCNDqJ,GAAiBvnB,GAAO7B,GAASA,EAAKgC,KAAKH,GCK3CwnB,GAAsB,CAACpe,GAAQoC,GAAID,GAASD,GAASI,GAAID,GCLlD,CACTtL,KAAOH,GAAY,SAANA,EACbqJ,MAAQrJ,GAAMA,IDOZynB,GAA0BznB,GAAMwnB,GAAoBnZ,KAAKkZ,GAAcvnB,IEV7E,SAAS0nB,GAAOrnB,GACZ,MAAqB,iBAAVA,EACU,IAAVA,EAEQ,OAAVA,IACY,SAAVA,GAA8B,MAAVA,GAAiBC,EAAkBD,GAKtE,CCNA,MAAMsnB,OAAkBxhB,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAASyhB,GAAmB5nB,GACxB,MAAO0d,EAAMrd,GAASL,EAAE6nB,MAAM,GAAG,GAAI3e,MAAM,KAC3C,GAAa,gBAATwU,EACA,OAAO1d,EACX,MAAOoJ,GAAU/I,EAAMkK,MAAMV,KAAe,GAC5C,IAAKT,EACD,OAAOpJ,EACX,MAAMoL,EAAO/K,EAAMyM,QAAQ1D,EAAQ,IACnC,IAAI0e,EAAeH,GAAYjhB,IAAIgX,GAAQ,EAAI,EAG/C,OAFItU,IAAW/I,IACXynB,GAAgB,KACbpK,EAAO,IAAMoK,EAAe1c,EAAO,GAC9C,CACA,MAAM2c,GAAgB,uBAChBhQ,GAAS,IACRzK,GACHrB,kBAAoBjM,IAChB,MAAMgoB,EAAYhoB,EAAEuK,MAAMwd,IAC1B,OAAOC,EAAYA,EAAUra,IAAIia,IAAoBK,KAAK,KAAOjoB,ICvBnEkoB,GAAM,IACL9e,GACHG,UAAWhG,KAAKqG,OCCdue,GAAmB,CAErBC,YAAa5c,GACb6c,eAAgB7c,GAChB8c,iBAAkB9c,GAClB+c,kBAAmB/c,GACnBgd,gBAAiBhd,GACjBid,aAAcjd,GACdkd,OAAQld,GACRmd,oBAAqBnd,GACrBod,qBAAsBpd,GACtBqd,wBAAyBrd,GACzBsd,uBAAwBtd,GAExBgT,MAAOhT,GACPud,SAAUvd,GACVmT,OAAQnT,GACRwd,UAAWxd,GACXsT,IAAKtT,GACL0T,MAAO1T,GACPyT,OAAQzT,GACRwT,KAAMxT,GAENyd,QAASzd,GACToT,WAAYpT,GACZkT,aAAclT,GACdqT,cAAerT,GACfiT,YAAajT,GACb0d,OAAQ1d,GACR2d,UAAW3d,GACX4d,YAAa5d,GACb6d,aAAc7d,GACd8d,WAAY9d,GAEZ+d,oBAAqB/d,GACrBge,oBAAqBhe,MCrCG,CACxB6Q,OAAQ/Q,GACRiS,QAASjS,GACTkS,QAASlS,GACTyR,QAASzR,GACT7B,SACAoT,OAAQpT,GACRqT,OAAQrT,GACRggB,OAAQhgB,GACR0T,KAAM7R,GACN0R,MAAO1R,GACP4R,MAAO5R,GACPoe,SAAUle,GACVmR,WAAYnR,GACZoR,WAAYpR,GACZ8R,WAAY9R,GACZtI,EAAGsI,GACHkR,EAAGlR,GACH6R,EAAG7R,GACHme,YAAane,GACboe,qBAAsBpe,GACtByW,QAASzY,GACTqgB,QAASle,GACTme,QAASne,GACToe,QAASve,IDeTwe,OAAQ9B,GAER+B,YAAazgB,GACb0gB,cAAe1gB,GACf2gB,WAAYjC,IEvCVkC,GAAoB,IACnBjC,GAEHnc,SACAqe,gBAAiBre,GACjBse,aAActe,GACd0W,KAAM1W,GACNue,OAAQve,GAERwe,YAAaxe,GACbye,eAAgBze,GAChB0e,iBAAkB1e,GAClB2e,kBAAmB3e,GACnB4e,gBAAiB5e,GACjB+L,UACA8S,aAAc9S,IAKZ+S,GAAuB1tB,GAAQgtB,GAAkBhtB,GCvBvD,SAAS6O,GAAkB7O,EAAKiD,GAC5B,IAAI0qB,EAAmBD,GAAoB1tB,GAI3C,OAHI2tB,IAAqBhT,KACrBgT,EAAmBzd,IAEhByd,EAAiB9e,kBAClB8e,EAAiB9e,kBAAkB5L,QACnC,CACV,CCHA,MAAM2qB,GAAmB,IAAI7kB,IAAI,CAAC,OAAQ,OAAQ,MCAlD,MAAM8kB,WAA6BtK,GAC/B,WAAAtf,CAAYuf,EAAqBjF,EAAY+B,EAAMnE,EAAaqG,GAC5D3G,MAAM2H,EAAqBjF,EAAY+B,EAAMnE,EAAaqG,GAAS,EACvE,CACA,aAAAc,GACI,MAAME,oBAAEA,EAAAhB,QAAqBA,EAAAlC,KAASA,GAASpc,KAC/C,IAAKse,IAAYA,EAAQthB,QACrB,OACJ2a,MAAMyH,gBAIN,IAAA,IAAS7e,EAAI,EAAGA,EAAI+e,EAAoBhf,OAAQC,IAAK,CACjD,IAAIuhB,EAAWxC,EAAoB/e,GACnC,GAAwB,iBAAbuhB,IACPA,EAAWA,EAASja,OAChBH,GAAmBoa,IAAW,CAC9B,MAAM6D,EAAWP,GAAiBtD,EAAUxD,EAAQthB,cACnC,IAAb2oB,IACArG,EAAoB/e,GAAKolB,GAEzBplB,IAAM+e,EAAoBhf,OAAS,IACnCN,KAAKsW,cAAgBwL,EAE7B,CAER,CAaA,GAPA9hB,KAAK4pB,wBAOA5D,GAAe5gB,IAAIgX,IAAwC,IAA/BkD,EAAoBhf,OACjD,OAEJ,MAAOwN,EAAQC,GAAUuR,EACnBuK,EAAa1D,GAAuBrY,GACpCgc,EAAa3D,GAAuBpY,GAI1C,GAAI8b,IAAeC,EAMnB,GAAIhN,GAAc+M,IAAe/M,GAAcgN,GAC3C,IAAA,IAASvpB,EAAI,EAAGA,EAAI+e,EAAoBhf,OAAQC,IAAK,CACjD,MAAMxB,EAAQugB,EAAoB/e,GACb,iBAAVxB,IACPugB,EAAoB/e,GAAKyH,WAAWjJ,GAE5C,MAEKke,GAAiBb,KAItBpc,KAAKoe,kBAAmB,EAEhC,CACA,oBAAAwL,GACI,MAAMtK,oBAAEA,EAAAlD,KAAqBA,GAASpc,KAChC+pB,EAAsB,GAC5B,IAAA,IAASxpB,EAAI,EAAGA,EAAI+e,EAAoBhf,OAAQC,KACb,OAA3B+e,EAAoB/e,IACpB6lB,GAAO9G,EAAoB/e,MAC3BwpB,EAAoB5rB,KAAKoC,GAG7BwpB,EAAoBzpB,QD7EhC,SAAqCgf,EAAqByK,EAAqB3N,GAC3E,IACI4N,EADAzpB,EAAI,EAER,KAAOA,EAAI+e,EAAoBhf,SAAW0pB,GAAoB,CAC1D,MAAMlI,EAAWxC,EAAoB/e,GACb,iBAAbuhB,IACN4H,GAAiBtkB,IAAI0c,IACtB7W,GAAoB6W,GAAU1W,OAAO9K,SACrC0pB,EAAqB1K,EAAoB/e,IAE7CA,GACJ,CACA,GAAIypB,GAAsB5N,EACtB,IAAA,MAAW6N,KAAaF,EACpBzK,EAAoB2K,GAAatf,GAAkByR,EAAM4N,EAGrE,CC6DYE,CAA4B5K,EAAqByK,EAAqB3N,EAE9E,CACA,mBAAA0C,GACI,MAAMR,QAAEA,EAAAgB,oBAASA,EAAAlD,KAAqBA,GAASpc,KAC/C,IAAKse,IAAYA,EAAQthB,QACrB,OACS,WAATof,IACApc,KAAKif,iBAAmBvhB,OAAOysB,aAEnCnqB,KAAKoqB,eAAiBnN,GAAiBb,GAAMkC,EAAQ+L,qBAAsB3sB,OAAOkoB,iBAAiBtH,EAAQthB,UAC3GsiB,EAAoB,GAAKtf,KAAKoqB,eAE9B,MAAME,EAAkBhL,EAAoBA,EAAoBhf,OAAS,QACjD,IAApBgqB,GACAhM,EAAQK,SAASvC,EAAMkO,GAAiBC,KAAKD,GAAiB,EAEtE,CACA,eAAAtL,SACI,MAAMV,QAAEA,EAAAlC,KAASA,EAAAkD,oBAAMA,GAAwBtf,KAC/C,IAAKse,IAAYA,EAAQthB,QACrB,OACJ,MAAM+B,EAAQuf,EAAQK,SAASvC,GAC/Brd,GAASA,EAAMwrB,KAAKvqB,KAAKoqB,gBAAgB,GACzC,MAAMI,EAAqBlL,EAAoBhf,OAAS,EAClDgW,EAAgBgJ,EAAoBkL,GAC1ClL,EAAoBkL,GAAsBvN,GAAiBb,GAAMkC,EAAQ+L,qBAAsB3sB,OAAOkoB,iBAAiBtH,EAAQthB,UACzG,OAAlBsZ,QAAiD,IAAvBtW,KAAKsW,gBAC/BtW,KAAKsW,cAAgBA,IAGrB,OAAApK,EAAAlM,KAAKye,wBAAL,EAAAvS,EAAwB5L,SACxBN,KAAKye,kBAAkB3Y,QAAQ,EAAE2kB,EAAoBC,MACjDpM,EACKK,SAAS8L,GACTvjB,IAAIwjB,KAGjB1qB,KAAK4pB,sBACT,EC5HJ,MAAMe,GAAiB,CAAC5rB,EAAOlC,IACpBA,GAAyB,iBAAVkC,EAChBlC,EAAKoL,UAAUlJ,GACfA,ECAV,SAAS6rB,GAActM,GACnB,OAAOxf,EAASwf,IAAY,iBAAkBA,CAClD,CCYA,MAAMuM,GAOF,WAAA9qB,CAAYxC,EAAM2T,EAAU,IAQxBlR,KAAK8qB,iBAAmB,KAIxB9qB,KAAK+qB,OAAS,CAAA,EACd/qB,KAAKgrB,gBAAmBtsB,UACpB,MAAMoZ,EAAc7Q,EAAKN,MAYzB,GANI3G,KAAKkY,YAAcJ,GACnB9X,KAAKirB,oBAETjrB,KAAKkrB,KAAOlrB,KAAKhD,QACjBgD,KAAKmrB,WAAWzsB,GAEZsB,KAAKhD,UAAYgD,KAAKkrB,OACtB,OAAAhf,EAAAlM,KAAK+qB,OAAOK,SAAZlf,EAAoB9L,OAAOJ,KAAKhD,SAC5BgD,KAAKqrB,YACL,IAAA,MAAWC,KAAatrB,KAAKqrB,WACzBC,EAAUC,SAK1BvrB,KAAKwrB,aAAc,EACnBxrB,KAAKmrB,WAAW5tB,GAChByC,KAAK0kB,MAAQxT,EAAQwT,KACzB,CACA,UAAAyG,CAAWnuB,GAzDC,IAAC+B,EA0DTiB,KAAKhD,QAAUA,EACfgD,KAAKkY,UAAYjR,EAAKN,MACQ,OAA1B3G,KAAK8qB,uBAAyC,IAAZ9tB,IAClCgD,KAAK8qB,kBA7DA/rB,EA6D2BiB,KAAKhD,SA5DrCiP,MAAMjE,WAAWjJ,KA8DzB,CACA,iBAAAksB,CAAkBQ,EAAiBzrB,KAAKhD,SACpCgD,KAAKyrB,eAAiBA,EACtBzrB,KAAK0rB,cAAgB1rB,KAAKkY,SAC9B,CAyCA,QAAAyT,CAASC,GAIL,OAAO5rB,KAAK6rB,GAAG,SAAUD,EAC7B,CACA,EAAAC,CAAGC,EAAW5sB,GACLc,KAAK+qB,OAAOe,KACb9rB,KAAK+qB,OAAOe,GAAa,IAAIhsB,GAEjC,MAAMisB,EAAc/rB,KAAK+qB,OAAOe,GAAW5rB,IAAIhB,GAC/C,MAAkB,WAAd4sB,EACO,KACHC,IAKAnlB,EAAMX,KAAK,KACFjG,KAAK+qB,OAAOK,OAAO5qB,WACpBR,KAAK8O,UAKdid,CACX,CACA,cAAAC,GACI,IAAA,MAAWC,KAAiBjsB,KAAK+qB,OAC7B/qB,KAAK+qB,OAAOkB,GAAexrB,OAEnC,CAIA,MAAAyrB,CAAOC,EAAeC,GAClBpsB,KAAKmsB,cAAgBA,EACrBnsB,KAAKosB,kBAAoBA,CAC7B,CAgBA,GAAAllB,CAAIxI,GACKsB,KAAKmsB,cAINnsB,KAAKmsB,cAAcztB,EAAGsB,KAAKgrB,iBAH3BhrB,KAAKgrB,gBAAgBtsB,EAK7B,CACA,eAAAskB,CAAgBkI,EAAMluB,EAASsH,GAC3BtE,KAAKkH,IAAIlK,GACTgD,KAAKkrB,UAAO,EACZlrB,KAAKyrB,eAAiBP,EACtBlrB,KAAK0rB,cAAgB1rB,KAAKkY,UAAY5T,CAC1C,CAKA,IAAAimB,CAAK7rB,EAAG2tB,GAAe,GACnBrsB,KAAKgrB,gBAAgBtsB,GACrBsB,KAAKkrB,KAAOxsB,EACZsB,KAAK0rB,cAAgB1rB,KAAKyrB,oBAAiB,EAC3CY,GAAgBrsB,KAAK8O,OACjB9O,KAAKosB,mBACLpsB,KAAKosB,mBACb,CACA,KAAAb,SACI,OAAArf,EAAAlM,KAAK+qB,OAAOK,SAAZlf,EAAoB9L,OAAOJ,KAAKhD,QACpC,CACA,YAAAsvB,CAAahB,GACJtrB,KAAKqrB,aACNrrB,KAAKqrB,eAAiBxmB,KAE1B7E,KAAKqrB,WAAWnrB,IAAIorB,EACxB,CACA,eAAAiB,CAAgBjB,GACRtrB,KAAKqrB,YACLrrB,KAAKqrB,WAAW1lB,OAAO2lB,EAE/B,CAQA,GAAA1M,GAII,OAAO5e,KAAKhD,OAChB,CAIA,WAAAwvB,GACI,OAAOxsB,KAAKkrB,IAChB,CAQA,WAAAuB,GACI,MAAM3U,EAAc7Q,EAAKN,MACzB,IAAK3G,KAAK8qB,uBACkB,IAAxB9qB,KAAKyrB,gBACL3T,EAAc9X,KAAKkY,UAzOJ,GA0Of,OAAO,EAEX,MAAM5T,EAAQrC,KAAKzD,IAAIwB,KAAKkY,UAAYlY,KAAK0rB,cA5O1B,IA8OnB,OAAO5qB,EAAkBkH,WAAWhI,KAAKhD,SACrCgL,WAAWhI,KAAKyrB,gBAAiBnnB,EACzC,CAWA,KAAAuK,CAAM6d,GAEF,OADA1sB,KAAK8O,OACE,IAAIqI,QAASC,IAChBpX,KAAKwrB,aAAc,EACnBxrB,KAAK4hB,UAAY8K,EAAetV,GAC5BpX,KAAK+qB,OAAO4B,gBACZ3sB,KAAK+qB,OAAO4B,eAAevsB,WAEhCkX,KAAK,KACAtX,KAAK+qB,OAAO6B,mBACZ5sB,KAAK+qB,OAAO6B,kBAAkBxsB,SAElCJ,KAAK6sB,kBAEb,CAMA,IAAA/d,GACQ9O,KAAK4hB,YACL5hB,KAAK4hB,UAAU9S,OACX9O,KAAK+qB,OAAO+B,iBACZ9sB,KAAK+qB,OAAO+B,gBAAgB1sB,UAGpCJ,KAAK6sB,gBACT,CAMA,WAAAE,GACI,QAAS/sB,KAAK4hB,SAClB,CACA,cAAAiL,UACW7sB,KAAK4hB,SAChB,CAUA,OAAAoL,WACI,OAAA9gB,EAAAlM,KAAKqrB,aAALnf,EAAiBzL,QACjB,OAAA0L,EAAAnM,KAAK+qB,OAAOiC,UAAZ7gB,EAAqB/L,SACrBJ,KAAKgsB,iBACLhsB,KAAK8O,OACD9O,KAAKosB,mBACLpsB,KAAKosB,mBAEb,EAEJ,SAASnU,GAAY1a,EAAM2T,GACvB,OAAO,IAAI2Z,GAAYttB,EAAM2T,EACjC,CC9TA,MAAQ5L,SAAU2nB,IACFjpB,EAAoBoD,gBAAgB,GCH9C8lB,GAAa,CACftrB,GAAG,EACHwZ,GAAG,GAEP,SAAS+R,KACL,OAAOD,GAAWtrB,GAAKsrB,GAAW9R,CACtC,CCJA,SAASgS,GAAaC,EAAmBnc,GACrC,MAAMoc,ECHV,SAAyBD,EAAmBE,EAAOC,GAC/C,GAAIH,aAA6BI,YAC7B,MAAO,CAACJ,GACZ,GACsC,iBAAtBA,EAAgC,CAC5C,IAAIxb,EAAO2O,SAIX,MAAM8M,GAAW,MAAAE,OAAA,EAAAA,EAAgBH,KAC7Bxb,EAAK6b,iBAAiBL,GAC1B,OAAOC,EAAWjqB,MAAM1D,KAAK2tB,GAAY,EAC7C,CACA,OAAOjqB,MAAM1D,KAAK0tB,EACtB,CDXqBM,CAAgBN,GAC3BO,EAAyB,IAAIC,gBAOnC,MAAO,CAACP,EANa,CACjBQ,SAAS,KACN5c,EACH6c,OAAQH,EAAuBG,QAEpB,IAAMH,EAAuBI,QAEhD,CETA,SAASC,GAAaC,GAClB,QAA+B,UAAtBA,EAAMC,aAA2BhB,KAC9C,CCEA,MAAMiB,GAAgB,CAACC,EAAQC,MACtBA,IAGID,IAAWC,GAITF,GAAcC,EAAQC,EAAMC,gBCfrCC,GAAoBN,GACI,UAAtBA,EAAMC,YACyB,iBAAjBD,EAAMO,QAAuBP,EAAMO,QAAU,GAWhC,IAApBP,EAAMQ,UCbfC,OAAwB9pB,IAAI,CAC9B,SACA,QACA,SACA,WACA,MCLJ,MAAM+pB,OAAiB3pB,QCKvB,SAAS4pB,GAAa3vB,GAClB,OAAQgvB,IACc,UAAdA,EAAMpyB,KAEVoD,EAASgvB,GAEjB,CACA,SAASY,GAAiB/gB,EAAQlR,GAC9BkR,EAAOghB,cAAc,IAAIC,aAAa,UAAYnyB,EAAM,CAAE6xB,WAAW,EAAMO,SAAS,IACxF,CCDA,SAASC,GAAkBhB,GACvB,OAAOM,GAAiBN,KAAWf,IACvC,CAoBA,SAASgC,GAAMC,EAAkBC,EAAcne,EAAU,CAAA,GACrD,MAAOoe,EAASC,EAAcC,GAAgBpC,GAAagC,EAAkBle,GACvEue,EAAcC,IAChB,MAAM3hB,EAAS2hB,EAAWC,cAC1B,IAAKT,GAAkBQ,GACnB,OACJd,GAAW1uB,IAAI6N,GACf,MAAM6hB,EAAaP,EAAathB,EAAQ2hB,GAClCG,EAAe,CAACC,EAAUC,KAC5BryB,OAAOsyB,oBAAoB,YAAaC,GACxCvyB,OAAOsyB,oBAAoB,gBAAiBE,GACxCtB,GAAWxpB,IAAI2I,IACf6gB,GAAWjpB,OAAOoI,GAEjBmhB,GAAkBY,IAGG,mBAAfF,GACPA,EAAWE,EAAU,CAAEC,aAGzBE,EAAeE,IACjBN,EAAaM,EAASpiB,IAAWrQ,QAC7BqQ,IAAWyS,UACXtP,EAAQkf,iBACRhC,GAAcrgB,EAAQoiB,EAAQpiB,UAEhCmiB,EAAmBG,IACrBR,EAAaQ,GAAa,IAE9B3yB,OAAO4yB,iBAAiB,YAAaL,EAAaV,GAClD7xB,OAAO4yB,iBAAiB,gBAAiBJ,EAAiBX,IAa9D,OAXAD,EAAQxpB,QAASiI,IH7DrB,IAAqCuQ,GG8DHpN,EAAQkf,gBAAkB1yB,OAASqQ,GAC3CuiB,iBAAiB,cAAeb,EAAYF,GAC1D3E,GAAc7c,KACdA,EAAOuiB,iBAAiB,QAAUpC,GDzDlB,EAACqC,EAAYhB,KACrC,MAAMjR,EAAUiS,EAAWZ,cAC3B,IAAKrR,EACD,OACJ,MAAMkS,EAAgB3B,GAAa,KAC/B,GAAID,GAAWxpB,IAAIkZ,GACf,OACJwQ,GAAiBxQ,EAAS,QAC1B,MAAMmS,EAAc5B,GAAa,KAC7BC,GAAiBxQ,EAAS,QAG9BA,EAAQgS,iBAAiB,QAASG,EAAalB,GAC/CjR,EAAQgS,iBAAiB,OAFN,IAAMxB,GAAiBxQ,EAAS,UAENiR,KAEjDjR,EAAQgS,iBAAiB,UAAWE,EAAejB,GAInDjR,EAAQgS,iBAAiB,OAAQ,IAAMhS,EAAQ0R,oBAAoB,UAAWQ,GAAgBjB,ICsC1CmB,CAAoBxC,EAAOqB,IHjE9CjR,EGkEQvQ,EHjEjC4gB,GAAkBvpB,IAAIkZ,EAAQqS,WACb,IAArBrS,EAAQsS,UGiEC7iB,EAAO8iB,aAAa,cACrB9iB,EAAO6iB,SAAW,MAIvBpB,CACX,CC1EA,SAASsB,GAAaxS,GAClB,OAAOxf,EAASwf,IAAY,oBAAqBA,CACrD,CCRA,MAAMyS,GAAiBhyB,GAAU4J,QAAQ5J,GAASA,EAAM0tB,aCQlDuE,GAAa,IAAI9K,GAAqBxb,GAAOsB,ICF7CilB,GAAsB5zB,EAAAA,cAAc,CACtC6zB,mBAAqBr1B,GAAMA,EAC3Bs1B,UAAU,EACVC,cAAe,UCEnB,MAAMC,WAAwBC,EAAAA,UAC1B,uBAAAC,CAAwBC,GACpB,MAAMlT,EAAUte,KAAKlD,MAAM20B,SAASz0B,QACpC,GAAIshB,GAAWkT,EAAUE,YAAc1xB,KAAKlD,MAAM40B,UAAW,CACzD,MAAMrD,EAAS/P,EAAQqT,aACjBC,EAAchH,GAAcyD,IAC5BA,EAAOwD,aACP,EACAC,EAAO9xB,KAAKlD,MAAMi1B,QAAQ/0B,QAChC80B,EAAKzU,OAASiB,EAAQ0T,cAAgB,EACtCF,EAAK5U,MAAQoB,EAAQuT,aAAe,EACpCC,EAAKtU,IAAMc,EAAQ2T,UACnBH,EAAKpU,KAAOY,EAAQ4T,WACpBJ,EAAKlU,MAAQgU,EAAcE,EAAK5U,MAAQ4U,EAAKpU,IACjD,CACA,OAAO,IACX,CAIA,kBAAAyU,GAAuB,CACvB,MAAA7rB,GACI,OAAOtG,KAAKlD,MAAMs1B,QACtB,EAEJ,SAASC,IAASD,SAAEA,EAAAV,UAAUA,EAAAY,QAAWA,EAAAzgB,KAASA,IAC9C,MAAM0gB,EAAKC,EAAAA,QACLz2B,EAAMyB,EAAAA,OAAO,MACbs0B,EAAOt0B,EAAAA,OAAO,CAChB0f,MAAO,EACPG,OAAQ,EACRG,IAAK,EACLE,KAAM,EACNE,MAAO,KAEL6U,MAAEA,GAAUC,EAAAA,WAAWzB,IAsC7B,OA5BA0B,EAAAA,mBAAmB,KACf,MAAMzV,MAAEA,EAAAG,OAAOA,EAAAG,IAAQA,OAAKE,EAAAE,MAAMA,GAAUkU,EAAK90B,QACjD,GAAI00B,IAAc31B,EAAIiB,UAAYkgB,IAAUG,EACxC,OACJ,MAAMzb,EAAgB,SAAZ0wB,EAAqB,SAAS5U,IAAS,UAAUE,IAC3D7hB,EAAIiB,QAAQ41B,QAAQC,YAAcN,EAClC,MAAMtQ,EAAQzB,SAASC,cAAc,SACjCgS,IACAxQ,EAAMwQ,MAAQA,GAClB,MAAMpE,EAASxc,GAAQ2O,SAASsS,KAahC,OAZAzE,EAAO0E,YAAY9Q,GACfA,EAAM+Q,OACN/Q,EAAM+Q,MAAMC,WAAW,oCACFV,yEAEZrV,wCACCG,gCACRzb,qCACK4b,0CAIJ,KACC6Q,EAAO6E,SAASjR,IAChBoM,EAAO8E,YAAYlR,KAG5B,CAACyP,IACIx0B,EAAAA,IAAIm0B,GAAiB,CAAEK,YAAsBD,SAAU11B,EAAKg2B,QAASD,EAAMM,SAAUgB,EAAAA,aAAmBhB,EAAU,CAAEr2B,SAChI,CC7EA,MAAMs3B,GAAgB,EAAGjB,WAAUkB,UAAS5B,YAAW6B,iBAAgBC,SAAQC,wBAAuBC,OAAMpB,UAASzgB,WACjH,MAAM8hB,EAAmBr2B,EAAYs2B,IAC/BrB,EAAKC,EAAAA,QACX,IAAIqB,GAAkB,EAClBC,EAAUC,EAAAA,QAAQ,KAClBF,GAAkB,EACX,CACHtB,GAAAA,EACAe,UACA5B,YACA8B,SACAD,eAAiBS,IACbL,EAAiBzsB,IAAI8sB,GAAS,GAC9B,IAAA,MAAWC,KAAcN,EAAiBvoB,SACtC,IAAK6oB,EACD,OAERV,GAAkBA,KAEtBW,SAAWF,IACPL,EAAiBzsB,IAAI8sB,GAAS,GACvB,IAAML,EAAiBhuB,OAAOquB,MAG9C,CAACtC,EAAWiC,EAAkBJ,IAyBjC,OAnBIE,GAAyBI,IACzBC,EAAU,IAAKA,IAEnBC,EAAAA,QAAQ,KACJJ,EAAiB7tB,QAAQ,CAACquB,EAAGr4B,IAAQ63B,EAAiBzsB,IAAIpL,GAAK,KAChE,CAAC41B,IAKJ0C,EAAAA,UAAgB,MACX1C,IACIiC,EAAiB7B,MAClByB,GACAA,KACL,CAAC7B,IACS,cAATgC,IACAtB,EAAYl1B,EAAAA,IAAIm1B,GAAU,CAAEX,YAAsBY,UAAkBzgB,OAAYugB,cAE5El1B,EAAAA,IAAIY,EAAgBu2B,SAAU,CAAEt1B,MAAO+0B,EAAS1B,cAE5D,SAASwB,KACL,WAAWpV,GACf,CCnCA,SAAS8V,GAAYC,GAAY,GAC7B,MAAMT,EAAUpB,EAAAA,WAAW50B,GAC3B,GAAgB,OAAZg2B,EACA,MAAO,EAAC,EAAM,MAClB,MAAMpC,UAAEA,EAAA6B,eAAWA,EAAAW,SAAgBA,GAAaJ,EAG1CvB,EAAKC,EAAAA,QACX30B,EAAAA,UAAU,KACN,GAAI02B,EACA,OAAOL,EAAS3B,IAErB,CAACgC,IACJ,MAAMC,EAAeC,EAAAA,YAAY,IAAMF,GAAahB,GAAkBA,EAAehB,GAAK,CAACA,EAAIgB,EAAgBgB,IAC/G,OAAQ7C,GAAa6B,EAAiB,EAAC,EAAOiB,GAAgB,EAAC,EACnE,CCvCA,MAAME,GAAepG,GAAUA,EAAMxyB,KAAO,GAC5C,SAAS64B,GAAavC,GAClB,MAAMwC,EAAW,GAMjB,OAJAC,EAAAA,SAAS/uB,QAAQssB,EAAW9D,IACpBwG,EAAAA,eAAexG,IACfsG,EAASz2B,KAAKmwB,KAEfsG,CACX,CCgCA,MAAMG,GAAkB,EAAG3C,WAAUoB,SAAQF,WAAU,EAAMC,iBAAgBE,yBAAwB,EAAMC,OAAO,OAAQsB,aAAY,EAAO1C,UAAU,OAAQzgB,WAC3J,MAAOojB,EAAiBT,GAAgBF,GAAYU,GAK9CE,EAAkBnB,EAAAA,QAAQ,IAAMY,GAAavC,GAAW,CAACA,IAKzD+C,EAAcH,IAAcC,EAAkB,GAAKC,EAAgB7oB,IAAIqoB,IAIvEU,EAAkB53B,EAAAA,QAAO,GAMzB63B,EAAyB73B,EAAAA,OAAO03B,GAIhCI,EAAeh4B,EAAY,IAAM,IAAIkhB,MAKpC+W,EAAgBC,GAAqBC,EAAAA,SAASP,IAC9CQ,EAAkBC,GAAuBF,EAAAA,SAASP,GACzDv3B,EAA0B,KACtBy3B,EAAgBp4B,SAAU,EAC1Bq4B,EAAuBr4B,QAAUk4B,EAIjC,IAAA,IAAS30B,EAAI,EAAGA,EAAIm1B,EAAiBp1B,OAAQC,IAAK,CAC9C,MAAMzE,EAAM44B,GAAYgB,EAAiBn1B,IACpC40B,EAAY9Y,SAASvgB,GAMtBw5B,EAAa3vB,OAAO7J,IALU,IAA1Bw5B,EAAa1W,IAAI9iB,IACjBw5B,EAAapuB,IAAIpL,GAAK,EAMlC,GACD,CAAC45B,EAAkBP,EAAY70B,OAAQ60B,EAAYxO,KAAK,OAC3D,MAAMiP,EAAkB,GACxB,GAAIV,IAAoBK,EAAgB,CACpC,IAAIM,EAAe,IAAIX,GAKvB,IAAA,IAAS30B,EAAI,EAAGA,EAAIm1B,EAAiBp1B,OAAQC,IAAK,CAC9C,MAAM+tB,EAAQoH,EAAiBn1B,GACzBzE,EAAM44B,GAAYpG,GACnB6G,EAAY9Y,SAASvgB,KACtB+5B,EAAav3B,OAAOiC,EAAG,EAAG+tB,GAC1BsH,EAAgBz3B,KAAKmwB,GAE7B,CAcA,MATa,SAAToF,GAAmBkC,EAAgBt1B,SACnCu1B,EAAeD,GAEnBD,EAAoBhB,GAAakB,IACjCL,EAAkBN,GAKX,IACX,CAWA,MAAMY,YAAEA,GAAgBpD,EAAAA,WAAWt1B,GACnC,OAAQF,EAAAA,IAAI64B,EAAAA,SAAU,CAAE3D,SAAUsD,EAAiBrpB,IAAKiiB,IAChD,MAAMxyB,EAAM44B,GAAYpG,GAClBoD,IAAYsD,IAAcC,KAE1BC,IAAoBQ,GAClBP,EAAY9Y,SAASvgB,IAoB7B,OAAQoB,MAAIm2B,GAAe,CAAE3B,YAAsB4B,UAAU8B,EAAgBp4B,UAAWs2B,SAC9E,EACOE,SAAgBC,wBAA8CC,OAAY7hB,OAAY0hB,eAAgB7B,OAAY,EArBpH,KACX,IAAI4D,EAAalwB,IAAItJ,GAIjB,OAHAw5B,EAAapuB,IAAIpL,GAAK,GAK1B,IAAIk6B,GAAsB,EAC1BV,EAAaxvB,QAASmwB,IACbA,IACDD,GAAsB,KAE1BA,IACA,MAAAF,GAAAA,IACAH,EAAoBN,EAAuBr4B,SAC3Cg4B,IAAa,MAAAR,GAAAA,KACbjB,GAAkBA,MAK6HjB,UAAkBF,SAAU9D,GAASxyB,QC9JlMo6B,GAAc74B,EAAAA,cAAc,CAAE84B,QAAQ,ICHtCC,GAAe,CACjBxU,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJyU,KAAM,CAAC,QACPC,KAAM,CAAC,OAAQ,gBACfC,MAAO,CAAC,cACRC,MAAO,CAAC,aAAc,eAAgB,cACtCC,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCC,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3CC,OAAQ,CAAC,SAAU,aAEjBC,GAAqB,CAAA,EAC3B,IAAA,MAAW/6B,MAAOs6B,GACdS,GAAmB/6B,IAAO,CACtBg7B,UAAYh6B,GAAUs5B,GAAat6B,IAAKsV,KAAMgL,KAAWtf,EAAMsf,KCjBvE,MAAM2a,OAAuBlyB,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,SACA,UACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,kBACA,eACA,aAUJ,SAASmyB,GAAkBl7B,GACvB,OAAQA,EAAIyL,WAAW,UAClBzL,EAAIyL,WAAW,SAAmB,cAARzL,GAC3BA,EAAIyL,WAAW,WACfzL,EAAIyL,WAAW,UACfzL,EAAIyL,WAAW,UACfzL,EAAIyL,WAAW,aACfwvB,GAAiB3xB,IAAItJ,EAC7B,CCpDA,IAAIm7B,GAAiBn7B,IAASk7B,GAAkBl7B,GAoBhD,IAlB+B,mBADEo7B,GAyBLC,QAAQ,0BAA0B/uB,WArB1D6uB,GAAiBn7B,GAAQA,EAAIyL,WAAW,OAASyvB,GAAkBl7B,GAAOo7B,GAAYp7B,GAsB1F,CAAA,MAGA,CA7BA,IAAiCo7B,GCAjC,MAAME,GAAgC/5B,EAAAA,cAAc,ICHpD,SAASg6B,GAAoB34B,GACzB,OAAc,OAANA,GACS,iBAANA,GACY,mBAAZA,EAAEmQ,KACjB,CCDA,SAASyoB,GAAe54B,GACpB,MAAoB,iBAANA,GAAkB2E,MAAMC,QAAQ5E,EAClD,CCLA,MAAM64B,GAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,GAAe,CAAC,aAAcD,ICLpC,SAASE,GAAsB36B,GAC3B,OAAQu6B,GAAoBv6B,EAAM4jB,UAC9B8W,GAAapmB,KAAMgL,GAASkb,GAAex6B,EAAMsf,IACzD,CACA,SAASsb,GAAc56B,GACnB,OAAO6L,QAAQ8uB,GAAsB36B,IAAUA,EAAM66B,SACzD,CCNA,SAASC,GAAuB96B,GAC5B,MAAMw2B,QAAEA,UAAS5S,GCFrB,SAAgC5jB,EAAOg3B,GACnC,GAAI2D,GAAsB36B,GAAQ,CAC9B,MAAMw2B,QAAEA,EAAA5S,QAASA,GAAY5jB,EAC7B,MAAO,CACHw2B,SAAqB,IAAZA,GAAqBgE,GAAehE,GACvCA,OACA,EACN5S,QAAS4W,GAAe5W,GAAWA,OAAU,EAErD,CACA,OAAyB,IAAlB5jB,EAAM+6B,QAAoB/D,EAAU,CAAA,CAC/C,CDTiCgE,CAAuBh7B,EAAO41B,EAAAA,WAAW0E,KACtE,OAAOrD,UAAQ,KAAA,CAAST,UAAS5S,YAAY,CAACqX,GAA0BzE,GAAUyE,GAA0BrX,IAChH,CACA,SAASqX,GAA0BC,GAC/B,OAAO30B,MAAMC,QAAQ00B,GAAQA,EAAKrR,KAAK,KAAOqR,CAClD,CERA,MAAMC,GAAkB,CAAA,ECCxB,SAASC,GAAoBp8B,GAAO86B,OAAAA,EAAAA,SAAQuB,IACxC,OAAQtb,GAAezX,IAAItJ,IACvBA,EAAIyL,WAAW,YACbqvB,QAAuB,IAAbuB,OACLF,GAAgBn8B,IAAgB,YAARA,EACvC,CCNA,MAAMs8B,GAAiB,CACnBx2B,EAAG,aACHwZ,EAAG,aACHW,EAAG,aACHuM,qBAAsB,eAEpB+P,GAAgBzb,GAAmBtc,OCLzC,SAASg4B,GAAgBj0B,EAAOk0B,EAAc3T,GAC1C,MAAM3C,MAAEA,EAAAuW,KAAOA,EAAAC,gBAAMA,GAAoBp0B,EAEzC,IAAIq0B,GAAe,EACfC,GAAqB,EAOzB,IAAA,MAAW78B,KAAOy8B,EAAc,CAC5B,MAAMx5B,EAAQw5B,EAAaz8B,GAC3B,GAAI+gB,GAAezX,IAAItJ,GAEnB48B,GAAe,OAEnB,GACSlxB,GAAkB1L,GACvB08B,EAAK18B,GAAOiD,MAGX,CAED,MAAM65B,EAAcjO,GAAe5rB,EAAO8nB,GAAiB/qB,IACvDA,EAAIyL,WAAW,WAEfoxB,GAAqB,EACrBF,EAAgB38B,GACZ88B,GAGJ3W,EAAMnmB,GAAO88B,CAErB,CACJ,CAiBA,GAhBKL,EAAatwB,YACVywB,GAAgB9T,EAChB3C,EAAMha,UD1BlB,SAAwBswB,EAActwB,EAAW2c,GAE7C,IAAIiU,EAAkB,GAClBC,GAAqB,EAKzB,IAAA,IAASv4B,EAAI,EAAGA,EAAI83B,GAAe93B,IAAK,CACpC,MAAMzE,EAAM8gB,GAAmBrc,GACzBxB,EAAQw5B,EAAaz8B,GAC3B,QAAc,IAAViD,EACA,SACJ,IAAIg6B,GAAiB,EAOrB,GALIA,EADiB,iBAAVh6B,EACUA,KAAWjD,EAAIyL,WAAW,SAAW,EAAI,GAGnB,IAAtBS,WAAWjJ,IAE3Bg6B,GAAkBnU,EAAmB,CACtC,MAAMgU,EAAcjO,GAAe5rB,EAAO8nB,GAAiB/qB,IACtDi9B,IACDD,GAAqB,EAErBD,GAAmB,GADGT,GAAet8B,IAAQA,KACN88B,OAEvChU,IACA3c,EAAUnM,GAAO88B,EAEzB,CACJ,CAUA,OATAC,EAAkBA,EAAgBhxB,OAG9B+c,EACAiU,EAAkBjU,EAAkB3c,EAAW6wB,EAAqB,GAAKD,GAEpEC,IACLD,EAAkB,QAEfA,CACX,CChB8BG,CAAeT,EAAcl0B,EAAM4D,UAAW2c,GAE3D3C,EAAMha,YAKXga,EAAMha,UAAY,SAOtB0wB,EAAoB,CACpB,MAAMpQ,QAAEA,EAAU,MAAAC,QAAOA,EAAU,MAAAC,QAAOA,EAAU,GAAOgQ,EAC3DxW,EAAMwW,gBAAkB,GAAGlQ,KAAWC,KAAWC,GACrD,CACJ,CC3DA,MAAMwQ,GAAwB,KAAA,CAC1BhX,MAAO,CAAA,EACPha,UAAW,CAAA,EACXwwB,gBAAiB,CAAA,EACjBD,KAAM,CAAA,ICEV,SAASU,GAAkBnrB,EAAQnC,EAAQ9O,GACvC,IAAA,MAAWhB,KAAO8P,EACTmlB,GAAcnlB,EAAO9P,KAAUo8B,GAAoBp8B,EAAKgB,KACzDiR,EAAOjS,GAAO8P,EAAO9P,GAGjC,CAQA,SAASq9B,GAASr8B,EAAOs8B,GACrB,MACMnX,EAAQ,CAAA,EAMd,OAFAiX,GAAkBjX,EALAnlB,EAAMmlB,OAAS,CAAA,EAKGnlB,GACpCvB,OAAO89B,OAAOpX,EAdlB,UAAgC2C,kBAAEA,GAAqBwU,GACnD,OAAOrF,EAAAA,QAAQ,KACX,MAAM1vB,EDfgB,CAC1B4d,MAAO,CAAA,EACPha,UAAW,CAAA,EACXwwB,gBAAiB,CAAA,EACjBD,KAAM,CAAA,GCaF,OADAF,GAAgBj0B,EAAO+0B,EAAaxU,GAC7BrpB,OAAO89B,OAAO,CAAA,EAAIh1B,EAAMm0B,KAAMn0B,EAAM4d,QAC5C,CAACmX,GACR,CAQyBE,CAAuBx8B,EAAOs8B,IAC5CnX,CACX,CACA,SAASsX,GAAaz8B,EAAOs8B,GAEzB,MAAMI,EAAY,CAAA,EACZvX,EAAQkX,GAASr8B,EAAOs8B,GAoB9B,OAnBIt8B,EAAMw5B,OAA+B,IAAvBx5B,EAAM28B,eAEpBD,EAAUE,WAAY,EAEtBzX,EAAM0X,WACF1X,EAAM2X,iBACF3X,EAAM4X,mBACF,OAEZ5X,EAAM6X,aACa,IAAfh9B,EAAMw5B,KACA,OACA,QAAsB,MAAfx5B,EAAMw5B,KAAe,IAAM,WAEzB,IAAnBx5B,EAAM8zB,WACL9zB,EAAMi9B,OAASj9B,EAAMk9B,YAAcl9B,EAAMm9B,YAC1CT,EAAU5I,SAAW,GAEzB4I,EAAUvX,MAAQA,EACXuX,CACX,CCpDA,MAAMU,GAAW,CACbhlB,OAAQ,oBACRilB,MAAO,oBAELC,GAAY,CACdllB,OAAQ,mBACRilB,MAAO,mBCFX,SAASE,GAAch2B,GAAOi2B,MAAEA,EAAAC,MAAOA,EAAAC,UAAOA,EAAAC,WAAWA,EAAAC,YAAYA,EAAc,EAAAC,WAAGA,EAAa,KAEhG9mB,GAAU+mB,EAAUhW,EAAmBiW,GAMtC,GALAvC,GAAgBj0B,EAAOwP,EAAQ+Q,GAK3BgW,EAIA,YAHIv2B,EAAM4d,MAAM6Y,UACZz2B,EAAM02B,MAAMD,QAAUz2B,EAAM4d,MAAM6Y,UAI1Cz2B,EAAM02B,MAAQ12B,EAAM4d,MACpB5d,EAAM4d,MAAQ,CAAA,EACd,MAAM8Y,MAAEA,EAAA9Y,MAAOA,GAAU5d,EAKrB02B,EAAM9yB,YACNga,EAAMha,UAAY8yB,EAAM9yB,iBACjB8yB,EAAM9yB,YAEbga,EAAMha,WAAa8yB,EAAMtC,mBACzBxW,EAAMwW,gBAAkBsC,EAAMtC,iBAAmB,iBAC1CsC,EAAMtC,iBAEbxW,EAAMha,YAKNga,EAAM+Y,oBAAeH,WAAWG,eAAgB,kBACzCD,EAAMC,mBAGH,IAAVV,IACAS,EAAMn5B,EAAI04B,QACA,IAAVC,IACAQ,EAAM3f,EAAImf,QACI,IAAdC,IACAO,EAAM5yB,MAAQqyB,QAEC,IAAfC,GDlCR,SAAsBM,EAAOz6B,EAAQ26B,EAAU,EAAG/lB,EAAS,EAAGgmB,GAAc,GAExEH,EAAMN,WAAa,EAGnB,MAAMtpB,EAAO+pB,EAAchB,GAAWE,GAEtCW,EAAM5pB,EAAK+D,QAAUhL,GAAGjC,WAAWiN,GAEnC,MAAMulB,EAAavwB,GAAGjC,UAAU3H,GAC1Bo6B,EAAcxwB,GAAGjC,UAAUgzB,GACjCF,EAAM5pB,EAAKgpB,OAAS,GAAGM,KAAcC,GACzC,CCuBQS,CAAaJ,EAAON,EAAYC,EAAaC,GAAY,EAEjE,CCpDA,MAAMS,GAAuB,KAAA,CJDzBnZ,MAAO,CAAA,EACPha,UAAW,CAAA,EACXwwB,gBAAiB,CAAA,EACjBD,KAAM,CAAA,EIANuC,MAAO,CAAA,ICJLH,GAAYS,GAAuB,iBAARA,GAA0C,QAAtBA,EAAIC,cCMzD,SAASC,GAAYz+B,EAAOs8B,EAAaoC,EAAWC,GAChD,MAAMC,EAAc3H,EAAAA,QAAQ,KACxB,MAAM1vB,EFNe,CJDzB4d,MAAO,CAAA,EACPha,UAAW,CAAA,EACXwwB,gBAAiB,CAAA,EACjBD,KAAM,CAAA,EIANuC,MAAO,CAAA,GEMH,OADAV,GAAch2B,EAAO+0B,EAAawB,GAASa,GAAY3+B,EAAM8nB,kBAAmB9nB,EAAMmlB,OAC/E,IACA5d,EAAM02B,MACT9Y,MAAO,IAAK5d,EAAM4d,SAEvB,CAACmX,IACJ,GAAIt8B,EAAMmlB,MAAO,CACb,MAAM0Z,EAAY,CAAA,EAClBzC,GAAkByC,EAAW7+B,EAAMmlB,MAAOnlB,GAC1C4+B,EAAYzZ,MAAQ,IAAK0Z,KAAcD,EAAYzZ,MACvD,CACA,OAAOyZ,CACX,CCjBA,MAAME,GAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,GAAeJ,GACpB,MAKqB,iBAAdA,IAIHA,EAAUpf,SAAS,SAOvBuf,GAAqB19B,QAAQu9B,IAAa,GAItC,SAAS58B,KAAK48B,GAItB,CCpBA,SAASK,GAAUL,EAAW3+B,EAAOf,GAAKw8B,aAAEA,GAAiBpH,EAAU4K,GAAqB,GACxF,MAGML,GAHiBG,GAAeJ,GAChCF,GACAhC,IAC6Bz8B,EAAOy7B,EAAcpH,EAAUsK,GAC5DO,ErBqBV,SAAqBl/B,EAAOm/B,EAAOF,GAC/B,MAAMC,EAAgB,CAAA,EACtB,IAAA,MAAWlgC,KAAOgB,EAQF,WAARhB,GAA4C,iBAAjBgB,EAAMsO,SAEjC6rB,GAAcn7B,KACU,IAAvBigC,GAA+B/E,GAAkBl7B,KAChDmgC,IAAUjF,GAAkBl7B,IAE7BgB,EAAiB,WACdhB,EAAIyL,WAAW,aACnBy0B,EAAclgC,GACVgB,EAAMhB,IAGlB,OAAOkgC,CACX,CqB5C0BE,CAAYp/B,EAA4B,iBAAd2+B,EAAwBM,GAClEI,EAAeV,IAAc1F,WAAW,IAAKiG,KAAkBN,EAAa3/B,OAAQ,CAAA,GAMpFq2B,SAAEA,GAAat1B,EACf44B,EAAmB3B,EAAAA,QAAQ,IAAOhD,GAAcqB,GAAYA,EAASxT,MAAQwT,EAAW,CAACA,IAC/F,OAAO3R,EAAAA,cAAcgb,EAAW,IACzBU,EACH/J,SAAUsD,GAElB,CCzBA,SAAS0G,GAAc1d,GACnB,MAAMra,EAAQ,CAAC,CAAA,EAAI,IAKnB,OAJA,MAAAqa,GAAAA,EAAetT,OAAOtF,QAAQ,CAAC/G,EAAOjD,KAClCuI,EAAM,GAAGvI,GAAOiD,EAAM6f,MACtBva,EAAM,GAAGvI,GAAOiD,EAAM0tB,gBAEnBpoB,CACX,CACA,SAASg4B,GAAwBv/B,EAAO4G,EAAY8vB,EAAQ9U,GAIxD,GAA0B,mBAAfhb,EAA2B,CAClC,MAAO1G,EAAS+D,GAAYq7B,GAAc1d,GAC1Chb,EAAaA,OAAsB,IAAX8vB,EAAuBA,EAAS12B,EAAM02B,OAAQx2B,EAAS+D,EACnF,CAaA,GAR0B,iBAAf2C,IACPA,EAAa5G,EAAM66B,UAAY76B,EAAM66B,SAASj0B,IAOxB,mBAAfA,EAA2B,CAClC,MAAO1G,EAAS+D,GAAYq7B,GAAc1d,GAC1Chb,EAAaA,OAAsB,IAAX8vB,EAAuBA,EAAS12B,EAAM02B,OAAQx2B,EAAS+D,EACnF,CACA,OAAO2C,CACX,CC1BA,SAAS44B,GAAmBv9B,GACxB,OAAOgyB,GAAchyB,GAASA,EAAM6f,MAAQ7f,CAChD,CCOA,SAASw9B,GAAiBz/B,EAAOg3B,EAAS0I,EAAiBC,GACvD,MAAMrxB,EAAS,CAAA,EACTsxB,EAAeD,EAAmB3/B,EAAO,IAC/C,IAAA,MAAWhB,KAAO4gC,EACdtxB,EAAOtP,GAAOwgC,GAAmBI,EAAa5gC,IAElD,IAAIw3B,QAAEA,EAAA5S,QAASA,GAAY5jB,EAC3B,MAAM6/B,EAA0BlF,GAAsB36B,GAChD8/B,EAAkBlF,GAAc56B,GAClCg3B,GACA8I,IACCD,IACiB,IAAlB7/B,EAAM+6B,eACU,IAAZvE,IACAA,EAAUQ,EAAQR,cACN,IAAZ5S,IACAA,EAAUoT,EAAQpT,UAE1B,IAAImc,IAA4BL,IACE,IAA5BA,EAAgBlJ,QAEtBuJ,EAA4BA,IAAyC,IAAZvJ,EACzD,MAAMwJ,EAAeD,EAA4Bnc,EAAU4S,EAC3D,GAAIwJ,GACwB,kBAAjBA,IACNzF,GAAoByF,GAAe,CACpC,MAAMC,EAAO15B,MAAMC,QAAQw5B,GAAgBA,EAAe,CAACA,GAC3D,IAAA,IAASv8B,EAAI,EAAGA,EAAIw8B,EAAKz8B,OAAQC,IAAK,CAClC,MAAMolB,EAAW0W,GAAwBv/B,EAAOigC,EAAKx8B,IACrD,GAAIolB,EAAU,CACV,MAAMqX,cAAEA,EAAAlmB,WAAeA,KAAe/I,GAAW4X,EACjD,IAAA,MAAW7pB,KAAOiS,EAAQ,CACtB,IAAIkvB,EAAclvB,EAAOjS,GACzB,GAAIuH,MAAMC,QAAQ25B,GAAc,CAQ5BA,EAAcA,EAHAJ,EACRI,EAAY38B,OAAS,EACrB,EAEV,CACoB,OAAhB28B,IACA7xB,EAAOtP,GAAOmhC,EAEtB,CACA,IAAA,MAAWnhC,KAAOkhC,EACd5xB,EAAOtP,GAAOkhC,EAAclhC,EAEpC,CACJ,CACJ,CACA,OAAOsP,CACX,CACA,MAAM8xB,GAAsBC,GAAW,CAACrgC,EAAOq0B,KAC3C,MAAM2C,EAAUpB,EAAAA,WAAW0E,IACrBoF,EAAkB9J,EAAAA,WAAW50B,GAC7Bs/B,EAAO,IAjEjB,UAAqBC,4BAAAA,EAAAA,kBAA6BC,GAAsBxgC,EAAOg3B,EAAS0I,GAKpF,MAJc,CACVjE,aAAcgE,GAAiBz/B,EAAOg3B,EAAS0I,EAAiBa,GAChEE,YAAaD,IAGrB,CA2DuBE,CAAUL,EAAQrgC,EAAOg3B,EAAS0I,GACrD,OAAOrL,EAAWiM,IAAS9/B,EAAY8/B,ICxE3C,SAASC,GAA4BvgC,EAAO00B,EAAW9S,SACnD,MAAMuD,MAAEA,GAAUnlB,EACZ2gC,EAAY,CAAA,EAClB,IAAA,MAAW3hC,KAAOmmB,GACV8O,GAAc9O,EAAMnmB,KACnB01B,EAAUvP,OACP8O,GAAcS,EAAUvP,MAAMnmB,KAClCo8B,GAAoBp8B,EAAKgB,SACmB,KAA5C,OAAAoP,mBAAeyS,SAAS7iB,SAAxB,EAAAoQ,EAA8BwxB,cAC9BD,EAAU3hC,GAAOmmB,EAAMnmB,IAG/B,OAAO2hC,CACX,CCZA,MAAME,GAAmCT,GAAmB,CAC5DG,4BAAIA,GACAC,kBAAmBrE,KCHvB,SAASoE,GAA4BvgC,EAAO00B,EAAW9S,GACnD,MAAM+e,EAAYG,GAA8B9gC,EAAO00B,EAAW9S,GAClE,IAAA,MAAW5iB,KAAOgB,EACd,GAAIi0B,GAAcj0B,EAAMhB,KACpBi1B,GAAcS,EAAU11B,IAAO,CAI/B2hC,OAHkB7gB,GAAmB1e,QAAQpC,GACvC,OAASA,EAAI+hC,OAAO,GAAGC,cAAgBhiC,EAAI6N,UAAU,GACrD7N,GACiBgB,EAAMhB,EACjC,CAEJ,OAAO2hC,CACX,CCXA,MAAMM,GAAkCb,GAAmB,CACvDG,+BACAC,kBAAmBlC,KCNjB4C,GAAwB7iC,OAAOC,IAAI,yBCAzC,SAAS6iC,GAAYliC,GACjB,OAAQA,GACW,iBAARA,GACPR,OAAOC,UAAUC,eAAeiB,KAAKX,EAAK,UAClD,CCGA,SAASmiC,GAAa9E,EAAa1a,EAAeyf,GAC9C,OAAO1J,EAAAA,YAAa2J,IACZA,GACAhF,EAAYiF,SAAWjF,EAAYiF,QAAQD,GAE3C1f,IACI0f,EACA1f,EAAc4f,MAAMF,GAGpB1f,EAAc6f,WAGlBJ,IAC2B,mBAAhBA,EACPA,EAAYC,GAEPH,GAAYE,KACjBA,EAAYnhC,QAAUohC,KASlC,CAAC1f,GACL,CChCA,MAAM8f,GAAeC,GAAQA,EAAIjzB,QAAQ,mBAAoB,SAAS8vB,cCAhEoD,GAA+B,QAAUF,GADjB,kBCIxBG,GAA2BthC,EAAAA,cAAc,ICI/C,SAASuhC,GAAiBnD,EAAWrC,EAAat8B,EAAO+hC,EAAqBC,WAC1E,MAAQpgB,cAAe2P,GAAWqE,EAAAA,WAAW0E,IACvC2H,EAAcrM,EAAAA,WAAWwD,IACzBsG,EAAkB9J,EAAAA,WAAW50B,GAC7BkhC,EAAsBtM,EAAAA,WAAWzB,IAAqBG,cACtD6N,EAAmBzhC,EAAAA,OAAO,MAIhCqhC,EACIA,GACIE,EAAYG,UACfD,EAAiBjiC,SAAW6hC,IAC7BI,EAAiBjiC,QAAU6hC,EAAoBpD,EAAW,CACtDrC,cACA/K,SACAvxB,QACA0/B,kBACA2C,wBAAuB3C,IACW,IAA5BA,EAAgBlJ,QAEtB0L,yBAGR,MAAMtgB,EAAgBugB,EAAiBjiC,QAKjCoiC,EAA2B1M,EAAAA,WAAWiM,KACxCjgB,GACCA,EAAc2gB,aACfP,GACwB,SAAvBpgB,EAAc7hB,MAA0C,QAAvB6hB,EAAc7hB,MA+DxD,SAA8B6hB,EAAe5hB,EAAOgiC,EAA2BQ,GAC3E,MAAMnH,SAAEA,EAAUvB,OAAAA,EAAQN,KAAAA,kBAAMiJ,EAAAC,aAAiBA,EAAAC,WAAcA,EAAAC,gBAAYA,GAAqB5iC,EAChG4hB,EAAc2gB,WAAa,IAAIP,EAA0BpgB,EAAc6Z,aAAcz7B,EAAM,8BACrF,EACA6iC,GAAyBjhB,EAAc2P,SAC7C3P,EAAc2gB,WAAWO,WAAW,CAChCzH,WACAvB,OAAAA,EACAiJ,oBAAqBl3B,QAAQ2tB,IAAUiJ,GAAmBtB,GAAYsB,GACtE7gB,gBAQAohB,cAAiC,iBAAXlJ,EAAsBA,EAAS,OACrD0I,yBACAS,UAAWL,EACXF,eACAC,cAER,CArFQO,CAAqBf,EAAiBjiC,QAASF,EAAOgiC,EAA2BM,GAErF,MAAMa,EAAYziC,EAAAA,QAAO,GACzBm1B,EAAAA,mBAAmB,KAKXjU,GAAiBuhB,EAAUjjC,SAC3B0hB,EAActY,OAAOtJ,EAAO0/B,KAOpC,MAAM0D,EAAoBpjC,EAAM4hC,IAC1ByB,EAAe3iC,EAAAA,OAAOmL,QAAQu3B,MAC/B,OAAAh0B,EAAAxO,OAAO0iC,8BAAP,EAAAl0B,EAAAxP,KAAAgB,OAAiCwiC,MAClC,OAAA/zB,EAAAzO,OAAO2iC,kDAA8BH,KAyCzC,OAxCAviC,EAA0B,KACjB+gB,IAELuhB,EAAUjjC,SAAU,EACpBU,OAAO4iC,iBAAkB,EACzB5hB,EAAc6hB,iBACd7hB,EAAc8hB,0BAWVL,EAAanjC,SAAW0hB,EAAc+hB,gBACtC/hB,EAAc+hB,eAAeC,oBAGrC7iC,EAAAA,UAAU,KACD6gB,KAEAyhB,EAAanjC,SAAW0hB,EAAc+hB,gBACvC/hB,EAAc+hB,eAAeC,iBAE7BP,EAAanjC,UAEboK,eAAe,WACX,OAAA8E,EAAAxO,OAAOijC,8BAAPz0B,EAAAxP,KAAAgB,OAAqCwiC,KAEzCC,EAAanjC,SAAU,GAM3B0hB,EAAckiB,sBAAmB,KAE9BliB,CACX,CAyBA,SAASihB,GAAyBjhB,GAC9B,GAAKA,EAEL,OAAiD,IAA1CA,EAAcxN,QAAQ2vB,gBACvBniB,EAAc2gB,WACdM,GAAyBjhB,EAAc2P,OACjD,CC3GA,SAASyS,GAAsBrF,GAAWM,mBAAEA,GAAqB,GAAU,CAAA,EAAIgF,EAAmBlC,GAC9FkC,GC5BJ,SAAsBC,GAClB,IAAA,MAAWllC,KAAOklC,EACdnK,GAAmB/6B,GAAO,IACnB+6B,GAAmB/6B,MACnBklC,EAASllC,GAGxB,CDqByBmlC,CAAaF,GAClC,MAAMG,EAAiBrF,GAAeJ,GAChCsC,GACAJ,GACN,SAASwD,EAAmBrkC,EAAOqhC,GAK/B,IAAIiD,EACJ,MAAMC,EAAiB,IAChB3O,EAAAA,WAAWzB,OACXn0B,EACHq7B,SAAUmJ,GAAYxkC,KAEpBq0B,SAAEA,GAAakQ,EACfvN,EAAU8D,GAAuB96B,GACjCs8B,EAAc8H,EAAepkC,EAAOq0B,GAC1C,IAAKA,GAAY1zB,EAAW,CAgCfi1B,EAAAA,WAAWwD,IAAaC,OA9BjC,MAAMoL,EA4ClB,SAAoCzkC,GAChC,MAAQw5B,KAAAA,EAAMM,OAAAA,GAAWC,GACzB,IAAKP,IAASM,EACV,MAAO,CAAA,EACX,MAAM4K,EAAW,IAAKlL,KAASM,GAC/B,MAAO,CACHwK,eAAe,MAAA9K,OAAA,EAAAA,EAAMQ,UAAUh6B,MAAU,MAAA85B,OAAA,EAAAA,EAAQE,UAAUh6B,IACrD0kC,EAASJ,mBACT,EACNK,eAAgBD,EAASC,eAEjC,CAvDqCC,CAA2BL,GACpDD,EAAgBG,EAAiBH,cAOjCtN,EAAQpV,cAAgBkgB,GAAiBnD,EAAWrC,EAAaiI,EAAgBxC,EAAqB0C,EAAiBE,eAC3H,CAKA,OAAQtkC,EAAAA,KAAKi6B,GAAc/C,SAAU,CAAEt1B,MAAO+0B,EAAS1B,SAAU,CAACgP,GAAiBtN,EAAQpV,cAAiBxhB,EAAAA,IAAIkkC,EAAe,CAAE1iB,cAAeoV,EAAQpV,iBAAkB2iB,IAAqB,KAAMvF,GAAUL,EAAW3+B,EAAOohC,GAAa9E,EAAatF,EAAQpV,cAAeyf,GAAc/E,EAAajI,EAAU4K,KAC3T,CACAoF,EAAmBQ,YAAc,UAA+B,iBAAdlG,EAC5CA,EACA,UAAUA,EAAUkG,aAAelG,EAAUrf,MAAQ,QAC3D,MAAMwlB,EAA4BC,EAAAA,WAAWV,GAE7C,OADAS,EAA0B5D,IAAyBvC,EAC5CmG,CACX,CACA,SAASN,IAAYnJ,SAAEA,IACnB,MAAM2J,EAAgBpP,EAAAA,WAAWt1B,GAAoBm1B,GACrD,OAAOuP,QAA8B,IAAb3J,EAClB2J,EAAgB,IAAM3J,EACtBA,CACV,CE3EA,SAAS4J,GAAkBhB,EAAmBlC,GAC1C,GAAqB,oBAAVmD,MACP,OAAOlB,GAMX,MAAMmB,MAAqBzjB,IACrB0jB,EAAU,CAACzG,EAAWvqB,IACjB4vB,GAAsBrF,EAAWvqB,EAAS6vB,EAAmBlC,GAWxE,OAAO,IAAImD,MANuB,CAACvG,EAAWvqB,IAInCgxB,EAAQzG,EAAWvqB,GAEc,CAMxC0N,IAAK,CAACujB,EAASrmC,IACC,WAARA,EACOomC,GAIND,EAAe78B,IAAItJ,IACpBmmC,EAAe/6B,IAAIpL,EAAKglC,GAAsBhlC,OAAK,EAAWilC,EAAmBlC,IAE9EoD,EAAerjB,IAAI9iB,KAGtC,CCrCA,SAASsmC,IAAwB5kB,IAAEA,EAAAE,KAAKA,EAAAE,MAAMA,EAAAD,OAAOA,IACjD,MAAO,CACH/b,EAAG,CAAEpD,IAAKkf,EAAMjf,IAAKmf,GACrBxC,EAAG,CAAE5c,IAAKgf,EAAK/e,IAAKkf,GAE5B,CCVA,SAAS0kB,GAAgBl6B,GACrB,YAAiB,IAAVA,GAAiC,IAAVA,CAClC,CACA,SAASm6B,IAAWn6B,MAAAA,EAAOoT,OAAAA,EAAQC,OAAAA,IAC/B,OAAS6mB,GAAgBl6B,KACpBk6B,GAAgB9mB,KAChB8mB,GAAgB7mB,EACzB,CACA,SAASkd,GAAattB,GAClB,OAAQk3B,GAASl3B,IACbm3B,GAAen3B,IACfA,EAAO2Q,GACP3Q,EAAO2P,QACP3P,EAAO6Q,SACP7Q,EAAO8Q,SACP9Q,EAAOsQ,OACPtQ,EAAOwQ,KACf,CACA,SAAS2mB,GAAen3B,GACpB,OAAOo3B,GAAcp3B,EAAOxJ,IAAM4gC,GAAcp3B,EAAOgQ,EAC3D,CACA,SAASonB,GAAczjC,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCjBA,SAAS0jC,GAAWC,EAAOv6B,EAAOw6B,GAG9B,OAAOA,EADQx6B,GADYu6B,EAAQC,EAGvC,CAIA,SAASC,GAAgBF,EAAOG,EAAW16B,EAAOw6B,EAAaG,GAI3D,YAHiB,IAAbA,IACAJ,EAAQD,GAAWC,EAAOI,EAAUH,IAEjCF,GAAWC,EAAOv6B,EAAOw6B,GAAeE,CACnD,CAIA,SAASE,GAAeC,EAAMH,EAAY,EAAG16B,EAAQ,EAAGw6B,EAAaG,GACjEE,EAAKxkC,IAAMokC,GAAgBI,EAAKxkC,IAAKqkC,EAAW16B,EAAOw6B,EAAaG,GACpEE,EAAKvkC,IAAMmkC,GAAgBI,EAAKvkC,IAAKokC,EAAW16B,EAAOw6B,EAAaG,EACxE,CAIA,SAASG,GAAcC,GAAKthC,EAAEA,EAAAwZ,EAAGA,IAC7B2nB,GAAeG,EAAIthC,EAAGA,EAAEihC,UAAWjhC,EAAEuG,MAAOvG,EAAE+gC,aAC9CI,GAAeG,EAAI9nB,EAAGA,EAAEynB,UAAWznB,EAAEjT,MAAOiT,EAAEunB,YAClD,CACA,MAAMQ,GAAsB,cACtBC,GAAsB,gBA6D5B,SAASC,GAAcL,EAAM5a,GACzB4a,EAAKxkC,IAAMwkC,EAAKxkC,IAAM4pB,EACtB4a,EAAKvkC,IAAMukC,EAAKvkC,IAAM2pB,CAC1B,CAMA,SAASkb,GAAcN,EAAMO,EAAeC,EAAWV,EAAUW,EAAa,IAG1EV,GAAeC,EAAMO,EAAeC,EAFhBh3B,GAAUw2B,EAAKxkC,IAAKwkC,EAAKvkC,IAAKglC,GAEUX,EAChE,CAIA,SAAS9H,GAAakI,EAAKj7B,GACvBq7B,GAAcJ,EAAIthC,EAAGqG,EAAUrG,EAAGqG,EAAUsT,OAAQtT,EAAUE,MAAOF,EAAUsgB,SAC/E+a,GAAcJ,EAAI9nB,EAAGnT,EAAUmT,EAAGnT,EAAUuT,OAAQvT,EAAUE,MAAOF,EAAUugB,QACnF,CCjHA,SAAS6B,GAAmB+T,EAAUsF,GAClC,OAAOtB,GHeX,SAA4BM,EAAOgB,GAC/B,IAAKA,EACD,OAAOhB,EACX,MAAMiB,EAAUD,EAAe,CAAE9hC,EAAG8gC,EAAMhlB,KAAMtC,EAAGsnB,EAAMllB,MACnDomB,EAAcF,EAAe,CAAE9hC,EAAG8gC,EAAM9kB,MAAOxC,EAAGsnB,EAAM/kB,SAC9D,MAAO,CACHH,IAAKmmB,EAAQvoB,EACbsC,KAAMimB,EAAQ/hC,EACd+b,OAAQimB,EAAYxoB,EACpBwC,MAAOgmB,EAAYhiC,EAE3B,CG1BmCiiC,CAAmBzF,EAAS0F,wBAAyBJ,GACxF,CCLA,MAWMK,GAAY,KAAA,CACdniC,EAFe,CAASpD,IAAK,EAAGC,IAAK,GAGrC2c,EAHe,CAAS5c,IAAK,EAAGC,IAAK,KCTnCulC,GAAuB,CAAEhnC,QAAS,MAClCinC,GAA2B,CAAEjnC,SAAS,GCF5C,MAAMknC,OAAyBC,QCW/B,MAAMC,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAMJ,MAAMC,GAQF,2BAAAhH,CAA4BiH,EAAQC,EAAYC,GAC5C,MAAO,CAAA,CACX,CACA,WAAAzkC,EAAYsuB,OAAEA,EAAAvxB,MAAQA,EAAA0/B,gBAAOA,EAAAwC,oBAAiBA,EAAAG,sBAAqBA,EAAA/F,YAAuBA,GAAgBloB,EAAU,IAKhHlR,KAAKhD,QAAU,KAIfgD,KAAKoyB,aAAevtB,IAIpB7E,KAAK03B,eAAgB,EACrB13B,KAAKy3B,uBAAwB,EAQ7Bz3B,KAAKykC,mBAAqB,KAM1BzkC,KAAKoL,WAAaoT,IAClBxe,KAAKqf,iBAAmBA,GAIxBrf,KAAKghC,SAAW,CAAA,EAKhBhhC,KAAK0kC,uBAAyBlmB,IAM9Bxe,KAAK2kC,iBAAmB,CAAA,EAIxB3kC,KAAK+qB,OAAS,CAAA,EAMd/qB,KAAK4kC,uBAAyB,CAAA,EAC9B5kC,KAAK6kC,aAAe,IAAM7kC,KAAKI,OAAO,SAAUJ,KAAKu4B,cACrDv4B,KAAKsG,OAAS,KACLtG,KAAKhD,UAEVgD,KAAK8kC,eACL9kC,KAAK+kC,eAAe/kC,KAAKhD,QAASgD,KAAKu9B,YAAav9B,KAAKlD,MAAMmlB,MAAOjiB,KAAKq/B,cAE/Er/B,KAAKglC,kBAAoB,EACzBhlC,KAAKilC,eAAiB,KAClB,MAAMt+B,EAAMM,EAAKN,MACb3G,KAAKglC,kBAAoBr+B,IACzB3G,KAAKglC,kBAAoBr+B,EACzBC,EAAMN,OAAOtG,KAAKsG,QAAQ,GAAO,KAGzC,MAAMiyB,aAAEA,EAAAgF,YAAcA,GAAgBnE,EACtCp5B,KAAKu4B,aAAeA,EACpBv4B,KAAKklC,WAAa,IAAK3M,GACvBv4B,KAAKmlC,cAAgBroC,EAAMw2B,QAAU,IAAKiF,GAAiB,CAAA,EAC3Dv4B,KAAKu9B,YAAcA,EACnBv9B,KAAKquB,OAASA,EACdruB,KAAKlD,MAAQA,EACbkD,KAAKw8B,gBAAkBA,EACvBx8B,KAAKqlB,MAAQgJ,EAASA,EAAOhJ,MAAQ,EAAI,EACzCrlB,KAAKg/B,oBAAsBA,EAC3Bh/B,KAAKkR,QAAUA,EACflR,KAAKm/B,sBAAwBx2B,QAAQw2B,GACrCn/B,KAAKy3B,sBAAwBA,GAAsB36B,GACnDkD,KAAK03B,cAAgBA,GAAc56B,GAC/BkD,KAAK03B,gBACL13B,KAAKolC,oBAAsBvgC,KAE/B7E,KAAKqlC,uBAAyB18B,QAAQ0lB,GAAUA,EAAOrxB,SAWvD,MAAMsoC,WAAEA,KAAeC,GAAwBvlC,KAAKq9B,4BAA4BvgC,EAAO,CAAA,EAAIkD,MAC3F,IAAA,MAAWlE,KAAOypC,EAAqB,CACnC,MAAMxmC,EAAQwmC,EAAoBzpC,QACR,IAAtBy8B,EAAaz8B,IAAsBi1B,GAAchyB,IACjDA,EAAMmI,IAAIqxB,EAAaz8B,GAE/B,CACJ,CACA,KAAAwiC,CAAMF,SACFp+B,KAAKhD,QAAUohC,EACf8F,GAAmBh9B,IAAIk3B,EAAUp+B,MAC7BA,KAAKq/B,aAAer/B,KAAKq/B,WAAWjB,UACpCp+B,KAAKq/B,WAAWf,MAAMF,GAEtBp+B,KAAKquB,QAAUruB,KAAK03B,gBAAkB13B,KAAKy3B,wBAC3Cz3B,KAAKwlC,sBAAwBxlC,KAAKquB,OAAOoX,gBAAgBzlC,OAE7DA,KAAKoL,OAAOtF,QAAQ,CAAC/G,EAAOjD,IAAQkE,KAAK0lC,kBAAkB5pC,EAAKiD,IAC3DklC,GAAyBjnC,SCpJtC,WAEI,GADAinC,GAAyBjnC,SAAU,EAC9BS,EAEL,GAAIC,OAAOioC,WAAY,CACnB,MAAMC,EAAmBloC,OAAOioC,WAAW,4BACrCE,EAA8B,IAAO7B,GAAqBhnC,QAAU4oC,EAAiBE,QAC3FF,EAAiBtV,iBAAiB,SAAUuV,GAC5CA,GACJ,MAEI7B,GAAqBhnC,SAAU,CAEvC,CDwIY+oC,GAEJ/lC,KAAKykC,mBAC4B,UAA7BzkC,KAAKg/B,sBAE8B,WAA7Bh/B,KAAKg/B,qBAEDgF,GAAqBhnC,SAInC,OAAAkP,EAAAlM,KAAKquB,WAAQ2X,SAAShmC,MACtBA,KAAKoG,OAAOpG,KAAKlD,MAAOkD,KAAKw8B,gBACjC,CACA,OAAA+B,SACIv+B,KAAKq/B,YAAcr/B,KAAKq/B,WAAWd,UACnC13B,EAAY7G,KAAK6kC,cACjBh+B,EAAY7G,KAAKsG,QACjBtG,KAAK0kC,mBAAmB5+B,QAASmgC,GAAWA,KAC5CjmC,KAAK0kC,mBAAmBjkC,QACxBT,KAAKwlC,uBAAyBxlC,KAAKwlC,wBACnC,OAAAt5B,EAAAlM,KAAKquB,WAAQ8E,YAAYnzB,MACzB,IAAA,MAAWlE,KAAOkE,KAAK+qB,OACnB/qB,KAAK+qB,OAAOjvB,GAAK2E,QAErB,IAAA,MAAW3E,KAAOkE,KAAKghC,SAAU,CAC7B,MAAMkF,EAAUlmC,KAAKghC,SAASllC,GAC1BoqC,IACAA,EAAQ3H,UACR2H,EAAQjG,WAAY,EAE5B,CACAjgC,KAAKhD,QAAU,IACnB,CACA,QAAAgpC,CAAS1X,GACLtuB,KAAKoyB,SAASlyB,IAAIouB,GAClBtuB,KAAK4gC,mBAAqB5gC,KAAK4gC,iBAAmB,IAAI/7B,KACtD7E,KAAK4gC,iBAAiB1gC,IAAIouB,EAC9B,CACA,WAAA6E,CAAY7E,GACRtuB,KAAKoyB,SAASzsB,OAAO2oB,GACrBtuB,KAAK4gC,kBAAoB5gC,KAAK4gC,iBAAiBj7B,OAAO2oB,EAC1D,CACA,iBAAAoX,CAAkB5pC,EAAKiD,GACfiB,KAAK0kC,mBAAmBt/B,IAAItJ,IAC5BkE,KAAK0kC,mBAAmB9lB,IAAI9iB,EAA5BkE,GAEJ,MAAMmmC,EAAmBtpB,GAAezX,IAAItJ,GACxCqqC,GAAoBnmC,KAAKomC,iBACzBpmC,KAAKomC,kBAET,MAAMC,EAAiBtnC,EAAM8sB,GAAG,SAAWya,IACvCtmC,KAAKu4B,aAAaz8B,GAAOwqC,EACzBtmC,KAAKlD,MAAMuc,UAAYzS,EAAMP,UAAUrG,KAAK6kC,cACxCsB,GAAoBnmC,KAAKq/B,aACzBr/B,KAAKq/B,WAAWkH,kBAAmB,GAEvCvmC,KAAKilC,mBAET,IAAIuB,EACA9oC,OAAO+oC,wBACPD,EAAkB9oC,OAAO+oC,sBAAsBzmC,KAAMlE,EAAKiD,IAE9DiB,KAAK0kC,mBAAmBx9B,IAAIpL,EAAK,KAC7BuqC,IACIG,GACAA,IACAznC,EAAM2lB,OACN3lB,EAAM+P,QAElB,CACA,gBAAA43B,CAAiBC,GAIb,OAAK3mC,KAAKhD,SACLgD,KAAK4mC,0BACN5mC,KAAKnD,OAAS8pC,EAAM9pC,KAGjBmD,KAAK4mC,yBAAyB5mC,KAAKhD,QAAS2pC,EAAM3pC,SAF9C,CAGf,CACA,cAAAujC,GACI,IAAIzkC,EAAM,YACV,IAAKA,KAAO+6B,GAAoB,CAC5B,MAAMgQ,EAAoBhQ,GAAmB/6B,GAC7C,IAAK+qC,EACD,SACJ,MAAM/P,UAAEA,EAAWgQ,QAASC,GAAuBF,EAYnD,IARK7mC,KAAKghC,SAASllC,IACfirC,GACAjQ,EAAU92B,KAAKlD,SACfkD,KAAKghC,SAASllC,GAAO,IAAIirC,EAAmB/mC,OAK5CA,KAAKghC,SAASllC,GAAM,CACpB,MAAMoqC,EAAUlmC,KAAKghC,SAASllC,GAC1BoqC,EAAQjG,UACRiG,EAAQ9/B,UAGR8/B,EAAQ5H,QACR4H,EAAQjG,WAAY,EAE5B,CACJ,CACJ,CACA,YAAA6E,GACI9kC,KAAKgnC,MAAMhnC,KAAKu9B,YAAav9B,KAAKu4B,aAAcv4B,KAAKlD,MACzD,CAMA,kBAAAutB,GACI,OAAOrqB,KAAKhD,QACNgD,KAAKinC,2BAA2BjnC,KAAKhD,QAASgD,KAAKlD,OHvQ/C,CACd8E,EAFe,CAASpD,IAAK,EAAGC,IAAK,GAGrC2c,EAHe,CAAS5c,IAAK,EAAGC,IAAK,GG0QrC,CACA,cAAAyoC,CAAeprC,GACX,OAAOkE,KAAKu4B,aAAaz8B,EAC7B,CACA,cAAAqrC,CAAerrC,EAAKiD,GAChBiB,KAAKu4B,aAAaz8B,GAAOiD,CAC7B,CAKA,MAAAqH,CAAOtJ,EAAO0/B,IACN1/B,EAAM8nB,mBAAqB5kB,KAAKlD,MAAM8nB,oBACtC5kB,KAAKilC,iBAETjlC,KAAKwxB,UAAYxxB,KAAKlD,MACtBkD,KAAKlD,MAAQA,EACbkD,KAAKonC,oBAAsBpnC,KAAKw8B,gBAChCx8B,KAAKw8B,gBAAkBA,EAIvB,IAAA,IAASj8B,EAAI,EAAGA,EAAI6jC,GAAkB9jC,OAAQC,IAAK,CAC/C,MAAMzE,EAAMsoC,GAAkB7jC,GAC1BP,KAAK4kC,uBAAuB9oC,KAC5BkE,KAAK4kC,uBAAuB9oC,YACrBkE,KAAK4kC,uBAAuB9oC,IAEvC,MACMurC,EAAWvqC,EADK,KAAOhB,GAEzBurC,IACArnC,KAAK4kC,uBAAuB9oC,GAAOkE,KAAK6rB,GAAG/vB,EAAKurC,GAExD,CACArnC,KAAK2kC,iBEpTb,SAAqCrmB,EAAS/O,EAAM2b,GAChD,IAAA,MAAWpvB,KAAOyT,EAAM,CACpB,MAAM+3B,EAAY/3B,EAAKzT,GACjByrC,EAAYrc,EAAKpvB,GACvB,GAAIi1B,GAAcuW,GAKdhpB,EAAQkpB,SAAS1rC,EAAKwrC,QAC1B,GACSvW,GAAcwW,GAKnBjpB,EAAQkpB,SAAS1rC,EAAKmc,GAAYqvB,EAAW,CAAE5iB,MAAOpG,UAC1D,GACSipB,IAAcD,EAMnB,GAAIhpB,EAAQmpB,SAAS3rC,GAAM,CACvB,MAAM4rC,EAAgBppB,EAAQK,SAAS7iB,IACP,IAA5B4rC,EAAchK,UACdgK,EAAcnd,KAAK+c,GAEbI,EAAclc,aACpBkc,EAAcxgC,IAAIogC,EAE1B,KACK,CACD,MAAMhB,EAAchoB,EAAQ4oB,eAAeprC,GAC3CwiB,EAAQkpB,SAAS1rC,EAAKmc,QAA4B,IAAhBquB,EAA4BA,EAAcgB,EAAW,CAAE5iB,MAAOpG,IACpG,CAER,CAEA,IAAA,MAAWxiB,KAAOovB,OACI,IAAd3b,EAAKzT,IACLwiB,EAAQqpB,YAAY7rC,GAE5B,OAAOyT,CACX,CFuQgCq4B,CAA4B5nC,KAAMA,KAAKq9B,4BAA4BvgC,EAAOkD,KAAKwxB,UAAWxxB,MAAOA,KAAK2kC,kBAC1H3kC,KAAK6nC,wBACL7nC,KAAK6nC,wBAEb,CACA,QAAAhjB,GACI,OAAO7kB,KAAKlD,KAChB,CAIA,UAAAgrC,CAAW1rB,GACP,OAAOpc,KAAKlD,MAAM66B,SAAW33B,KAAKlD,MAAM66B,SAASvb,QAAQ,CAC7D,CAIA,oBAAA2rB,GACI,OAAO/nC,KAAKlD,MAAMga,UACtB,CACA,qBAAAkxB,GACI,OAAOhoC,KAAKlD,MAAMo0B,kBACtB,CACA,qBAAA+W,GACI,OAAOjoC,KAAK03B,cACN13B,KACAA,KAAKquB,OACDruB,KAAKquB,OAAO4Z,6BACZ,CACd,CAIA,eAAAxC,CAAgBnX,GACZ,MAAM4Z,EAAqBloC,KAAKioC,wBAChC,GAAIC,EAGA,OAFAA,EAAmB9C,iBACf8C,EAAmB9C,gBAAgBllC,IAAIouB,GACpC,IAAM4Z,EAAmB9C,gBAAgBz/B,OAAO2oB,EAE/D,CAIA,QAAAkZ,CAAS1rC,EAAKiD,GAEV,MAAM2oC,EAAgB1nC,KAAKoL,OAAOwT,IAAI9iB,GAClCiD,IAAU2oC,IACNA,GACA1nC,KAAK2nC,YAAY7rC,GACrBkE,KAAK0lC,kBAAkB5pC,EAAKiD,GAC5BiB,KAAKoL,OAAOlE,IAAIpL,EAAKiD,GACrBiB,KAAKu4B,aAAaz8B,GAAOiD,EAAM6f,MAEvC,CAIA,WAAA+oB,CAAY7rC,GACRkE,KAAKoL,OAAOzF,OAAO7J,GACnB,MAAMiwB,EAAc/rB,KAAK0kC,mBAAmB9lB,IAAI9iB,GAC5CiwB,IACAA,IACA/rB,KAAK0kC,mBAAmB/+B,OAAO7J,WAE5BkE,KAAKu4B,aAAaz8B,GACzBkE,KAAKmoC,2BAA2BrsC,EAAKkE,KAAKu9B,YAC9C,CAIA,QAAAkK,CAAS3rC,GACL,OAAOkE,KAAKoL,OAAOhG,IAAItJ,EAC3B,CACA,QAAA6iB,CAAS7iB,EAAK0qB,GACV,GAAIxmB,KAAKlD,MAAMsO,QAAUpL,KAAKlD,MAAMsO,OAAOtP,GACvC,OAAOkE,KAAKlD,MAAMsO,OAAOtP,GAE7B,IAAIiD,EAAQiB,KAAKoL,OAAOwT,IAAI9iB,GAK5B,YAJc,IAAViD,QAAwC,IAAjBynB,IACvBznB,EAAQkZ,GAA6B,OAAjBuO,OAAwB,EAAYA,EAAc,CAAE9B,MAAO1kB,OAC/EA,KAAKwnC,SAAS1rC,EAAKiD,IAEhBA,CACX,CAMA,SAAA4gB,CAAU7jB,EAAKiS,GACX,IAAIhP,OAAmC,IAA3BiB,KAAKu4B,aAAaz8B,IAAuBkE,KAAKhD,QAEpDgD,KAAKooC,uBAAuBpoC,KAAKlD,MAAOhB,IACtCkE,KAAKqoC,sBAAsBroC,KAAKhD,QAASlB,EAAKkE,KAAKkR,SAFrDlR,KAAKu4B,aAAaz8B,GxDtYV,IAAC4C,EwDoZf,OAXIK,UACqB,iBAAVA,IACNH,EAAkBG,IAAUC,EAAkBD,IAE/CA,EAAQiJ,WAAWjJ,IxD7YZL,EwD+YaK,GxD/YPiyB,GAAWjkB,KAAKkZ,GAAcvnB,KwD+YbsN,GAAQnN,KAAKkP,KAC3ChP,EAAQ4L,GAAkB7O,EAAKiS,KAEnC/N,KAAKsoC,cAAcxsC,EAAKi1B,GAAchyB,GAASA,EAAM6f,MAAQ7f,IAE1DgyB,GAAchyB,GAASA,EAAM6f,MAAQ7f,CAChD,CAKA,aAAAupC,CAAcxsC,EAAKiD,GACfiB,KAAKklC,WAAWppC,GAAOiD,CAC3B,CAKA,aAAAwpC,CAAczsC,SACV,MAAMw3B,QAAEA,GAAYtzB,KAAKlD,MACzB,IAAI0rC,EACJ,GAAuB,iBAAZlV,GAA2C,iBAAZA,EAAsB,CAC5D,MAAMmV,EAAUpM,GAAwBr8B,KAAKlD,MAAOw2B,EAAS,OAAApnB,EAAAlM,KAAKw8B,0BAAiBhJ,QAC/EiV,IACAD,EAAmBC,EAAQ3sC,GAEnC,CAIA,GAAIw3B,QAAgC,IAArBkV,EACX,OAAOA,EAMX,MAAMz6B,EAAS/N,KAAKooC,uBAAuBpoC,KAAKlD,MAAOhB,GACvD,YAAe,IAAXiS,GAAyBgjB,GAAchjB,QAMR,IAA5B/N,KAAKmlC,cAAcrpC,SACD,IAArB0sC,OACE,EACAxoC,KAAKklC,WAAWppC,GARXiS,CASf,CACA,EAAA8d,CAAGC,EAAW5sB,GAIV,OAHKc,KAAK+qB,OAAOe,KACb9rB,KAAK+qB,OAAOe,GAAa,IAAIhsB,GAE1BE,KAAK+qB,OAAOe,GAAW5rB,IAAIhB,EACtC,CACA,MAAAkB,CAAO0rB,KAAc4c,GACb1oC,KAAK+qB,OAAOe,IACZ9rB,KAAK+qB,OAAOe,GAAW1rB,UAAUsoC,EAEzC,CACA,uBAAAlI,GACIvT,GAAU3mB,OAAOtG,KAAKsG,OAC1B,EGtdJ,MAAMqiC,WAAyBtE,GAC3B,WAAAtkC,GACI4X,SAASixB,WACT5oC,KAAKqf,iBAAmBsK,EAC5B,CACA,wBAAAid,CAAyBxqC,EAAGE,GAMxB,OAAsC,EAA/BF,EAAEysC,wBAAwBvsC,GAAS,GAAI,CAClD,CACA,sBAAA8rC,CAAuBtrC,EAAOhB,GAC1B,OAAOgB,EAAMmlB,MACPnlB,EAAMmlB,MAAMnmB,QACZ,CACV,CACA,0BAAAqsC,CAA2BrsC,GAAK08B,KAAEA,EAAAvW,MAAMA,WAC7BuW,EAAK18B,UACLmmB,EAAMnmB,EACjB,CACA,sBAAA+rC,GACQ7nC,KAAK8oC,oBACL9oC,KAAK8oC,2BACE9oC,KAAK8oC,mBAEhB,MAAM1W,SAAEA,GAAapyB,KAAKlD,MACtBi0B,GAAcqB,KACdpyB,KAAK8oC,kBAAoB1W,EAASvG,GAAG,SAAWhY,IACxC7T,KAAKhD,UACLgD,KAAKhD,QAAQ+rC,YAAc,GAAGl1B,OAI9C,ECtCJ,SAASm1B,GAAW1qB,GAAS2D,MAAEA,OAAOuW,GAAQqC,EAAWwE,GACrD,MAAM4J,EAAe3qB,EAAQ2D,MAC7B,IAAInmB,EACJ,IAAKA,KAAOmmB,EAERgnB,EAAantC,GAAOmmB,EAAMnmB,GAI9B,IAAKA,KADL,MAAAujC,GAAAA,EAAY6J,sBAAsBD,EAAcpO,GACpCrC,EAGRyQ,EAAa/mB,YAAYpmB,EAAK08B,EAAK18B,GAE3C,CCJA,MAAMqtC,WAA0BR,GAC5B,WAAA5oC,GACI4X,SAASixB,WACT5oC,KAAKnD,KAAO,OACZmD,KAAK+kC,eAAiBiE,EAC1B,CACA,qBAAAX,CAAsBjK,EAAUtiC,SATVwiB,EAUlB,GAAIzB,GAAezX,IAAItJ,GACnB,OAAO,OAAAoQ,EAAAlM,KAAKq/B,iBAAL,EAAAnzB,EAAiBk9B,cAClBjtB,GAAsBrgB,GrHuDb,EAACsiC,EAAUhiB,KAClC,MAAMnU,UAAEA,EAAY,QAAW2d,iBAAiBwY,GAChD,OAAO9hB,GAAwBrU,EAAWmU,IqHxD5BitB,CAAmBjL,EAAUtiC,GAElC,CACD,MAAMwtC,GAhBQhrB,EAgByB8f,EAfxC1gC,OAAOkoB,iBAAiBtH,IAgBjBvf,GAASyI,GAAkB1L,GAC3BwtC,EAAczjB,iBAAiB/pB,GAC/BwtC,EAAcxtC,KAAS,EAC7B,MAAwB,iBAAViD,EAAqBA,EAAM8I,OAAS9I,CACtD,CACJ,CACA,0BAAAkoC,CAA2B7I,GAAUlN,mBAAEA,IACnC,OAAO7G,GAAmB+T,EAAUlN,EACxC,CACA,KAAA8V,CAAMzJ,EAAahF,EAAcz7B,GAC7Bw7B,GAAgBiF,EAAahF,EAAcz7B,EAAM8nB,kBACrD,CACA,2BAAAyY,CAA4BvgC,EAAO00B,EAAW9S,GAC1C,OAAO2e,GAA4BvgC,EAAO00B,EAAW9S,EACzD,ECnCJ,MAAM6qB,OAA0B1kC,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBChBJ,MAAM2kC,WAAyBb,GAC3B,WAAA5oC,GACI4X,SAASixB,WACT5oC,KAAKnD,KAAO,MACZmD,KAAK46B,UAAW,EAChB56B,KAAKinC,2BAA6BlD,EACtC,CACA,sBAAAqE,CAAuBtrC,EAAOhB,GAC1B,OAAOgB,EAAMhB,EACjB,CACA,qBAAAusC,CAAsBjK,EAAUtiC,GAC5B,GAAI+gB,GAAezX,IAAItJ,GAAM,CACzB,MAAM2tC,EAAcjgB,GAAoB1tB,GACxC,OAAO2tC,GAAcA,EAAYrhC,SAAe,CACpD,CAEA,OADAtM,EAAOytC,GAAoBnkC,IAAItJ,GAA0BA,EAAnB0iC,GAAY1iC,GAC3CsiC,EAASsL,aAAa5tC,EACjC,CACA,2BAAAuhC,CAA4BvgC,EAAO00B,EAAW9S,GAC1C,OAAO2e,GAA4BvgC,EAAO00B,EAAW9S,EACzD,CACA,KAAAsoB,CAAMzJ,EAAahF,EAAcz7B,GAC7Bu9B,GAAckD,EAAahF,EAAcv4B,KAAK46B,SAAU99B,EAAM8nB,kBAAmB9nB,EAAMmlB,MAC3F,CACA,cAAA8iB,CAAe3G,EAAUb,EAAa1C,EAAWwE,IC9BrD,SAAmB/gB,EAASif,EAAaoM,EAAYtK,GACjD2J,GAAW1qB,EAASif,OAAa,EAAW8B,GAC5C,IAAA,MAAWvjC,KAAOyhC,EAAYxC,MAC1Bzc,EAAQsrB,aAAcL,GAAoBnkC,IAAItJ,GAA0BA,EAAnB0iC,GAAY1iC,GAAYyhC,EAAYxC,MAAMj/B,GAEvG,CD0BQ+tC,CAAUzL,EAAUb,EAAa1C,EAAWwE,EAChD,CACA,KAAAf,CAAMF,GACFp+B,KAAK46B,SAAWA,GAASwD,EAASzN,SAClChZ,MAAM2mB,MAAMF,EAChB,EEnCJ,MAAM0L,GAAyB,CAACrO,EAAWvqB,IAChC2qB,GAAeJ,GAChB,IAAI+N,GAAiBt4B,GACrB,IAAIi4B,GAAkBj4B,EAAS,CAC7B2vB,gBAAiBpF,IAAc1F,EAAAA,WCP3C,SAASgU,GAAerrB,EAAehb,EAAY8vB,GAC/C,MAAM12B,EAAQ4hB,EAAcmG,WAC5B,OAAOwX,GAAwBv/B,EAAO4G,OAAuB,IAAX8vB,EAAuBA,EAAS12B,EAAM02B,OAAQ9U,EACpG,CCLA,MAAMsrB,GAAqBtrC,GAChB2E,MAAMC,QAAQ5E,GCOzB,SAASurC,GAAevrB,EAAe5iB,EAAKiD,GACpC2f,EAAc+oB,SAAS3rC,GACvB4iB,EAAcC,SAAS7iB,GAAKoL,IAAInI,GAGhC2f,EAAc8oB,SAAS1rC,EAAKmc,GAAYlZ,GAEhD,CACA,SAASmrC,GAA6BxrC,GAElC,OAAOsrC,GAAkBtrC,GAAKA,EAAEA,EAAE4B,OAAS,IAAM,EAAI5B,CACzD,CChBA,SAASyrC,GAAqBzrB,EAAe5iB,GACzC,MAAMwpC,EAAa5mB,EAAcC,SAAS,cAK1C,GCP6B5f,EDODumC,ECNrB38B,QAAQooB,GAAchyB,IAAUA,EAAMmB,KDOzC,OAAOolC,EAAWplC,IAAIpE,GAC1B,IACUwpC,GAAc3mC,EAAmByrC,WAAY,CACnD,MAAMC,EAAgB,IAAI1rC,EAAmByrC,WAAW,QACxD1rB,EAAc8oB,SAAS,aAAc6C,GACrCA,EAAcnqC,IAAIpE,EACtB,CCdJ,IAAiCiD,CDejC,CEfA,SAASurC,GAAqB5rB,GAC1B,OAAOA,EAAc5hB,MAAM4hC,GAC/B,CCJA,MAAMxoB,GAAanX,GAAoB,OAAVA,ECE7B,MAAMwrC,GAAoB,CACtB1tC,KAAM,SACNgU,UAAW,IACXC,QAAS,GACTW,UAAW,IAQT+4B,GAAsB,CACxB3tC,KAAM,YACNmS,SAAU,IAMRqF,GAAO,CACTxX,KAAM,YACNwX,KAAM,CAAC,IAAM,GAAK,IAAM,GACxBrF,SAAU,IAER+4B,GAAuB,CAAC0C,GAAYj5B,UAAAA,KAClCA,EAAUlR,OAAS,EACZkqC,GAEF3tB,GAAezX,IAAIqlC,GACjBA,EAASljC,WAAW,SAxBH,CAC5B1K,KAAM,SACNgU,UAAW,IACXC,QAAoB,IAsBaU,EAAU,GAtBnB,EAAIvP,KAAK2K,KAAK,KAAO,GAC7C6E,UAAW,IAsBD84B,GAEHl2B,GC9BX,MAAMq2B,GAAqB,CAACtuB,EAAMrd,EAAOgP,EAAQ+I,EAAa,CAAA,EAAIwH,EAAS0F,IAAe3J,IACtF,MAAMswB,EAAkB5kB,GAAmBjP,EAAYsF,IAAS,CAAA,EAM1DhD,EAAQuxB,EAAgBvxB,OAAStC,EAAWsC,OAAS,EAK3D,IAAII,QAAEA,EAAU,GAAM1C,EACtB0C,KAA0CJ,GAC1C,MAAMlI,EAAU,CACZM,UAAWnO,MAAMC,QAAQyK,GAAUA,EAAS,CAAC,KAAMA,GACnDsG,KAAM,UACNtT,SAAUhC,EAAM0tB,iBACbke,EACHvxB,OAAQI,EACRH,SAAW3a,IACPK,EAAMmI,IAAIxI,GACVisC,EAAgBtxB,UAAYsxB,EAAgBtxB,SAAS3a,IAEzD2b,WAAY,KACRA,IACAswB,EAAgBtwB,YAAcswB,EAAgBtwB,cAElD+B,OACAnE,YAAalZ,EACbuf,QAAS0F,OAAY,EAAY1F,IC/BzC,UAA6BssB,KAAEA,EAAMxxB,MAAOyxB,gBAAQC,EAAAC,gBAAeA,EAAAC,iBAAiBA,EAAA50B,OAAkBA,EAAAC,WAAQA,cAAYqC,EAAA/Y,KAAaA,EAAA6Z,QAAMA,KAAY1C,IACrJ,QAASvb,OAAO4V,KAAK2F,GAAYxW,MACrC,EDmCS2qC,CAAoBN,IACrBpvC,OAAO89B,OAAOnoB,EAAS62B,GAAqB3rB,EAAMlL,IAOtDA,EAAQlC,WAAakC,EAAQlC,SAAWtO,EAAsBwQ,EAAQlC,WACtEkC,EAAQwH,cAAgBxH,EAAQwH,YAAchY,EAAsBwQ,EAAQwH,mBAIvD,IAAjBxH,EAAQvR,OACRuR,EAAQM,UAAU,GAAKN,EAAQvR,MAEnC,IAAIurC,GAAa,EAwBjB,KAvBqB,IAAjBh6B,EAAQrU,MACc,IAArBqU,EAAQlC,WAAmBkC,EAAQwH,eACpCwK,GAAqBhS,GACC,IAAlBA,EAAQkI,QACR8xB,GAAa,KAGjBvsC,EAAmB6lB,mBACnB7lB,EAAmBwsC,kBACnBD,GAAa,EACbhoB,GAAqBhS,GACrBA,EAAQkI,MAAQ,GAMpBlI,EAAQyJ,cAAgBgwB,EAAgB9tC,OAAS8tC,EAAgBt2B,KAM7D62B,IAAelnB,QAA6B,IAAhBjlB,EAAM6f,MAAqB,CACvD,MAAMtI,EFlFd,SAA0B9E,GAAW4E,OAAEA,aAAQC,EAAa,SACxD,MAAMG,EAAoBhF,EAAUiF,OAAOP,IAI3C,OACMM,EAJQJ,GAAyB,SAAfC,GAAyBD,EAAS,GAAM,EAC1D,EACAI,EAAkBlW,OAAS,EAIrC,CE0E8B6V,CAAiBjF,EAAQM,UAAWm5B,GAC1D,QAAsB,IAAlBr0B,EAKA,YAJA1P,EAAMR,OAAO,KACT8K,EAAQmI,SAAS/C,GACjBpF,EAAQmJ,cAIpB,CACA,OAAOswB,EAAgBS,OACjB,IAAI1zB,GAAYxG,GAChB,IAAIoS,GAA0BpS,IElFxC,SAASm6B,IAAqBC,cAAEA,EAAAC,eAAeA,GAAkBzvC,GAC7D,MAAM0vC,EAAcF,EAAc7vC,eAAeK,KAAgC,IAAxByvC,EAAezvC,GAExE,OADAyvC,EAAezvC,IAAO,EACf0vC,CACX,CACA,SAASC,GAAc/sB,EAAegtB,GAAuBtyB,MAAAA,EAAQ,EAAAuyB,mBAAGA,EAAA9uC,KAAoBA,GAAS,IACjG,IAAIia,WAAEA,EAAa4H,EAAcqpB,qCAAwB/K,KAAkBjvB,GAAW29B,EAClFC,IACA70B,EAAa60B,GACjB,MAAMC,EAAa,GACbC,EAAqBhvC,GACvB6hB,EAAc+hB,gBACd/hB,EAAc+hB,eAAeqL,WAAWjvC,GAC5C,IAAA,MAAWf,KAAOiS,EAAQ,CACtB,MAAMhP,EAAQ2f,EAAcC,SAAS7iB,EAAK4iB,EAAc6Z,aAAaz8B,IAAQ,MACvEmhC,EAAclvB,EAAOjS,GAC3B,QAAoB,IAAhBmhC,GACC4O,GACGR,GAAqBQ,EAAoB/vC,GAC7C,SAEJ,MAAM6uC,EAAkB,CACpBvxB,MAAAA,KACG2M,GAAmBjP,GAAc,CAAA,EAAIhb,IAKtC2jB,EAAe1gB,EAAM6f,MAC3B,QAAqB,IAAjBa,IACC1gB,EAAMguB,cACN1pB,MAAMC,QAAQ25B,IACfA,IAAgBxd,IACfkrB,EAAgB5pC,SACjB,SAMJ,IAAIijB,GAAY,EAChB,GAAItmB,OAAOquC,uBAAwB,CAC/B,MAAMC,EAAW1B,GAAqB5rB,GACtC,GAAIstB,EAAU,CACV,MAAMp0B,EAAYla,OAAOquC,uBAAuBC,EAAUlwC,EAAK8K,GAC7C,OAAdgR,IACA+yB,EAAgB/yB,UAAYA,EAC5BoM,GAAY,EAEpB,CACJ,CACAmmB,GAAqBzrB,EAAe5iB,GACpCiD,EAAM8P,MAAM67B,GAAmB5uC,EAAKiD,EAAOk+B,EAAave,EAAc+lB,oBAAsBze,GAAe5gB,IAAItJ,GACzG,CAAEe,MAAM,GACR8tC,EAAiBjsB,EAAesF,IACtC,MAAMpC,EAAY7iB,EAAM6iB,UACpBA,GACAgqB,EAAWztC,KAAKyjB,EAExB,CAQA,OAPIob,GACA7lB,QAAQ80B,IAAIL,GAAYt0B,KAAK,KACzB1Q,EAAMR,OAAO,KACT42B,GRvDhB,SAAmBte,EAAehb,GAC9B,MAAMiiB,EAAWokB,GAAerrB,EAAehb,GAC/C,IAAIs5B,cAAEA,EAAgB,CAAA,EAAAlmB,WAAIA,EAAa,CAAA,KAAO/I,GAAW4X,GAAY,CAAA,EACrE5X,EAAS,IAAKA,KAAWivB,GACzB,IAAA,MAAWlhC,KAAOiS,EAEdk8B,GAAevrB,EAAe5iB,EADhBouC,GAA6Bn8B,EAAOjS,IAG1D,CQ+CiCowC,CAAUxtB,EAAese,OAI/C4O,CACX,CChFA,SAASO,GAAiB/Z,EAAU9D,EAAOwc,EAAeC,EAAkB,EAAGC,EAAmB,GAC9F,MAAM3sC,EAAQgF,MAAM1D,KAAKyyB,GACpBga,KAAK,CAAChwC,EAAGE,IAAMF,EAAEsqC,iBAAiBpqC,IAClC4B,QAAQowB,GACP+d,EAAcja,EAASN,KACvBwa,GAAsBD,EAAc,GAAKtB,EAE/C,MADiD,mBAAlBD,EAEzBA,EAAczsC,EAAOguC,GACA,IAArBrB,EACI3sC,EAAQ0sC,EACRuB,EAAqBjuC,EAAQ0sC,CAC3C,CCRA,SAASwB,GAAe7tB,EAAe+pB,EAASv3B,EAAU,CAAA,SACtD,MAAMyU,EAAWokB,GAAerrB,EAAe+pB,EAA0B,SAAjBv3B,EAAQrU,KAC1D,OAAAqP,EAAAwS,EAAc8d,sBAAd,EAAAtwB,EAA+BsnB,YAC/B,GACN,IAAI1c,WAAEA,EAAa4H,EAAcqpB,wBAA0B,CAAA,GAAOpiB,GAAY,CAAA,EAC1EzU,EAAQy6B,qBACR70B,EAAa5F,EAAQy6B,oBAMzB,MAAMa,EAAe7mB,EACf,IAAMxO,QAAQ80B,IAAIR,GAAc/sB,EAAeiH,EAAUzU,IACzD,IAAMiG,QAAQC,UAKdq1B,EAAqB/tB,EAAc0mB,iBAAmB1mB,EAAc0mB,gBAAgBtT,KACpF,CAAC4a,EAAe,KACd,MAAM5B,cAAEA,EAAgB,EAAAC,gBAAGA,EAAAC,iBAAiBA,GAAsBl0B,EAClE,OAkBZ,SAAyB4H,EAAe+pB,EAASrvB,EAAQ,EAAG0xB,EAAgB,EAAGC,EAAkB,EAAGC,EAAmB,EAAG95B,GACtH,MAAM06B,EAAa,GACnB,IAAA,MAAWtd,KAAS5P,EAAc0mB,gBAC9B9W,EAAMluB,OAAO,iBAAkBqoC,GAC/BmD,EAAWztC,KAAKouC,GAAeje,EAAOma,EAAS,IACxCv3B,EACHkI,MAAOA,GACuB,mBAAlB0xB,EAA+B,EAAIA,GAC3CqB,GAAiBztB,EAAc0mB,gBAAiB9W,EAAOwc,EAAeC,EAAiBC,KAC5F1zB,KAAK,IAAMgX,EAAMluB,OAAO,oBAAqBqoC,KAEpD,OAAOtxB,QAAQ80B,IAAIL,EACvB,CA9BmBe,CAAgBjuB,EAAe+pB,EAASiE,EAAc5B,EAAeC,EAAiBC,EAAkB95B,IAEjH,IAAMiG,QAAQC,WAKdwzB,KAAEA,GAAS9zB,EACjB,GAAI8zB,EAAM,CACN,MAAOgC,EAAOC,GAAiB,mBAATjC,EAChB,CAAC4B,EAAcC,GACf,CAACA,EAAoBD,GAC3B,OAAOI,IAAQt1B,KAAK,IAAMu1B,IAC9B,CAEI,OAAO11B,QAAQ80B,IAAI,CAACO,IAAgBC,EAAmBv7B,EAAQkI,QAEvE,CC3CA,SAAS0zB,GAAev9B,EAAM2b,GAC1B,IAAK7nB,MAAMC,QAAQ4nB,GACf,OAAO,EACX,MAAM6hB,EAAa7hB,EAAK5qB,OACxB,GAAIysC,IAAex9B,EAAKjP,OACpB,OAAO,EACX,IAAA,IAASC,EAAI,EAAGA,EAAIwsC,EAAYxsC,IAC5B,GAAI2qB,EAAK3qB,KAAOgP,EAAKhP,GACjB,OAAO,EAEf,OAAO,CACX,CCRA,MAAMysC,GAAkBxV,GAAal3B,OACrC,SAAS2sC,GAAkBvuB,GACvB,IAAKA,EACD,OACJ,IAAKA,EAAc+Y,sBAAuB,CACtC,MAAM3D,EAAUpV,EAAc2P,QACxB4e,GAAkBvuB,EAAc2P,SAChC,CAAA,EAIN,YAHoC,IAAhC3P,EAAc5hB,MAAMw2B,UACpBQ,EAAQR,QAAU5U,EAAc5hB,MAAMw2B,SAEnCQ,CACX,CACA,MAAMA,EAAU,CAAA,EAChB,IAAA,IAASvzB,EAAI,EAAGA,EAAIysC,GAAiBzsC,IAAK,CACtC,MAAM6b,EAAOob,GAAaj3B,GACpBy3B,EAAOtZ,EAAc5hB,MAAMsf,IAC7Bkb,GAAeU,KAAkB,IAATA,KACxBlE,EAAQ1X,GAAQ4b,EAExB,CACA,OAAOlE,CACX,CCfA,MAAMoZ,GAAuB,IAAI3V,IAAsB/iB,UACjD24B,GAAoB5V,GAAqBj3B,OAC/C,SAAS8sC,GAAY1uB,GACjB,OAAQktB,GAAez0B,QAAQ80B,IAAIL,EAAWv/B,IAAI,EAAGuV,YAAW1Q,aCTpE,SAA8BwN,EAAehb,EAAYwN,EAAU,CAAA,GAE/D,IAAI0Q,EACJ,GAFAlD,EAActe,OAAO,iBAAkBsD,GAEnCL,MAAMC,QAAQI,GAAa,CAC3B,MAAMkoC,EAAaloC,EAAW2I,IAAKo8B,GAAY8D,GAAe7tB,EAAe+pB,EAASv3B,IACtF0Q,EAAYzK,QAAQ80B,IAAIL,EAC5B,MAAA,GAC+B,iBAAfloC,EACZke,EAAY2qB,GAAe7tB,EAAehb,EAAYwN,OAErD,CACD,MAAMm8B,EAA2C,mBAAf3pC,EAC5BqmC,GAAerrB,EAAehb,EAAYwN,EAAQsiB,QAClD9vB,EACNke,EAAYzK,QAAQ80B,IAAIR,GAAc/sB,EAAe2uB,EAAoBn8B,GAC7E,CACA,OAAO0Q,EAAUtK,KAAK,KAClBoH,EAActe,OAAO,oBAAqBsD,IAElD,CDVkF4pC,CAAqB5uB,EAAekD,EAAW1Q,IACjI,CACA,SAASq8B,GAAqB7uB,GAC1B,IAAIgC,EAAU0sB,GAAY1uB,GACtBra,EAAQmpC,KACRpY,GAAkB,EAKtB,MAAMqY,EAA2B5wC,GAAS,CAAC8H,EAAKjB,WAC5C,MAAMiiB,EAAWokB,GAAerrB,EAAehb,EAAqB,SAAT7G,EACrD,OAAAqP,EAAAwS,EAAc8d,sBAAd,EAAAtwB,EAA+BsnB,YAC/B,GACN,GAAI7N,EAAU,CACV,MAAM7O,WAAEA,EAAAkmB,cAAYA,KAAkBjvB,GAAW4X,EACjDhhB,EAAM,IAAKA,KAAQoJ,KAAWivB,EAClC,CACA,OAAOr4B,GAmBX,SAAS+7B,EAAegN,GACpB,MAAM5wC,MAAEA,GAAU4hB,EACZoV,EAAUmZ,GAAkBvuB,EAAc2P,SAAW,CAAA,EAKrDud,EAAa,GAKb+B,MAAkB9oC,IAMxB,IAAI+oC,EAAkB,CAAA,EAKlBC,EAAsBp+B,IAO1B,IAAA,IAASlP,EAAI,EAAGA,EAAI4sC,GAAmB5sC,IAAK,CACxC,MAAM1D,EAAOqwC,GAAqB3sC,GAC5ButC,EAAYzpC,EAAMxH,GAClBm7B,OAAuB,IAAhBl7B,EAAMD,GACbC,EAAMD,GACNi3B,EAAQj3B,GACRkxC,EAAgBzW,GAAeU,GAK/BgW,EAAcnxC,IAAS6wC,EAAoBI,EAAUG,SAAW,MAClD,IAAhBD,IACAH,EAAsBttC,GAO1B,IAAI2tC,EAAclW,IAASlE,EAAQj3B,IAC/Bm7B,IAASl7B,EAAMD,IACfkxC,EAYJ,GAXIG,GACA9Y,GACA1W,EAAc2mB,yBACd6I,GAAc,GAMlBJ,EAAUxC,cAAgB,IAAKsC,IAI7BE,EAAUG,UAA4B,OAAhBD,IAElBhW,IAAS8V,EAAUK,UAErB9W,GAAoBW,IACJ,kBAATA,EACP,SAOJ,MAAMoW,EAAmBC,GAAuBP,EAAUK,SAAUnW,GACpE,IAAIsW,EAAoBF,GAEnBvxC,IAAS6wC,GACNI,EAAUG,WACTC,GACDH,GAEHxtC,EAAIstC,GAAuBE,EAC5BQ,GAAuB,EAK3B,MAAMC,EAAiBnrC,MAAMC,QAAQ00B,GAAQA,EAAO,CAACA,GAKrD,IAAIyW,EAAiBD,EAAe/uC,OAAOguC,EAAwB5wC,GAAO,KACtD,IAAhBmxC,IACAS,EAAiB,CAAA,GAUrB,MAAMC,mBAAEA,EAAqB,CAAA,GAAOZ,EAC9Ba,EAAU,IACTD,KACAD,GAEDG,EAAiB9yC,IACnBwyC,GAAoB,EAChBX,EAAYvoC,IAAItJ,KAChByyC,GAAuB,EACvBZ,EAAYhoC,OAAO7J,IAEvBgyC,EAAUvC,eAAezvC,IAAO,EAChC,MAAMmc,EAAcyG,EAAcC,SAAS7iB,GACvCmc,IACAA,EAAYylB,WAAY,IAEhC,IAAA,MAAW5hC,KAAO6yC,EAAS,CACvB,MAAMp/B,EAAOk/B,EAAe3yC,GACtBovB,EAAOwjB,EAAmB5yC,GAEhC,GAAI8xC,EAAgBnyC,eAAeK,GAC/B,SAIJ,IAAI+yC,GAAkB,EAElBA,EADA7E,GAAkBz6B,IAASy6B,GAAkB9e,IAC1B4hB,GAAev9B,EAAM2b,GAGtB3b,IAAS2b,EAE3B2jB,EACIt/B,QAEAq/B,EAAc9yC,GAId6xC,EAAYztC,IAAIpE,QAGN,IAATyT,GAAsBo+B,EAAYvoC,IAAItJ,GAK3C8yC,EAAc9yC,GAOdgyC,EAAUxC,cAAcxvC,IAAO,CAEvC,CAKAgyC,EAAUK,SAAWnW,EACrB8V,EAAUY,mBAAqBD,EAC3BX,EAAUG,WACVL,EAAkB,IAAKA,KAAoBa,IAE3CrZ,GAAmB1W,EAAcygB,wBACjCmP,GAAoB,GAMxB,MAAMQ,EAAuBZ,GAAeE,EAExCE,KADoBQ,GAAwBP,IAE5C3C,EAAWztC,QAAQqwC,EAAeniC,IAAKuV,IACnC,MAAM1Q,EAAU,CAAErU,QAMlB,GAAyB,iBAAd+kB,GACPwT,IACC0Z,GACDpwB,EAAc2mB,wBACd3mB,EAAc2P,OAAQ,CACtB,MAAMA,OAAEA,GAAW3P,EACbqwB,EAAgBhF,GAAe1b,EAAQzM,GAC7C,GAAIyM,EAAOuS,kBAAoBmO,EAAe,CAC1C,MAAMjE,cAAEA,GAAkBiE,EAAcj4B,YAAc,CAAA,EACtD5F,EAAQkI,MAAQ+yB,GAAiB9d,EAAOuS,iBAAkBliB,EAAeosB,EAC7E,CACJ,CACA,MAAO,CACHlpB,YACA1Q,aAIhB,CAMA,GAAIy8B,EAAY7b,KAAM,CAClB,MAAMkd,EAAoB,CAAA,EAK1B,GAA6B,kBAAlBlyC,EAAMw2B,QAAuB,CACpC,MAAM2b,EAAoBlF,GAAerrB,EAAerb,MAAMC,QAAQxG,EAAMw2B,SACtEx2B,EAAMw2B,QAAQ,GACdx2B,EAAMw2B,SACR2b,GAAqBA,EAAkBn4B,aACvCk4B,EAAkBl4B,WAAam4B,EAAkBn4B,WAEzD,CACA62B,EAAY7nC,QAAShK,IACjB,MAAMozC,EAAiBxwB,EAAc6pB,cAAczsC,GAC7Cmc,EAAcyG,EAAcC,SAAS7iB,GACvCmc,IACAA,EAAYylB,WAAY,GAE5BsR,EAAkBlzC,GAAOozC,GAAkB,OAE/CtD,EAAWztC,KAAK,CAAEyjB,UAAWotB,GACjC,CACA,IAAIG,EAAgBxmC,QAAQijC,EAAWtrC,QAOvC,OANI80B,IACmB,IAAlBt4B,EAAMw2B,SAAqBx2B,EAAMw2B,UAAYx2B,EAAM4jB,SACnDhC,EAAc2mB,yBACf8J,GAAgB,GAEpB/Z,GAAkB,EACX+Z,EAAgBzuB,EAAQkrB,GAAcz0B,QAAQC,SACzD,CAiBA,MAAO,CACHspB,iBACA0O,UAfJ,SAAmBvyC,EAAMoxC,SAErB,GAAI5pC,EAAMxH,GAAMoxC,WAAaA,EACzB,OAAO92B,QAAQC,UAEnB,OAAAlL,EAAAwS,EAAc0mB,kBAAdl5B,EAA+BpG,QAASwoB,UAAU,OAAA,OAAApiB,EAAAoiB,EAAMmS,qBAAN,EAAAv0B,EAAsBkjC,UAAUvyC,EAAMoxC,KACxF5pC,EAAMxH,GAAMoxC,SAAWA,EACvB,MAAMrC,EAAalL,EAAe7jC,GAClC,IAAA,MAAWf,KAAOuI,EACdA,EAAMvI,GAAKwvC,cAAgB,CAAA,EAE/B,OAAOM,CACX,EAIIyD,mBA1RJ,SAA4BC,GACxB5uB,EAAU4uB,EAAa5wB,EAC3B,EAyRIotB,SAAU,IAAMznC,EAChBkrC,MAAO,KACHlrC,EAAQmpC,KACRpY,GAAkB,GAG9B,CACA,SAASiZ,GAAuBnjB,EAAM3b,GAClC,MAAoB,iBAATA,EACAA,IAAS2b,IAEX7nB,MAAMC,QAAQiM,KACXu9B,GAAev9B,EAAM2b,EAGrC,CACA,SAASskB,GAAgBvB,GAAW,GAChC,MAAO,CACHA,WACA3C,cAAe,CAAA,EACfC,eAAgB,CAAA,EAChBmD,mBAAoB,CAAA,EAE5B,CACA,SAASlB,KACL,MAAO,CACH9sB,QAAS8uB,IAAgB,GACzBC,YAAaD,KACbE,WAAYF,KACZvV,SAAUuV,KACVG,UAAWH,KACXI,WAAYJ,KACZnZ,KAAMmZ,KAEd,CElWA,MAAM1I,GACF,WAAA/mC,CAAY8vC,GACR7vC,KAAKigC,WAAY,EACjBjgC,KAAK6vC,KAAOA,CAChB,CACA,MAAAzpC,GAAW,ECHf,IAAImsB,GAAK,ECCT,MAAMqZ,GAAa,CACfhqB,UAAW,CACPklB,QCDR,cAA+BA,GAM3B,WAAA/mC,CAAY8vC,GACRl4B,MAAMk4B,GACNA,EAAKpP,iBAAmBoP,EAAKpP,eAAiB8M,GAAqBsC,GACvE,CACA,mCAAAC,GACI,MAAMpvB,QAAEA,GAAY1gB,KAAK6vC,KAAKhrB,WAC1BwS,GAAoB3W,KACpB1gB,KAAK+vC,gBAAkBrvB,EAAQ6T,UAAUv0B,KAAK6vC,MAEtD,CAIA,KAAAvR,GACIt+B,KAAK8vC,qCACT,CACA,MAAA1pC,GACI,MAAMsa,QAAEA,GAAY1gB,KAAK6vC,KAAKhrB,YACtBnE,QAASsvB,GAAgBhwC,KAAK6vC,KAAKre,WAAa,CAAA,EACpD9Q,IAAYsvB,GACZhwC,KAAK8vC,qCAEb,CACA,OAAAvR,SACIv+B,KAAK6vC,KAAKpP,eAAe8O,QACzB,OAAArjC,EAAAlM,KAAK+vC,kBAAL7jC,EAAAxP,KAAAsD,KACJ,ID7BAq2B,KAAM,CACFyQ,QDLR,cAAmCA,GAC/B,WAAA/mC,GACI4X,SAASixB,WACT5oC,KAAKuyB,GAAKA,IACd,CACA,MAAAnsB,GACI,IAAKpG,KAAK6vC,KAAKrT,gBACX,OACJ,MAAM9K,UAAEA,EAAA6B,eAAWA,GAAmBvzB,KAAK6vC,KAAKrT,iBACxC9K,UAAWue,GAAkBjwC,KAAK6vC,KAAKzI,qBAAuB,CAAA,EACtE,IAAKpnC,KAAK6vC,KAAKpP,gBAAkB/O,IAAcue,EAC3C,OAEJ,MAAMC,EAAgBlwC,KAAK6vC,KAAKpP,eAAe2O,UAAU,QAAS1d,GAC9D6B,IAAmB7B,GACnBwe,EAAc54B,KAAK,KACfic,EAAevzB,KAAKuyB,KAGhC,CACA,KAAA+L,GACI,MAAMpK,SAAEA,EAAAX,eAAUA,GAAmBvzB,KAAK6vC,KAAKrT,iBAAmB,CAAA,EAC9DjJ,GACAA,EAAevzB,KAAKuyB,IAEpB2B,IACAl0B,KAAKu+B,QAAUrK,EAASl0B,KAAKuyB,IAErC,CACA,OAAAgM,GAAY,KGhChB,SAAS4R,GAAYpiC,EAAQ+d,EAAW3rB,EAAS+Q,EAAU,CAAE4c,SAAS,IAElE,OADA/f,EAAOuiB,iBAAiBxE,EAAW3rB,EAAS+Q,GACrC,IAAMnD,EAAOiiB,oBAAoBlE,EAAW3rB,EACvD,CCDA,SAASiwC,GAAiBliB,GACtB,MAAO,CACHwU,MAAO,CACH9gC,EAAGssB,EAAMmiB,MACTj1B,EAAG8S,EAAMoiB,OAGrB,CCNA,SAASC,GAAgBxiC,EAAQ+d,EAAW3rB,EAAS+Q,GACjD,OAAOi/B,GAAYpiC,EAAQ+d,EDMR,CAAC3rB,GACZ+tB,GAAUM,GAAiBN,IAAU/tB,EAAQ+tB,EAAOkiB,GAAiBliB,ICPvCsiB,CAAerwC,GAAU+Q,EACnE,CCGA,SAASu/B,GAAWzN,GAChB,OAAOA,EAAKvkC,IAAMukC,EAAKxkC,GAC3B,CAIA,SAASkyC,GAAcpsC,EAAOsH,EAAQmC,EAAQD,EAAS,IACnDxJ,EAAMwJ,OAASA,EACfxJ,EAAMq+B,YAAcn2B,GAAUZ,EAAOpN,IAAKoN,EAAOnN,IAAK6F,EAAMwJ,QAC5DxJ,EAAM6D,MAAQsoC,GAAW1iC,GAAU0iC,GAAW7kC,GAC9CtH,EAAMu+B,UACFr2B,GAAUuB,EAAOvP,IAAKuP,EAAOtP,IAAK6F,EAAMwJ,QAAUxJ,EAAMq+B,aACvDr+B,EAAM6D,OAjBG,OAiBmB7D,EAAM6D,OAhBzB,QAiBV8D,MAAM3H,EAAM6D,UACZ7D,EAAM6D,MAAQ,IAEb7D,EAAMu+B,YAlBO,KAmBdv+B,EAAMu+B,WAlBQ,KAmBd52B,MAAM3H,EAAMu+B,cACZv+B,EAAMu+B,UAAY,EAE1B,CACA,SAAS8N,GAAarsC,EAAOsH,EAAQmC,EAAQD,GACzC4iC,GAAcpsC,EAAM1C,EAAGgK,EAAOhK,EAAGmM,EAAOnM,EAAGkM,EAASA,EAAOya,aAAU,GACrEmoB,GAAcpsC,EAAM8W,EAAGxP,EAAOwP,EAAGrN,EAAOqN,EAAGtN,EAASA,EAAO0a,aAAU,EACzE,CACA,SAASooB,GAAiB7iC,EAAQ8iC,EAAUxiB,GACxCtgB,EAAOvP,IAAM6vB,EAAO7vB,IAAMqyC,EAASryC,IACnCuP,EAAOtP,IAAMsP,EAAOvP,IAAMiyC,GAAWI,EACzC,CAKA,SAASC,GAAyB/iC,EAAQ6oB,EAAQvI,GAC9CtgB,EAAOvP,IAAMo4B,EAAOp4B,IAAM6vB,EAAO7vB,IACjCuP,EAAOtP,IAAMsP,EAAOvP,IAAMiyC,GAAW7Z,EACzC,CACA,SAASma,GAAqBhjC,EAAQ6oB,EAAQvI,GAC1CyiB,GAAyB/iC,EAAOnM,EAAGg1B,EAAOh1B,EAAGysB,EAAOzsB,GACpDkvC,GAAyB/iC,EAAOqN,EAAGwb,EAAOxb,EAAGiT,EAAOjT,EACxD,CCjDA,SAAS41B,GAAS9xC,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCDA,MAAM+xC,GAAmB,EAAGj0C,aACjBA,EAAUA,EAAQk0C,cAAcC,YAAc,KCFnD/oB,GAAW,CAAChsB,EAAGE,IAAM2F,KAAKC,IAAI9F,EAAIE,GCSxC,MAAM80C,GACF,WAAArxC,CAAYmuB,EAAOmjB,GAAUngB,mBAAEA,EAAAogB,cAAoBA,EAAgB5zC,OAAA6zC,iBAAQA,GAAmB,EAAAC,kBAAOA,EAAoB,GAAO,CAAA,GAgE5H,GA5DAxxC,KAAK0vB,WAAa,KAIlB1vB,KAAKyxC,cAAgB,KAIrBzxC,KAAK0xC,kBAAoB,KAIzB1xC,KAAKqxC,SAAW,CAAA,EAIhBrxC,KAAKsxC,cAAgB5zC,OACrBsC,KAAK2xC,YAAc,KACf,IAAM3xC,KAAKyxC,gBAAiBzxC,KAAK0xC,kBAC7B,OACJ,MAAME,EAAOC,GAAW7xC,KAAK0xC,kBAAmB1xC,KAAK8xC,SAC/CC,EAAmC,OAApB/xC,KAAK0vB,WAIpBsiB,EDtClB,SAAoB51C,EAAGE,GAEnB,MAAM21C,EAAS7pB,GAAShsB,EAAEwF,EAAGtF,EAAEsF,GACzBswC,EAAS9pB,GAAShsB,EAAEgf,EAAG9e,EAAE8e,GAC/B,OAAOnZ,KAAK2K,KAAKqlC,GAAU,EAAIC,GAAU,EAC7C,CCiC4CC,CAAWP,EAAK18B,OAAQ,CAAEtT,EAAG,EAAGwZ,EAAG,KAAQpb,KAAKwxC,kBAChF,IAAKO,IAAiBC,EAClB,OACJ,MAAQtP,MAAAA,GAAUkP,GACVrtC,UAAAA,GAAcsB,EACtB7F,KAAK8xC,QAAQ3zC,KAAK,IAAKukC,EAAOn+B,UAAAA,IAC9B,MAAM6tC,QAAEA,EAAAC,OAASA,GAAWryC,KAAKqxC,SAC5BU,IACDK,GAAWA,EAAQpyC,KAAKyxC,cAAeG,GACvC5xC,KAAK0vB,WAAa1vB,KAAKyxC,eAE3BY,GAAUA,EAAOryC,KAAKyxC,cAAeG,IAEzC5xC,KAAKsyC,kBAAoB,CAACpkB,EAAO0jB,KAC7B5xC,KAAKyxC,cAAgBvjB,EACrBluB,KAAK0xC,kBAAoBhO,GAAekO,EAAM5xC,KAAKkxB,oBAEnDtqB,EAAMR,OAAOpG,KAAK2xC,aAAa,IAEnC3xC,KAAKuyC,gBAAkB,CAACrkB,EAAO0jB,KAC3B5xC,KAAKwyC,MACL,MAAMC,MAAEA,EAAAC,aAAOA,EAAAC,gBAAcA,GAAoB3yC,KAAKqxC,SAGtD,GAFIrxC,KAAKuxC,kBACLoB,GAAmBA,KACjB3yC,KAAKyxC,gBAAiBzxC,KAAK0xC,kBAC7B,OACJ,MAAMkB,EAAUf,GAA0B,kBAAf3jB,EAAMrxB,KAC3BmD,KAAK0xC,kBACLhO,GAAekO,EAAM5xC,KAAKkxB,oBAAqBlxB,KAAK8xC,SACtD9xC,KAAK0vB,YAAc+iB,GACnBA,EAAMvkB,EAAO0kB,GAEjBF,GAAgBA,EAAaxkB,EAAO0kB,KAGnCpkB,GAAiBN,GAClB,OACJluB,KAAKuxC,iBAAmBA,EACxBvxC,KAAKqxC,SAAWA,EAChBrxC,KAAKkxB,mBAAqBA,EAC1BlxB,KAAKwxC,kBAAoBA,EACzBxxC,KAAKsxC,cAAgBA,GAAiB5zC,OACtC,MACMm1C,EAAcnP,GADP0M,GAAiBliB,GACWluB,KAAKkxB,qBACxCwR,MAAEA,GAAUmQ,GACZtuC,UAAEA,GAAcsB,EACtB7F,KAAK8xC,QAAU,CAAC,IAAKpP,EAAOn+B,cAC5B,MAAMuuC,eAAEA,GAAmBzB,EAC3ByB,GACIA,EAAe5kB,EAAO2jB,GAAWgB,EAAa7yC,KAAK8xC,UACvD9xC,KAAK+yC,gBAAkBxzC,EAAKgxC,GAAgBvwC,KAAKsxC,cAAe,cAAetxC,KAAKsyC,mBAAoB/B,GAAgBvwC,KAAKsxC,cAAe,YAAatxC,KAAKuyC,iBAAkBhC,GAAgBvwC,KAAKsxC,cAAe,gBAAiBtxC,KAAKuyC,iBAC9O,CACA,cAAAS,CAAe3B,GACXrxC,KAAKqxC,SAAWA,CACpB,CACA,GAAAmB,GACIxyC,KAAK+yC,iBAAmB/yC,KAAK+yC,kBAC7BlsC,EAAY7G,KAAK2xC,YACrB,EAEJ,SAASjO,GAAekO,EAAM1gB,GAC1B,OAAOA,EAAqB,CAAEwR,MAAOxR,EAAmB0gB,EAAKlP,QAAWkP,CAC5E,CACA,SAASqB,GAAc72C,EAAGE,GACtB,MAAO,CAAEsF,EAAGxF,EAAEwF,EAAItF,EAAEsF,EAAGwZ,EAAGhf,EAAEgf,EAAI9e,EAAE8e,EACtC,CACA,SAASy2B,IAAWnP,MAAEA,GAASoP,GAC3B,MAAO,CACHpP,QACAp+B,MAAO2uC,GAAcvQ,EAAOwQ,GAAgBpB,IAC5C58B,OAAQ+9B,GAAcvQ,EAAOyQ,GAAiBrB,IAC9C/wC,SAAU0rB,GAAYqlB,EAAS,IAEvC,CACA,SAASqB,GAAiBrB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASoB,GAAgBpB,GACrB,OAAOA,EAAQA,EAAQxxC,OAAS,EACpC,CACA,SAASmsB,GAAYqlB,EAASsB,GAC1B,GAAItB,EAAQxxC,OAAS,EACjB,MAAO,CAAEsB,EAAG,EAAGwZ,EAAG,GAEtB,IAAI7a,EAAIuxC,EAAQxxC,OAAS,EACrB+yC,EAAmB,KACvB,MAAMC,EAAYJ,GAAgBpB,GAClC,KAAOvxC,GAAK,IACR8yC,EAAmBvB,EAAQvxC,KACvB+yC,EAAU/uC,UAAY8uC,EAAiB9uC,UACvC7D,EAAsB0yC,MAG1B7yC,IAEJ,IAAK8yC,EACD,MAAO,CAAEzxC,EAAG,EAAGwZ,EAAG,GAEtB,MAAMnU,EAAOrG,EAAsB0yC,EAAU/uC,UAAY8uC,EAAiB9uC,WAC1E,GAAa,IAAT0C,EACA,MAAO,CAAErF,EAAG,EAAGwZ,EAAG,GAEtB,MAAMvI,EAAkB,CACpBjR,GAAI0xC,EAAU1xC,EAAIyxC,EAAiBzxC,GAAKqF,EACxCmU,GAAIk4B,EAAUl4B,EAAIi4B,EAAiBj4B,GAAKnU,GAQ5C,OANI4L,EAAgBjR,IAAM6N,MACtBoD,EAAgBjR,EAAI,GAEpBiR,EAAgBuI,IAAM3L,MACtBoD,EAAgBuI,EAAI,GAEjBvI,CACX,CC3HA,SAAS0gC,GAA4BvQ,EAAMxkC,EAAKC,GAC5C,MAAO,CACHD,SAAa,IAARA,EAAoBwkC,EAAKxkC,IAAMA,OAAM,EAC1CC,SAAa,IAARA,EACCukC,EAAKvkC,IAAMA,GAAOukC,EAAKvkC,IAAMukC,EAAKxkC,UAClC,EAEd,CAcA,SAASg1C,GAA4BC,EAAYC,GAC7C,IAAIl1C,EAAMk1C,EAAgBl1C,IAAMi1C,EAAWj1C,IACvCC,EAAMi1C,EAAgBj1C,IAAMg1C,EAAWh1C,IAO3C,OAJIi1C,EAAgBj1C,IAAMi1C,EAAgBl1C,IACtCi1C,EAAWh1C,IAAMg1C,EAAWj1C,OAC3BA,EAAKC,GAAO,CAACA,EAAKD,IAEhB,CAAEA,MAAKC,MAClB,CAuCA,MAAMk1C,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACHv1C,IAAKw1C,GAAoBH,EAAaC,GACtCr1C,IAAKu1C,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,iBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC5GA,MAAMC,OAA0B/P,QAChC,MAAMgQ,GACF,WAAAp0C,CAAY2e,GACR1e,KAAKo0C,aAAe,KACpBp0C,KAAKktB,YAAa,EAClBltB,KAAKq0C,iBAAmB,KACxBr0C,KAAK2iC,YAAc,CAAE/gC,EAAG,EAAGwZ,EAAG,GAI9Bpb,KAAKs0C,aAAc,EACnBt0C,KAAKu0C,uBAAwB,EAI7Bv0C,KAAKw0C,Q3CrBK,CACd5yC,EAFe,CAASpD,IAAK,EAAGC,IAAK,GAGrC2c,EAHe,CAAS5c,IAAK,EAAGC,IAAK,I2C0BjCuB,KAAKy0C,mBAAqB,KAI1Bz0C,KAAK00C,cAAgB,KACrB10C,KAAK0e,cAAgBA,CACzB,CACA,KAAA7P,CAAM8lC,GAAaC,aAAEA,GAAe,oBAAOpD,GAAsB,IAI7D,MAAMhV,gBAAEA,GAAoBx8B,KAAK0e,cACjC,GAAI8d,IAAiD,IAA9BA,EAAgB9K,UACnC,OACJ,MAmGM6f,iBAAEA,GAAqBvxC,KAAK6kB,WAClC7kB,KAAK60C,WAAa,IAAIzD,GAAWuD,EAAa,CAC1C7B,eArGoB5kB,IACpB,MAAQqjB,iBAAAA,GAAqBvxC,KAAK6kB,WAGlC0sB,EAAmBvxC,KAAK80C,iBAAmB90C,KAAK+0C,gBAC5CH,GACA50C,KAAK40C,aAAaxE,GAAiBliB,GAAOwU,QAgG9C0P,QA7FY,CAAClkB,EAAO0jB,KAEpB,MAAQtb,KAAAA,EAAAA,gBAAM0e,cAAiBC,GAAgBj1C,KAAK6kB,WACpD,GAAIyR,IAAS0e,IACLh1C,KAAKo0C,cACLp0C,KAAKo0C,eACTp0C,KAAKo0C,aC9DJ,OADIpR,ED+D2B1M,IC9Df,MAAT0M,EACZ9V,GAAW8V,GACJ,MAGP9V,GAAW8V,IAAQ,EACZ,KACH9V,GAAW8V,IAAQ,IAKvB9V,GAAWtrB,GAAKsrB,GAAW9R,EACpB,MAGP8R,GAAWtrB,EAAIsrB,GAAW9R,GAAI,EACvB,KACH8R,GAAWtrB,EAAIsrB,GAAW9R,GAAI,KD8CzBpb,KAAKo0C,cACN,OClEpB,IAAqBpR,EDoEThjC,KAAKy0C,mBAAqBvmB,EAC1BluB,KAAK00C,cAAgB9C,EACrB5xC,KAAKktB,YAAa,EAClBltB,KAAKq0C,iBAAmB,KACxBr0C,KAAKk1C,qBACDl1C,KAAK0e,cAAc2gB,aACnBr/B,KAAK0e,cAAc2gB,WAAW8V,oBAAqB,EACnDn1C,KAAK0e,cAAc2gB,WAAWtxB,YAAS,GAK3CijC,GAAUhO,IACN,IAAIhmC,EAAUgD,KAAKo1C,mBAAmBpS,GAAMpkB,OAAS,EAIrD,GAAI3U,GAAQpL,KAAK7B,GAAU,CACvB,MAAMqiC,WAAEA,GAAer/B,KAAK0e,cAC5B,GAAI2gB,GAAcA,EAAWzI,OAAQ,CACjC,MAAMye,EAAehW,EAAWzI,OAAO0e,UAAUtS,GACjD,GAAIqS,EAAc,CAEdr4C,EADeyzC,GAAW4E,IACNrtC,WAAWhL,GAAW,IAC9C,CACJ,CACJ,CACAgD,KAAK2iC,YAAYK,GAAQhmC,IAGzBi4C,GACAruC,EAAML,WAAW,IAAM0uC,EAAY/mB,EAAO0jB,IAE9CzH,GAAqBnqC,KAAK0e,cAAe,aACzC,MAAM+hB,eAAEA,GAAmBzgC,KAAK0e,cAChC+hB,GAAkBA,EAAe2O,UAAU,aAAa,IAgDxDiD,OA9CW,CAACnkB,EAAO0jB,KACnB5xC,KAAKy0C,mBAAqBvmB,EAC1BluB,KAAK00C,cAAgB9C,EACrB,MAAMoD,gBAAEA,EAAAO,kBAAiBA,EAAAC,gBAAmBA,SAAiBC,GAAYz1C,KAAK6kB,WAE9E,IAAKmwB,IAAoBh1C,KAAKo0C,aAC1B,OACJ,MAAMl/B,OAAEA,GAAW08B,EAEnB,GAAI2D,GAA+C,OAA1Bv1C,KAAKq0C,iBAM1B,OALAr0C,KAAKq0C,iBAiXrB,SAA6Bn/B,EAAQwgC,EAAgB,IACjD,IAAIp0B,EAAY,KACZrf,KAAKC,IAAIgT,EAAOkG,GAAKs6B,EACrBp0B,EAAY,IAEPrf,KAAKC,IAAIgT,EAAOtT,GAAK8zC,IAC1Bp0B,EAAY,KAEhB,OAAOA,CACX,CA1XwCq0B,CAAoBzgC,QAEd,OAA1BlV,KAAKq0C,kBACLmB,GAAmBA,EAAgBx1C,KAAKq0C,mBAKhDr0C,KAAK41C,WAAW,IAAKhE,EAAKlP,MAAOxtB,GACjClV,KAAK41C,WAAW,IAAKhE,EAAKlP,MAAOxtB,GAOjClV,KAAK0e,cAAcpY,SAKnBmvC,GAAUA,EAAOvnB,EAAO0jB,IAgBxBc,aAdiB,CAACxkB,EAAO0jB,KACzB5xC,KAAKy0C,mBAAqBvmB,EAC1BluB,KAAK00C,cAAgB9C,EACrB5xC,KAAK8O,KAAKof,EAAO0jB,GACjB5xC,KAAKy0C,mBAAqB,KAC1Bz0C,KAAK00C,cAAgB,MAUrB/B,gBARoB,IAAM3B,GAAUhO,UAAS,MAAiC,WAAjChjC,KAAK61C,kBAAkB7S,KACpE,OAAA92B,OAAKkpC,mBAAmBpS,GAAMphB,gBAA9B,EAAA1V,EAAyCqM,WAQ1C,CACC2Y,mBAAoBlxB,KAAK0e,cAAcspB,wBACvCuJ,mBACAC,oBACAF,cAAeL,GAAiBjxC,KAAK0e,gBAE7C,CAIA,IAAA5P,CAAKof,EAAO0kB,GACR,MAAMkD,EAAa5nB,GAASluB,KAAKy0C,mBAC3BsB,EAAenD,GAAW5yC,KAAK00C,cAC/BxnB,EAAaltB,KAAKktB,WAExB,GADAltB,KAAK0F,UACAwnB,IAAe6oB,IAAiBD,EACjC,OACJ,MAAM/0C,SAAEA,GAAag1C,EACrB/1C,KAAK0sB,eAAe3rB,GACpB,MAAMi1C,UAAEA,GAAch2C,KAAK6kB,WACvBmxB,GACApvC,EAAML,WAAW,IAAMyvC,EAAUF,EAAYC,GAErD,CAIA,MAAArwC,GACI1F,KAAKktB,YAAa,EAClB,MAAMmS,WAAEA,EAAAoB,eAAYA,GAAmBzgC,KAAK0e,cACxC2gB,IACAA,EAAW8V,oBAAqB,GAEpCn1C,KAAK60C,YAAc70C,KAAK60C,WAAWrC,MACnCxyC,KAAK60C,gBAAa,EAClB,MAAMG,gBAAEA,GAAoBh1C,KAAK6kB,YAC5BmwB,GAAmBh1C,KAAKo0C,eACzBp0C,KAAKo0C,eACLp0C,KAAKo0C,aAAe,MAExB3T,GAAkBA,EAAe2O,UAAU,aAAa,EAC5D,CACA,UAAAwG,CAAW5S,EAAMiT,EAAQ/gC,GACrB,MAAQohB,KAAAA,GAASt2B,KAAK6kB,WAEtB,IAAK3P,IAAWghC,GAAWlT,EAAM1M,EAAMt2B,KAAKq0C,kBACxC,OACJ,MAAM8B,EAAYn2C,KAAKo1C,mBAAmBpS,GAC1C,IAAIzzB,EAAOvP,KAAK2iC,YAAYK,GAAQ9tB,EAAO8tB,GAEvChjC,KAAKs0C,aAAet0C,KAAKs0C,YAAYtR,KACrCzzB,EDtMZ,SAA0BmzB,GAAOlkC,IAAEA,EAAAC,IAAKA,GAAO+1C,GAa3C,YAZY,IAARh2C,GAAqBkkC,EAAQlkC,EAE7BkkC,EAAQ8R,EACFhoC,GAAUhO,EAAKkkC,EAAO8R,EAAQh2C,KAC9ByD,KAAKxD,IAAIikC,EAAOlkC,QAET,IAARC,GAAqBikC,EAAQjkC,IAElCikC,EAAQ8R,EACFhoC,GAAU/N,EAAKikC,EAAO8R,EAAQ/1C,KAC9BwD,KAAKzD,IAAIkkC,EAAOjkC,IAEnBikC,CACX,CCwLmB0T,CAAiB7mC,EAAMvP,KAAKs0C,YAAYtR,GAAOhjC,KAAKw0C,QAAQxR,KAEvEmT,EAAUjvC,IAAIqI,EAClB,CACA,kBAAA2lC,SACI,MAAM3V,gBAAEA,EAAAsU,YAAiBA,GAAgB7zC,KAAK6kB,WACxC+R,EAAS52B,KAAK0e,cAAc2gB,aAC7Br/B,KAAK0e,cAAc2gB,WAAWzI,OAC7B52B,KAAK0e,cAAc2gB,WAAWgX,SAAQ,GACtC,OAAAnqC,EAAAlM,KAAK0e,cAAc2gB,iBAAnB,EAAAnzB,EAA+B0qB,OAC/B0f,EAAkBt2C,KAAKs0C,YACzB/U,GAAmBtB,GAAYsB,GAC1Bv/B,KAAKs0C,cACNt0C,KAAKs0C,YAAct0C,KAAKu2C,yBAKxBv2C,KAAKs0C,eADL/U,IAAmB3I,IDvLnC,SAAiC0e,GAAW93B,IAAEA,OAAKE,EAAAC,OAAMA,EAAAC,MAAQA,IAC7D,MAAO,CACHhc,EAAG2xC,GAA4B+B,EAAU1zC,EAAG8b,EAAME,GAClDxC,EAAGm4B,GAA4B+B,EAAUl6B,EAAGoC,EAAKG,GAEzD,CCmLmC64B,CAAwB5f,EAAO0e,UAAW/V,GAMrEv/B,KAAKw0C,QDhIb,SAA4BX,EAAcF,IAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACH/xC,EAAGgyC,GAAmBC,EAAa,OAAQ,SAC3Cz4B,EAAGw4B,GAAmBC,EAAa,MAAO,UAElD,CCqHuB4C,CAAmB5C,GAK9ByC,IAAoBt2C,KAAKs0C,aACzB1d,GACA52B,KAAKs0C,cACJt0C,KAAKu0C,uBACNvD,GAAUhO,KACmB,IAArBhjC,KAAKs0C,aACLt0C,KAAKo1C,mBAAmBpS,KACxBhjC,KAAKs0C,YAAYtR,GD1JrC,SAA+BpM,EAAQ0d,GACnC,MAAMoC,EAAsB,CAAA,EAO5B,YANwB,IAApBpC,EAAY91C,MACZk4C,EAAoBl4C,IAAM81C,EAAY91C,IAAMo4B,EAAOp4B,UAE/B,IAApB81C,EAAY71C,MACZi4C,EAAoBj4C,IAAM61C,EAAY71C,IAAMm4B,EAAOp4B,KAEhDk4C,CACX,CCiJ6CC,CAAsB/f,EAAO0e,UAAUtS,GAAOhjC,KAAKs0C,YAAYtR,MAIxG,CACA,qBAAAuT,GACI,MAAQhX,gBAAiB+U,EAAAsC,yBAAaA,GAA6B52C,KAAK6kB,WACxE,IAAKyvB,IAAgBrW,GAAYqW,GAC7B,OAAO,EACX,MAAMuC,EAAqBvC,EAAYt3C,SAEjCqiC,WAAEA,GAAer/B,KAAK0e,cAE5B,IAAK2gB,IAAeA,EAAWzI,OAC3B,OAAO,EACX,MAAMkgB,E5C5Pd,SAAwBx4B,EAASy4B,EAAoB7lB,GACjD,MAAM8lB,EAAc3sB,GAAmB/L,EAAS4S,IAC1C+lB,OAAEA,GAAWF,EAKnB,OAJIE,IACA5T,GAAc2T,EAAYp1C,EAAGq1C,EAAO/hC,OAAOtT,GAC3CyhC,GAAc2T,EAAY57B,EAAG67B,EAAO/hC,OAAOkG,IAExC47B,CACX,C4CoP+BE,CAAeL,EAAoBxX,EAAWxtB,KAAM7R,KAAK0e,cAAcspB,yBAC9F,IAAImP,EDnMZ,SAAiC7B,EAAWwB,GACxC,MAAO,CACHl1C,EAAG4xC,GAA4B8B,EAAU1zC,EAAGk1C,EAAel1C,GAC3DwZ,EAAGo4B,GAA4B8B,EAAUl6B,EAAG07B,EAAe17B,GAEnE,CC8LkCg8B,CAAwB/X,EAAWzI,OAAO0e,UAAWwB,GAK/E,GAAIF,EAA0B,CAC1B,MAAMS,EAAkBT,E/C9PpC,UAAiCh1C,EAAEA,EAAAwZ,EAAGA,IAClC,MAAO,CAAEoC,IAAKpC,EAAE5c,IAAKof,MAAOhc,EAAEnD,IAAKkf,OAAQvC,EAAE3c,IAAKif,KAAM9b,EAAEpD,IAC9D,C+C4P6D84C,CAAwBH,IACzEn3C,KAAKu0C,wBAA0B8C,EAC3BA,IACAF,EAAsB/U,GAAwBiV,GAEtD,CACA,OAAOF,CACX,CACA,cAAAzqB,CAAe3rB,GACX,MAAQu1B,KAAAA,EAAAA,aAAMihB,EAAA1D,YAAcA,EAAA2D,eAAaA,mBAAgBjG,EAAAkG,oBAAkBA,GAAyBz3C,KAAK6kB,WACnGyvB,EAAct0C,KAAKs0C,aAAe,CAAA,EAClCoD,EAAqB1G,GAAUhO,IACjC,IAAKkT,GAAWlT,EAAM1M,EAAMt2B,KAAKq0C,kBAC7B,OAEJ,IAAIv9B,EAAcw9B,GAAeA,EAAYtR,IAAU,CAAA,EACnDuO,IACAz6B,EAAa,CAAEtY,IAAK,EAAGC,IAAK,IAOhC,MAAM4U,EAAkBwgC,EAAc,IAAM,IACtCzgC,EAAgBygC,EAAc,GAAK,IACnC5gC,EAAU,CACZpW,KAAM,UACNkE,SAAUw2C,EAAex2C,EAASiiC,GAAQ,EAC1C3vB,kBACAD,gBACAD,aAAc,IACdzB,UAAW,EACXD,UAAW,MACR+lC,KACA1gC,GAKP,OAAO9W,KAAK23C,wBAAwB3U,EAAM/vB,KAG9C,OAAOkE,QAAQ80B,IAAIyL,GAAoBpgC,KAAKmgC,EAChD,CACA,uBAAAE,CAAwB3U,EAAMlsB,GAC1B,MAAMq/B,EAAYn2C,KAAKo1C,mBAAmBpS,GAE1C,OADAmH,GAAqBnqC,KAAK0e,cAAeskB,GAClCmT,EAAUtnC,MAAM67B,GAAmB1H,EAAMmT,EAAW,EAAGr/B,EAAY9W,KAAK0e,eAAe,GAClG,CACA,aAAAq2B,GACI/D,GAAUhO,GAAShjC,KAAKo1C,mBAAmBpS,GAAMl0B,OACrD,CACA,cAAAgmC,GACI9D,GAAUhO,UAAS,OAAA,OAAA92B,EAAAlM,KAAKo1C,mBAAmBpS,GAAMphB,gBAA9B,EAAA1V,EAAyCuM,SAChE,CACA,iBAAAo9B,CAAkB7S,SACd,OAAO,OAAA92B,EAAAlM,KAAKo1C,mBAAmBpS,GAAMphB,gBAA9B,EAAA1V,EAAyC7H,KACpD,CAOA,kBAAA+wC,CAAmBpS,GACf,MAAM4U,EAAU,QAAQ5U,EAAKlF,gBACvBhhC,EAAQkD,KAAK0e,cAAcmG,WAC3BgzB,EAAsB/6C,EAAM86C,GAClC,OAAOC,GAED73C,KAAK0e,cAAcC,SAASqkB,GAAOlmC,EAAMw2B,QACrCx2B,EAAMw2B,QAAQ0P,QACd,IAAc,EAC5B,CACA,YAAA4R,CAAalS,GACTsO,GAAUhO,IACN,MAAQ1M,KAAAA,GAASt2B,KAAK6kB,WAEtB,IAAKqxB,GAAWlT,EAAM1M,EAAMt2B,KAAKq0C,kBAC7B,OACJ,MAAMhV,WAAEA,GAAer/B,KAAK0e,cACtBy3B,EAAYn2C,KAAKo1C,mBAAmBpS,GAC1C,GAAI3D,GAAcA,EAAWzI,OAAQ,CACjC,MAAMp4B,IAAEA,EAAAC,IAAKA,GAAQ4gC,EAAWzI,OAAO0e,UAAUtS,GACjDmT,EAAUjvC,IAAIw7B,EAAMM,GAAQx2B,GAAUhO,EAAKC,EAAK,IACpD,GAER,CAMA,8BAAAq5C,GACI,IAAK93C,KAAK0e,cAAc1hB,QACpB,OACJ,MAAQs5B,KAAAA,EAAAA,gBAAMiJ,GAAoBv/B,KAAK6kB,YACjCwa,WAAEA,GAAer/B,KAAK0e,cAC5B,IAAKuf,GAAYsB,KAAqBF,IAAer/B,KAAKs0C,YACtD,OAKJt0C,KAAK+0C,gBAKL,MAAMgD,EAAc,CAAEn2C,EAAG,EAAGwZ,EAAG,GAC/B41B,GAAUhO,IACN,MAAMmT,EAAYn2C,KAAKo1C,mBAAmBpS,GAC1C,GAAImT,IAAkC,IAArBn2C,KAAKs0C,YAAuB,CACzC,MAAMzgC,EAASsiC,EAAUv3B,MACzBm5B,EAAY/U,GDlT5B,SAAoBp3B,EAAQmC,GACxB,IAAID,EAAS,GACb,MAAMkqC,EAAevH,GAAW7kC,GAC1BqsC,EAAexH,GAAW1iC,GAOhC,OANIkqC,EAAeD,EACflqC,IAAkBC,EAAOvP,IAAKuP,EAAOtP,IAAMu5C,EAAcpsC,EAAOpN,KAE3Dw5C,EAAeC,IACpBnqC,IAAkBlC,EAAOpN,IAAKoN,EAAOnN,IAAMw5C,EAAclqC,EAAOvP,MAE7DD,EAAM,EAAG,EAAGuP,EACvB,CCuSoCoqC,CAAW,CAAE15C,IAAKqV,EAAQpV,IAAKoV,GAAU7T,KAAKs0C,YAAYtR,GAClF,IAKJ,MAAMpe,kBAAEA,GAAsB5kB,KAAK0e,cAAcmG,WACjD7kB,KAAK0e,cAAc1hB,QAAQilB,MAAMha,UAAY2c,EACvCA,EAAkB,CAAA,EAAI,IACtB,OACNya,EAAWxtB,MAAQwtB,EAAWxtB,KAAKsmC,eACnC9Y,EAAW+Y,eACXp4C,KAAKk1C,qBAKLlE,GAAUhO,IACN,IAAKkT,GAAWlT,EAAM1M,EAAM,MACxB,OAIJ,MAAM6f,EAAYn2C,KAAKo1C,mBAAmBpS,IACpCxkC,IAAEA,EAAAC,IAAKA,GAAQuB,KAAKs0C,YAAYtR,GACtCmT,EAAUjvC,IAAIsF,GAAUhO,EAAKC,EAAKs5C,EAAY/U,MAEtD,CACA,YAAAqV,GACI,IAAKr4C,KAAK0e,cAAc1hB,QACpB,OACJk3C,GAAoBhtC,IAAIlH,KAAK0e,cAAe1e,MAC5C,MAIMs4C,EAAsB/H,GAJZvwC,KAAK0e,cAAc1hB,QAIkB,cAAgBkxB,IACjE,MAAQoI,KAAAA,EAAAA,aAAMmD,GAAe,GAASz5B,KAAK6kB,WAC3CyR,GAAQmD,GAAgBz5B,KAAK6O,MAAMqf,KAEjCqqB,EAAyB,KAC3B,MAAMhZ,gBAAEA,GAAoBv/B,KAAK6kB,WAC7BoZ,GAAYsB,IAAoBA,EAAgBviC,UAChDgD,KAAKs0C,YAAct0C,KAAKu2C,2BAG1BlX,WAAEA,GAAer/B,KAAK0e,cACtB85B,EAA4BnZ,EAAW/O,iBAAiB,UAAWioB,GACrElZ,IAAeA,EAAWzI,SAC1ByI,EAAWxtB,MAAQwtB,EAAWxtB,KAAKsmC,eACnC9Y,EAAW+Y,gBAEfxxC,EAAMX,KAAKsyC,GAKX,MAAME,EAAqBtI,GAAYzyC,OAAQ,SAAU,IAAMsC,KAAK83C,kCAK9DY,EAA2BrZ,EAAW/O,iBAAiB,YAAA,EAAiBhsB,QAAOq0C,uBAC7E34C,KAAKktB,YAAcyrB,IACnB3H,GAAUhO,IACN,MAAM/qB,EAAcjY,KAAKo1C,mBAAmBpS,GACvC/qB,IAELjY,KAAK2iC,YAAYK,IAAS1+B,EAAM0+B,GAAMH,UACtC5qB,EAAY/Q,IAAI+Q,EAAY2G,MAAQta,EAAM0+B,GAAMH,cAEpD7iC,KAAK0e,cAAcpY,SAE3B,GACA,MAAO,KACHmyC,IACAH,IACAE,IACAE,GAA4BA,IAEpC,CACA,QAAA7zB,GACI,MAAM/nB,EAAQkD,KAAK0e,cAAcmG,YACzByR,KAAAA,GAAO,EAAAif,kBAAOA,GAAoB,EAAAP,gBAAOA,GAAkB,EAAAzV,gBAAOA,GAAkB,EAAAsU,YAAOA,EAAcF,GAAA4D,aAAgBA,GAAe,GAAUz6C,EAC1J,MAAO,IACAA,EACHw5B,KAAAA,EACAif,oBACAP,kBACAzV,kBACAsU,cACA0D,eAER,EAEJ,SAASrB,GAAW50B,EAAWgV,EAAM+d,GACjC,SAAkB,IAAT/d,GAAiBA,IAAShV,GACT,OAArB+yB,GAA6BA,IAAqB/yB,EAC3D,CEvdA,MAAMs3B,GAAgBz4C,GAAY,CAAC+tB,EAAO0jB,KAClCzxC,GACAyG,EAAML,WAAW,IAAMpG,EAAQ+tB,EAAO0jB,KCJ9C,MAAMiH,GAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCbpB,SAASC,GAAgBC,EAAQjW,GAC7B,OAAIA,EAAKvkC,MAAQukC,EAAKxkC,IACX,EACHy6C,GAAUjW,EAAKvkC,IAAMukC,EAAKxkC,KAAQ,GAC9C,CAQA,MAAM06C,GAAsB,CACxBC,QAAS,CAACtlC,EAAQg8B,KACd,IAAKA,EAAK9hC,OACN,OAAO8F,EAKX,GAAsB,iBAAXA,EAAqB,CAC5B,IAAI3J,GAAGrL,KAAKgV,GAIR,OAAOA,EAHPA,EAAS7L,WAAW6L,EAK5B,CAOA,MAAO,GAFGmlC,GAAgBnlC,EAAQg8B,EAAK9hC,OAAOnM,OACpCo3C,GAAgBnlC,EAAQg8B,EAAK9hC,OAAOqN,QCjChDg+B,GAAmB,CACrBD,QAAS,CAACtlC,GAAUwlC,YAAWC,sBAC3B,MAAMC,EAAW1lC,EACX2lC,EAASxtC,GAAQjE,MAAM8L,GAE7B,GAAI2lC,EAAOl5C,OAAS,EAChB,OAAOi5C,EACX,MAAMvrC,EAAWhC,GAAQL,kBAAkBkI,GACrCqB,EAA8B,iBAAdskC,EAAO,GAAkB,EAAI,EAE7CC,EAASH,EAAgB13C,EAAEuG,MAAQkxC,EAAUz3C,EAC7C83C,EAASJ,EAAgBl+B,EAAEjT,MAAQkxC,EAAUj+B,EACnDo+B,EAAO,EAAItkC,IAAWukC,EACtBD,EAAO,EAAItkC,IAAWwkC,EAOtB,MAAMC,EAAentC,GAAUitC,EAAQC,EAAQ,IAO/C,MALkC,iBAAvBF,EAAO,EAAItkC,KAClBskC,EAAO,EAAItkC,IAAWykC,GAEQ,iBAAvBH,EAAO,EAAItkC,KAClBskC,EAAO,EAAItkC,IAAWykC,GACnB3rC,EAASwrC,KCTxB,IAAII,IAAsB,EAC1B,MAAMC,WAAiCpe,EAAAA,UAMnC,iBAAAqe,GACI,MAAMp7B,cAAEA,EAAAq7B,YAAeA,EAAAC,kBAAaA,EAAA7hB,SAAmBA,GAAan4B,KAAKlD,OACnEuiC,WAAEA,GAAe3gB,GpF1B/B,SAA2Bu7B,GACvB,IAAA,MAAWn+C,KAAOm+C,EACdhiB,GAAgBn8B,GAAOm+C,EAAWn+C,GAC9B0L,GAAkB1L,KAClBm8B,GAAgBn8B,GAAKo+C,eAAgB,EAGjD,CoFoBQC,CAAkBC,IACd/a,IACI0a,EAAYM,OACZN,EAAYM,MAAMn6C,IAAIm/B,GACtB2a,GAAqBA,EAAkB9lB,UAAYiE,GACnD6hB,EAAkB9lB,SAASmL,GAE3Bua,IACAva,EAAWxtB,KAAKyoC,YAEpBjb,EAAW/O,iBAAiB,oBAAqB,KAC7CtwB,KAAKw0B,iBAET6K,EAAWO,WAAW,IACfP,EAAWnuB,QACdqiB,eAAgB,IAAMvzB,KAAKw0B,kBAGnCqkB,GAAsBE,gBAAiB,CAC3C,CACA,uBAAAxnB,CAAwBC,GACpB,MAAM+oB,iBAAEA,EAAA77B,cAAkBA,EAAe4X,KAAAA,EAAAA,UAAM5E,GAAc1xB,KAAKlD,OAC5DuiC,WAAEA,GAAe3gB,EACvB,OAAK2gB,GASLA,EAAW3N,UAAYA,EACvBkoB,IAAsB,EAClBtjB,GACA9E,EAAU+oB,mBAAqBA,QACV,IAArBA,GACA/oB,EAAUE,YAAcA,EACxB2N,EAAWmb,aAGXx6C,KAAKw0B,eAELhD,EAAUE,YAAcA,IACpBA,EACA2N,EAAWob,UAELpb,EAAWqb,YAMjB9zC,EAAML,WAAW,KACb,MAAMo0C,EAAQtb,EAAWub,WACpBD,GAAUA,EAAME,QAAQv6C,QACzBN,KAAKw0B,kBAKd,MArCI,IAsCf,CACA,kBAAArC,GACI,MAAMkN,WAAEA,GAAer/B,KAAKlD,MAAM4hB,cAC9B2gB,IACAA,EAAWxtB,KAAKyoC,YAChBrtB,GAAU1mB,WAAW,MACZ84B,EAAWyb,kBAAoBzb,EAAW0b,UAC3C/6C,KAAKw0B,iBAIrB,CACA,oBAAAwmB,GACI,MAAMt8B,cAAEA,EAAAq7B,YAAeA,EAAaC,kBAAmBiB,GAAoBj7C,KAAKlD,OAC1EuiC,WAAEA,GAAe3gB,EACvBk7B,IAAsB,EAClBva,IACAA,EAAW6b,4BACPnB,GAAeA,EAAYM,OAC3BN,EAAYM,MAAMpU,OAAO5G,GACzB4b,GAAkBA,EAAeE,YACjCF,EAAeE,WAAW9b,GAEtC,CACA,YAAA7K,GACI,MAAMA,aAAEA,GAAiBx0B,KAAKlD,MAC9B03B,GAAgBA,GACpB,CACA,MAAAluB,GACI,OAAO,IACX,EAEJ,SAAS86B,GAActkC,GACnB,MAAO40B,EAAW8C,GAAgBF,KAC5BylB,EAAcrnB,EAAAA,WAAWt1B,GAC/B,OAAQF,EAAAA,IAAI28C,GAA0B,IAAK/8C,EAAOi9C,cAA0BC,kBAAmBtnB,EAAAA,WAAWiM,IAA2BjN,YAAsB8C,gBAC/J,CACA,MAAM4lB,GAAyB,CAC3BjzB,aAAc,IACP+xB,GACHkC,QAAS,CACL,sBACA,uBACA,yBACA,4BAGR/zB,oBAAqB6xB,GACrB5xB,qBAAsB4xB,GACtB1xB,uBAAwB0xB,GACxB3xB,wBAAyB2xB,GACzBmC,UAAWjC,IC/If,MAAMkC,GAAiB,CAACl/C,EAAGE,IAAMF,EAAEipB,MAAQ/oB,EAAE+oB,MCG7C,MAAMk2B,GACF,WAAAx7C,GACIC,KAAKoyB,SAAW,GAChBpyB,KAAKw7C,SAAU,CACnB,CACA,GAAAt7C,CAAIouB,GACAvwB,EAAciC,KAAKoyB,SAAU9D,GAC7BtuB,KAAKw7C,SAAU,CACnB,CACA,MAAAvV,CAAO3X,GACHlwB,EAAW4B,KAAKoyB,SAAU9D,GAC1BtuB,KAAKw7C,SAAU,CACnB,CACA,OAAA11C,CAAQ5G,GACJc,KAAKw7C,SAAWx7C,KAAKoyB,SAASga,KAAKkP,IACnCt7C,KAAKw7C,SAAU,EACfx7C,KAAKoyB,SAAStsB,QAAQ5G,EAC1B,ECjBJ,MAAMu8C,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQn7C,OACrBq7C,GAAY58C,GAA2B,iBAAVA,EAAqBiJ,WAAWjJ,GAASA,EACtE68C,GAAQ78C,GAA2B,iBAAVA,GAAsBmL,GAAGrL,KAAKE,GAwC7D,SAAS88C,GAAUzwC,EAAQ0wC,GACvB,YAA8B,IAAvB1wC,EAAO0wC,GACR1wC,EAAO0wC,GACP1wC,EAAO+b,YACjB,CAwBA,MAAM40B,GAAgCC,GAAS,EAAG,GAAKj5C,GACjDk5C,GAAiCD,GAAS,GAAK,IAAM58C,GAC3D,SAAS48C,GAASx9C,EAAKC,EAAK4D,GACxB,OAAQxG,GAEAA,EAAI2C,EACG,EACP3C,EAAI4C,EACG,EACJ4D,EAAO3C,EAASlB,EAAKC,EAAK5C,GAEzC,CChFA,SAASqgD,GAAalZ,EAAMmZ,GACxBnZ,EAAKxkC,IAAM29C,EAAW39C,IACtBwkC,EAAKvkC,IAAM09C,EAAW19C,GAC1B,CAMA,SAAS29C,GAAYlZ,EAAKmZ,GACtBH,GAAahZ,EAAIthC,EAAGy6C,EAAUz6C,GAC9Bs6C,GAAahZ,EAAI9nB,EAAGihC,EAAUjhC,EAClC,CAMA,SAASkhC,GAAkBh4C,EAAOi4C,GAC9Bj4C,EAAMu+B,UAAY0Z,EAAY1Z,UAC9Bv+B,EAAM6D,MAAQo0C,EAAYp0C,MAC1B7D,EAAMq+B,YAAc4Z,EAAY5Z,YAChCr+B,EAAMwJ,OAASyuC,EAAYzuC,MAC/B,CCtBA,SAAS0uC,GAAiB9Z,EAAOG,EAAW16B,EAAOw6B,EAAaG,GAM5D,OAJAJ,EAAQD,GADRC,GAASG,EACiB,EAAI16B,EAAOw6B,QACpB,IAAbG,IACAJ,EAAQD,GAAWC,EAAO,EAAII,EAAUH,IAErCD,CACX,CAsBA,SAAS+Z,GAAqBzZ,EAAM0Z,GAAa5gD,EAAK6gD,EAAUC,GAAY9uC,EAAQ+uC,IAlBpF,SAAyB7Z,EAAMH,EAAY,EAAG16B,EAAQ,EAAG2F,EAAS,GAAKg1B,EAAUqZ,EAAanZ,EAAM6Z,EAAa7Z,GACzG/4B,GAAQpL,KAAKgkC,KACbA,EAAY76B,WAAW66B,GAEvBA,EADyBr2B,GAAUqwC,EAAWr+C,IAAKq+C,EAAWp+C,IAAKokC,EAAY,KAChDga,EAAWr+C,KAE9C,GAAyB,iBAAdqkC,EACP,OACJ,IAAIF,EAAcn2B,GAAU2vC,EAAW39C,IAAK29C,EAAW19C,IAAKqP,GACxDk1B,IAASmZ,IACTxZ,GAAeE,GACnBG,EAAKxkC,IAAMg+C,GAAiBxZ,EAAKxkC,IAAKqkC,EAAW16B,EAAOw6B,EAAaG,GACrEE,EAAKvkC,IAAM+9C,GAAiBxZ,EAAKvkC,IAAKokC,EAAW16B,EAAOw6B,EAAaG,EACzE,CAMIga,CAAgB9Z,EAAM0Z,EAAW5gD,GAAM4gD,EAAWC,GAAWD,EAAWE,GAAYF,EAAWv0C,MAAO2F,EAAQ+uC,EAClH,CAIA,MAAME,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASC,GAAoB/Z,EAAKwZ,EAAYL,EAAWa,GACrDT,GAAqBvZ,EAAIthC,EAAG86C,EAAYK,GAAOV,EAAYA,EAAUz6C,OAAI,EAAWs7C,EAAYA,EAAUt7C,OAAI,GAC9G66C,GAAqBvZ,EAAI9nB,EAAGshC,EAAYM,GAAOX,EAAYA,EAAUjhC,OAAI,EAAW8hC,EAAYA,EAAU9hC,OAAI,EAClH,CChDA,SAAS+hC,GAAgB74C,GACrB,OAA2B,IAApBA,EAAMu+B,WAAmC,IAAhBv+B,EAAM6D,KAC1C,CACA,SAASi1C,GAAY94C,GACjB,OAAO64C,GAAgB74C,EAAM1C,IAAMu7C,GAAgB74C,EAAM8W,EAC7D,CACA,SAASiiC,GAAWjhD,EAAGE,GACnB,OAAOF,EAAEoC,MAAQlC,EAAEkC,KAAOpC,EAAEqC,MAAQnC,EAAEmC,GAC1C,CAIA,SAAS6+C,GAAkBlhD,EAAGE,GAC1B,OAAQ2F,KAAKqG,MAAMlM,EAAEoC,OAASyD,KAAKqG,MAAMhM,EAAEkC,MACvCyD,KAAKqG,MAAMlM,EAAEqC,OAASwD,KAAKqG,MAAMhM,EAAEmC,IAC3C,CACA,SAAS8+C,GAAiBnhD,EAAGE,GACzB,OAAOghD,GAAkBlhD,EAAEwF,EAAGtF,EAAEsF,IAAM07C,GAAkBlhD,EAAEgf,EAAG9e,EAAE8e,EACnE,CACA,SAASoiC,GAAYta,GACjB,OAAOuN,GAAWvN,EAAIthC,GAAK6uC,GAAWvN,EAAI9nB,EAC9C,CACA,SAASqiC,GAAgBrhD,EAAGE,GACxB,OAAQF,EAAEymC,YAAcvmC,EAAEumC,WACtBzmC,EAAE+L,QAAU7L,EAAE6L,OACd/L,EAAEumC,cAAgBrmC,EAAEqmC,WAC5B,CC1BA,MAAM+a,GACF,WAAA39C,GACIC,KAAK66C,QAAU,EACnB,CACA,GAAA36C,CAAI2vC,GACA9xC,EAAciC,KAAK66C,QAAShL,GAC5BA,EAAK5K,gBACT,CACA,MAAAgB,CAAO4J,GAKH,GAJAzxC,EAAW4B,KAAK66C,QAAShL,GACrBA,IAAS7vC,KAAK29C,WACd39C,KAAK29C,cAAW,GAEhB9N,IAAS7vC,KAAK49C,KAAM,CACpB,MAAMD,EAAW39C,KAAK66C,QAAQ76C,KAAK66C,QAAQv6C,OAAS,GAChDq9C,GACA39C,KAAKy6C,QAAQkD,EAErB,CACJ,CACA,QAAAjD,CAAS7K,GACL,MAAMgO,EAAc79C,KAAK66C,QAAQiD,UAAWC,GAAWlO,IAASkO,GAChE,GAAoB,IAAhBF,EACA,OAAO,EAIX,IAAIF,EACJ,IAAA,IAASp9C,EAAIs9C,EAAat9C,GAAK,EAAGA,IAAK,CACnC,MAAMw9C,EAAS/9C,KAAK66C,QAAQt6C,GAC5B,IAAyB,IAArBw9C,EAAOrsB,UAAqB,CAC5BisB,EAAWI,EACX,KACJ,CACJ,CACA,QAAIJ,IACA39C,KAAKy6C,QAAQkD,IACN,EAKf,CACA,OAAAlD,CAAQ5K,EAAMmO,GACV,MAAML,EAAW39C,KAAK49C,KACtB,GAAI/N,IAAS8N,IAEb39C,KAAK29C,SAAWA,EAChB39C,KAAK49C,KAAO/N,EACZA,EAAKoO,OACDN,GAAU,CACVA,EAASvf,UAAYuf,EAAS1Y,iBAC9B4K,EAAK5K,iBACL4K,EAAKqO,WAAaP,EACdK,IACAnO,EAAKqO,WAAWC,iBAAkB,GAElCR,EAASS,WACTvO,EAAKuO,SAAWT,EAASS,SACzBvO,EAAKuO,SAAS7lB,aACVolB,EAASU,iBAAmBV,EAASplB,cAEzCsX,EAAKh+B,MAAQg+B,EAAKh+B,KAAKysC,aACvBzO,EAAK0O,eAAgB,GAEzB,MAAMxe,UAAEA,GAAc8P,EAAK3+B,SACT,IAAd6uB,GACA4d,EAASa,MAcjB,CACJ,CACA,qBAAAC,GACIz+C,KAAK66C,QAAQ/0C,QAAS+pC,IAClB,MAAM3+B,QAAEA,EAAAwtC,aAASA,GAAiB7O,EAClC3+B,EAAQqiB,gBAAkBriB,EAAQqiB,iBAC9BmrB,GACAA,EAAaxtC,QAAQqiB,gBACjBmrB,EAAaxtC,QAAQqiB,kBAGrC,CACA,cAAA0R,GACIjlC,KAAK66C,QAAQ/0C,QAAS+pC,IAClBA,EAAKzR,UAAYyR,EAAK5K,gBAAe,IAE7C,CAKA,kBAAA0Z,GACQ3+C,KAAK49C,MAAQ59C,KAAK49C,KAAKQ,WACvBp+C,KAAK49C,KAAKQ,cAAW,EAE7B,EClFJ,MAAMQ,GAAgB,CAAC,GAAI,IAAK,IAAK,KAMrC,IAAIrsB,GAAK,EACT,SAASssB,GAAyB/iD,EAAK4iB,EAAetT,EAAQ0zC,GAC1D,MAAMvmB,aAAEA,GAAiB7Z,EAErB6Z,EAAaz8B,KACbsP,EAAOtP,GAAOy8B,EAAaz8B,GAC3B4iB,EAAcyoB,eAAerrC,EAAK,GAC9BgjD,IACAA,EAAsBhjD,GAAO,GAGzC,CACA,SAASijD,GAAuCC,GAE5C,GADAA,EAAeC,2BAA4B,EACvCD,EAAentC,OAASmtC,EACxB,OACJ,MAAMtgC,cAAEA,GAAkBsgC,EAAe9tC,QACzC,IAAKwN,EACD,OACJ,MAAMstB,EAAW1B,GAAqB5rB,GACtC,GAAIhhB,OAAO2iC,4BAA4B2L,EAAU,aAAc,CAC3D,MAAQpV,OAAAA,EAAAA,SAAQuB,GAAa6mB,EAAe9tC,QAC5CxT,OAAOwhD,+BAA+BlT,EAAU,YAAaplC,IAASgwB,GAAUuB,GACpF,CACA,MAAM9J,OAAEA,GAAW2wB,EACf3wB,IAAWA,EAAO4wB,2BAClBF,GAAuC1wB,EAE/C,CACA,SAAS2R,IAAqBmf,qBAAEA,EAAAC,cAAsBA,gBAAeC,EAAAC,kBAAeA,EAAAC,eAAmBA,IACnG,OAAO,MACH,WAAAx/C,CAAYw4B,EAAe,CAAA,EAAIlK,GAAS,MAAA+wB,OAAA,EAAAA,MAIpCp/C,KAAKuyB,GAAKA,KAIVvyB,KAAKw/C,YAAc,EACnBx/C,KAAKy/C,kBAAoB,EAOzBz/C,KAAKoyB,aAAevtB,IAKpB7E,KAAKkR,QAAU,CAAA,EAMflR,KAAK0/C,iBAAkB,EACvB1/C,KAAKm1C,oBAAqB,EAO1Bn1C,KAAKu+C,eAAgB,EAKrBv+C,KAAK2/C,mBAAoB,EAKzB3/C,KAAK4/C,yBAA0B,EAK/B5/C,KAAKumC,kBAAmB,EAIxBvmC,KAAK6/C,uBAAwB,EAC7B7/C,KAAK8/C,uBAAwB,EAK7B9/C,KAAKs+C,YAAa,EAIlBt+C,KAAK+/C,OAAQ,EAKb//C,KAAKggD,YAAa,EAIlBhgD,KAAKigD,sBAAuB,EAO5BjgD,KAAKi/C,2BAA4B,EASjCj/C,KAAKq5C,UAAY,CAAEz3C,EAAG,EAAGwZ,EAAG,GAI5Bpb,KAAKkgD,kBAAoB1hC,IACzBxe,KAAKmgD,iBAAkB,EAEvBngD,KAAKogD,iBAAkB,EACvBpgD,KAAKqgD,eAAiB,IAAMrgD,KAAKoG,SACjCpG,KAAKsgD,2BAA4B,EACjCtgD,KAAKugD,kBAAoB,KACjBvgD,KAAKs+C,aACLt+C,KAAKs+C,YAAa,EAClBt+C,KAAKwgD,sBAQbxgD,KAAKygD,iBAAmB,KACpBzgD,KAAKsgD,2BAA4B,EAWjCtgD,KAAK0gD,MAAM56C,QAAQ66C,IACnB3gD,KAAK0gD,MAAM56C,QAAQ86C,IACnB5gD,KAAK0gD,MAAM56C,QAAQ+6C,IACnB7gD,KAAK0gD,MAAM56C,QAAQg7C,KAQvB9gD,KAAK+gD,yBAA2B,EAChC/gD,KAAKghD,cAAe,EACpBhhD,KAAKihD,WAAY,EACjBjhD,KAAKkhD,kBAAoB,EAKzBlhD,KAAKmhD,gBAAkB3iC,IACvBxe,KAAKu4B,aAAeA,EACpBv4B,KAAK6R,KAAOwc,EAASA,EAAOxc,MAAQwc,EAASruB,KAC7CA,KAAKohD,KAAO/yB,EAAS,IAAIA,EAAO+yB,KAAM/yB,GAAU,GAChDruB,KAAKquB,OAASA,EACdruB,KAAKqlB,MAAQgJ,EAASA,EAAOhJ,MAAQ,EAAI,EACzC,IAAA,IAAS9kB,EAAI,EAAGA,EAAIP,KAAKohD,KAAK9gD,OAAQC,IAClCP,KAAKohD,KAAK7gD,GAAG0/C,sBAAuB,EAEpCjgD,KAAK6R,OAAS7R,OACdA,KAAK0gD,MAAQ,IAAInF,GACzB,CACA,gBAAAjrB,CAAiBlU,EAAMjc,GAInB,OAHKH,KAAKkgD,cAAc96C,IAAIgX,IACxBpc,KAAKkgD,cAAch5C,IAAIkV,EAAM,IAAItc,GAE9BE,KAAKkgD,cAActhC,IAAIxC,GAAMlc,IAAIC,EAC5C,CACA,eAAAkhD,CAAgBjlC,KAASssB,GACrB,MAAM4Y,EAAsBthD,KAAKkgD,cAActhC,IAAIxC,GACnDklC,GAAuBA,EAAoBlhD,UAAUsoC,EACzD,CACA,YAAA6Y,CAAanlC,GACT,OAAOpc,KAAKkgD,cAAc96C,IAAIgX,EAClC,CAIA,KAAAkiB,CAAMF,GACF,GAAIp+B,KAAKo+B,SACL,OCpOhB,IAAyB9f,EDqObte,KAAK+/C,MAAQjvB,GAAasN,MCpO3BtN,GADcxS,EDqO2C8f,ICpOZ,QAApB9f,EAAQqS,SDqOhC3wB,KAAKo+B,SAAWA,EAChB,MAAMjG,SAAEA,EAAUvB,OAAAA,EAAAA,cAAQlY,GAAkB1e,KAAKkR,QASjD,GARIwN,IAAkBA,EAAc1hB,SAChC0hB,EAAc4f,MAAMF,GAExBp+B,KAAK6R,KAAK6uC,MAAMxgD,IAAIF,MACpBA,KAAKquB,QAAUruB,KAAKquB,OAAO+D,SAASlyB,IAAIF,MACpCA,KAAK6R,KAAKsuC,kBAAoBvpB,GAAUuB,KACxCn4B,KAAKu+C,eAAgB,GAErBY,EAAsB,CACtB,IAAIqC,EACAC,EAAa,EACjB,MAAMC,EAAsB,IAAO1hD,KAAK6R,KAAKiuC,uBAAwB,EAErEl5C,EAAMX,KAAK,KACPw7C,EAAa/jD,OAAO+jD,aAExBtC,EAAqB/gB,EAAU,KAC3B,MAAMujB,EAAgBjkD,OAAO+jD,WACzBE,IAAkBF,IAEtBA,EAAaE,EACb3hD,KAAK6R,KAAKiuC,uBAAwB,EAClC0B,GAAeA,IACfA,EE/PpB,SAAetiD,EAAU0iD,GACrB,MAAM/yC,EAAQ5H,EAAKN,MACbk7C,EAAe,EAAGt9C,gBACpB,MAAMiV,EAAUjV,EAAYsK,EACxB2K,GAAWooC,IACX/6C,EAAYg7C,GACZ3iD,EAASsa,EAAUooC,KAI3B,OADAh7C,EAAMZ,MAAM67C,GAAc,GACnB,IAAMh7C,EAAYg7C,EAC7B,CFoPkCzoC,CAAMsoC,EAAqB,KACrC7I,GAAsBC,yBACtBD,GAAsBC,wBAAyB,EAC/C94C,KAAK0gD,MAAM56C,QAAQg8C,OAG/B,CACI3pB,GACAn4B,KAAK6R,KAAKkwC,mBAAmB5pB,EAAUn4B,OAGd,IAAzBA,KAAKkR,QAAQwP,SACbhC,IACCyZ,GAAYvB,IACb52B,KAAKswB,iBAAiB,YAAa,EAAGhsB,QAAOq0C,mBAAkBqJ,2BAA0BprB,OAAQqrB,MAC7F,GAAIjiD,KAAKkiD,yBAGL,OAFAliD,KAAK+N,YAAS,OACd/N,KAAKmiD,oBAAiB,GAI1B,MAAMC,EAAmBpiD,KAAKkR,QAAQ4F,YAClC4H,EAAcqpB,wBACdsa,IACEC,uBAAEA,EAAAC,0BAAwBA,GAA+B7jC,EAAcmG,WAKvE29B,GAAoBxiD,KAAKyiD,eAC1BlF,GAAiBv9C,KAAKyiD,aAAcR,GAYnCS,GAAgC/J,GAAoBqJ,EAC1D,GAAIhiD,KAAKkR,QAAQuuB,YACbz/B,KAAKk+C,YACLwE,GACC/J,IACI6J,IAAqBxiD,KAAK86C,kBAAoB,CAC/C96C,KAAKk+C,aACLl+C,KAAK0+C,aAAe1+C,KAAKk+C,WACzBl+C,KAAK0+C,aAAaA,kBAAe,GAErC,MAAMiE,EAAmB,IAClB58B,GAAmBq8B,EAAkB,UACxCjoC,OAAQmoC,EACRjoC,WAAYkoC,IAEZ7jC,EAAc+lB,oBACdzkC,KAAKkR,QAAQuuB,cACbkjB,EAAiBvpC,MAAQ,EACzBupC,EAAiB9lD,MAAO,GAE5BmD,KAAK0sB,eAAei2B,GAKpB3iD,KAAK4iD,mBAAmBt+C,EAAOo+C,EACnC,MAOS/J,GACDmJ,GAAgB9hD,MAEhBA,KAAK+6C,UAAY/6C,KAAKkR,QAAQqiB,gBAC9BvzB,KAAKkR,QAAQqiB,iBAGrBvzB,KAAKyiD,aAAeR,GAGhC,CACA,OAAA1jB,GACIv+B,KAAKkR,QAAQinB,UAAYn4B,KAAKw6C,aAC9Bx6C,KAAK6R,KAAK6uC,MAAMza,OAAOjmC,MACvB,MAAM26C,EAAQ36C,KAAK46C,WACnBD,GAASA,EAAM1U,OAAOjmC,MACtBA,KAAKquB,QAAUruB,KAAKquB,OAAO+D,SAASzsB,OAAO3F,MAC3CA,KAAKo+B,cAAW,EAChBp+B,KAAKkgD,cAAcz/C,QACnBoG,EAAY7G,KAAKygD,iBACrB,CAEA,WAAAoC,GACI7iD,KAAK6/C,uBAAwB,CACjC,CACA,aAAAiD,GACI9iD,KAAK6/C,uBAAwB,CACjC,CACA,eAAAkD,GACI,OAAO/iD,KAAK6/C,uBAAyB7/C,KAAK8/C,qBAC9C,CACA,sBAAAoC,GACI,OAAQliD,KAAKm1C,oBACRn1C,KAAKquB,QAAUruB,KAAKquB,OAAO6zB,2BAC5B,CACR,CAEA,WAAAc,GACQhjD,KAAK+iD,oBAET/iD,KAAKs+C,YAAa,EAClBt+C,KAAK0gD,OAAS1gD,KAAK0gD,MAAM56C,QAAQm9C,IACjCjjD,KAAKw/C,cACT,CACA,oBAAA0D,GACI,MAAMxkC,cAAEA,GAAkB1e,KAAKkR,QAC/B,OAAOwN,GAAiBA,EAAcmG,WAAWD,iBACrD,CACA,UAAA41B,CAAW2I,GAAwB,GAE/B,GADAnjD,KAAK6R,KAAKsuC,iBAAkB,EACxBngD,KAAK6R,KAAKkxC,kBAEV,YADA/iD,KAAKkR,QAAQqiB,gBAAkBvzB,KAAKkR,QAAQqiB,kBAoBhD,GALI71B,OAAOwhD,iCACNl/C,KAAKi/C,2BACNF,GAAuC/+C,OAE1CA,KAAK6R,KAAKysC,YAAct+C,KAAK6R,KAAKmxC,cAC/BhjD,KAAKu+C,cACL,OACJv+C,KAAKu+C,eAAgB,EACrB,IAAA,IAASh+C,EAAI,EAAGA,EAAIP,KAAKohD,KAAK9gD,OAAQC,IAAK,CACvC,MAAMsvC,EAAO7vC,KAAKohD,KAAK7gD,GACvBsvC,EAAKoQ,sBAAuB,EAC5BpQ,EAAKsI,aAAa,YACdtI,EAAK3+B,QAAQuuB,YACboQ,EAAK2K,YAAW,EAExB,CACA,MAAMriB,SAAEA,EAAUvB,OAAAA,GAAW52B,KAAKkR,QAClC,QAAiB,IAAbinB,IAA2BvB,EAC3B,OACJ,MAAMhS,EAAoB5kB,KAAKkjD,uBAC/BljD,KAAKojD,2BAA6Bx+B,EAC5BA,EAAkB5kB,KAAKu4B,aAAc,SACrC,EACNv4B,KAAKqjD,iBACLF,GAAyBnjD,KAAKqhD,gBAAgB,aAClD,CACA,MAAAj7C,GACIpG,KAAKogD,iBAAkB,EAKvB,GAJyBpgD,KAAK+iD,kBAQ1B,OAHA/iD,KAAK8iD,gBACL9iD,KAAKwgD,yBACLxgD,KAAK0gD,MAAM56C,QAAQw9C,IAMvB,GAAItjD,KAAKw/C,aAAex/C,KAAKy/C,kBAEzB,YADAz/C,KAAK0gD,MAAM56C,QAAQy9C,IAGvBvjD,KAAKy/C,kBAAoBz/C,KAAKw/C,YACzBx/C,KAAKs+C,YAINt+C,KAAKs+C,YAAa,EAIlBt+C,KAAK0gD,MAAM56C,QAAQ09C,IAKnBxjD,KAAK0gD,MAAM56C,QAAQsyC,IAKnBp4C,KAAK0gD,MAAM56C,QAAQ29C,KAjBnBzjD,KAAK0gD,MAAM56C,QAAQy9C,IAmBvBvjD,KAAKwgD,oBAML,MAAM75C,EAAMM,EAAKN,MACjBd,EAAUvB,MAAQ/F,EAAM,EAAG,IAAO,GAAIoI,EAAMd,EAAUtB,WACtDsB,EAAUtB,UAAYoC,EACtBd,EAAUrB,cAAe,EACzBsC,EAAWV,OAAOR,QAAQC,GAC1BiB,EAAWT,UAAUT,QAAQC,GAC7BiB,EAAWR,OAAOV,QAAQC,GAC1BA,EAAUrB,cAAe,CAC7B,CACA,SAAA81C,GACSt6C,KAAKogD,kBACNpgD,KAAKogD,iBAAkB,EACvBnzB,GAAUhnB,KAAKjG,KAAKqgD,gBAE5B,CACA,iBAAAG,GACIxgD,KAAK0gD,MAAM56C,QAAQ49C,IACnB1jD,KAAKmhD,YAAYr7C,QAAQ69C,GAC7B,CACA,wBAAAC,GACS5jD,KAAKsgD,4BACNtgD,KAAKsgD,2BAA4B,EACjC15C,EAAMP,UAAUrG,KAAKygD,kBAAkB,GAAO,GAEtD,CACA,yBAAAvF,GAMIt0C,EAAML,WAAW,KACTvG,KAAKu+C,cACLv+C,KAAK6R,KAAKyoC,YAGVt6C,KAAK6R,KAAK0uC,qBAGtB,CAIA,cAAA8C,IACQrjD,KAAKo+C,UAAap+C,KAAKo+B,WAE3Bp+B,KAAKo+C,SAAWp+C,KAAKq2C,WACjBr2C,KAAKo+C,UACJ3N,GAAWzwC,KAAKo+C,SAASyF,YAAYjiD,IACrC6uC,GAAWzwC,KAAKo+C,SAASyF,YAAYzoC,KACtCpb,KAAKo+C,cAAW,GAExB,CACA,YAAAhG,GACI,IAAKp4C,KAAKo+B,SACN,OAEJ,GADAp+B,KAAKm4C,iBACCn4C,KAAKkR,QAAQ2uB,qBAAuB7/B,KAAK+6C,UAC1C/6C,KAAKu+C,eACN,OASJ,GAAIv+C,KAAKk+C,aAAel+C,KAAKk+C,WAAW9f,SACpC,IAAA,IAAS79B,EAAI,EAAGA,EAAIP,KAAKohD,KAAK9gD,OAAQC,IAAK,CAC1BP,KAAKohD,KAAK7gD,GAClB43C,cACT,CAEJ,MAAM2L,EAAa9jD,KAAK42B,OACxB52B,KAAK42B,OAAS52B,KAAKq2C,SAAQ,GAC3Br2C,KAAK+jD,gBzD3hBC,CACdniD,EAFe,CAASpD,IAAK,EAAGC,IAAK,GAGrC2c,EAHe,CAAS5c,IAAK,EAAGC,IAAK,IyD6hB7BuB,KAAKu+C,eAAgB,EACrBv+C,KAAKs5C,qBAAkB,EACvBt5C,KAAKqhD,gBAAgB,UAAWrhD,KAAK42B,OAAO0e,WAC5C,MAAM52B,cAAEA,GAAkB1e,KAAKkR,QAC/BwN,GACIA,EAActe,OAAO,gBAAiBJ,KAAK42B,OAAO0e,UAAWwO,EAAaA,EAAWxO,eAAY,EACzG,CACA,YAAA6C,CAAa6L,EAAQ,WACjB,IAAI5lC,EAAmBzV,QAAQ3I,KAAKkR,QAAQsuB,cAAgBx/B,KAAKo+B,UAMjE,GALIp+B,KAAKi3C,QACLj3C,KAAKi3C,OAAOuI,cAAgBx/C,KAAK6R,KAAK2tC,aACtCx/C,KAAKi3C,OAAO+M,QAAUA,IACtB5lC,GAAmB,GAEnBA,GAAoBpe,KAAKo+B,SAAU,CACnC,MAAM6lB,EAAS3E,EAAkBt/C,KAAKo+B,UACtCp+B,KAAKi3C,OAAS,CACVuI,YAAax/C,KAAK6R,KAAK2tC,YACvBwE,QACAC,SACA/uC,OAAQmqC,EAAcr/C,KAAKo+B,UAC3B8lB,QAASlkD,KAAKi3C,OAASj3C,KAAKi3C,OAAOgN,OAASA,EAEpD,CACJ,CACA,cAAA1E,GACI,IAAKA,EACD,OACJ,MAAM4E,EAAmBnkD,KAAKu+C,eAC1Bv+C,KAAKigD,sBACLjgD,KAAKkR,QAAQ2uB,oBACXukB,EAAgBpkD,KAAKs5C,kBAAoB8D,GAAYp9C,KAAKs5C,iBAC1D10B,EAAoB5kB,KAAKkjD,uBACzBmB,EAAyBz/B,EACzBA,EAAkB5kB,KAAKu4B,aAAc,SACrC,EACA+rB,EAA8BD,IAA2BrkD,KAAKojD,2BAChEe,GACAnkD,KAAKo+B,WACJgmB,GACG1rB,GAAa14B,KAAKu4B,eAClB+rB,KACJ/E,EAAev/C,KAAKo+B,SAAUimB,GAC9BrkD,KAAKigD,sBAAuB,EAC5BjgD,KAAKilC,iBAEb,CACA,OAAAoR,CAAQkO,GAAkB,GACtB,MAAMC,EAAUxkD,KAAKk3C,iBACrB,IAAI5B,EAAYt1C,KAAKykD,oBAAoBD,GAs+BrD,IAAkBthB,EA59BN,OAJIqhB,IACAjP,EAAYt1C,KAAKukD,gBAAgBjP,IAg+B7CoP,IADcxhB,EA79BGoS,GA89BH1zC,GACd8iD,GAAUxhB,EAAI9nB,GA99BC,CACHokC,YAAax/C,KAAK6R,KAAK2tC,YACvBqE,YAAaW,EACblP,YACA/c,aAAc,CAAA,EACd3sB,OAAQ5L,KAAKuyB,GAErB,CACA,cAAA2kB,SACI,MAAMx4B,cAAEA,GAAkB1e,KAAKkR,QAC/B,IAAKwN,EACD,MzDlmBE,CACd9c,EAFe,CAASpD,IAAK,EAAGC,IAAK,GAGrC2c,EAHe,CAAS5c,IAAK,EAAGC,IAAK,IyDomB7B,MAAMykC,EAAMxkB,EAAc2L,qBAE1B,MADwB,OAAAne,OAAK+qC,aAAL,EAAA/qC,EAAag4C,UAAWlkD,KAAKohD,KAAKhwC,KAAKuzC,KACzC,CAElB,MAAM1N,OAAEA,GAAWj3C,KAAK6R,KACpBolC,IACA5T,GAAcH,EAAIthC,EAAGq1C,EAAO/hC,OAAOtT,GACnCyhC,GAAcH,EAAI9nB,EAAG67B,EAAO/hC,OAAOkG,GAE3C,CACA,OAAO8nB,CACX,CACA,mBAAAuhB,CAAoBvhB,SAChB,MAAM0hB,EzDhnBA,CACdhjD,EAFe,CAASpD,IAAK,EAAGC,IAAK,GAGrC2c,EAHe,CAAS5c,IAAK,EAAGC,IAAK,IyDmnB7B,GADA29C,GAAYwI,EAAkB1hB,GAC1B,OAAAh3B,EAAAlM,KAAKi3C,aAAL,EAAA/qC,EAAag4C,QACb,OAAOU,EAMX,IAAA,IAASrkD,EAAI,EAAGA,EAAIP,KAAKohD,KAAK9gD,OAAQC,IAAK,CACvC,MAAMsvC,EAAO7vC,KAAKohD,KAAK7gD,IACjB02C,OAAEA,EAAA/lC,QAAQA,GAAY2+B,EACxBA,IAAS7vC,KAAK6R,MAAQolC,GAAU/lC,EAAQsuB,eAKpCyX,EAAOiN,SACP9H,GAAYwI,EAAkB1hB,GAElCG,GAAcuhB,EAAiBhjD,EAAGq1C,EAAO/hC,OAAOtT,GAChDyhC,GAAcuhB,EAAiBxpC,EAAG67B,EAAO/hC,OAAOkG,GAExD,CACA,OAAOwpC,CACX,CACA,cAAAC,CAAe3hB,EAAK4hB,GAAgB,GAChC,MAAMC,EzD3oBA,CACdnjD,EAFe,CAASpD,IAAK,EAAGC,IAAK,GAGrC2c,EAHe,CAAS5c,IAAK,EAAGC,IAAK,IyD6oB7B29C,GAAY2I,EAAgB7hB,GAC5B,IAAA,IAAS3iC,EAAI,EAAGA,EAAIP,KAAKohD,KAAK9gD,OAAQC,IAAK,CACvC,MAAMsvC,EAAO7vC,KAAKohD,KAAK7gD,IAClBukD,GACDjV,EAAK3+B,QAAQsuB,cACbqQ,EAAKoH,QACLpH,IAASA,EAAKh+B,MACdmpB,GAAa+pB,EAAgB,CACzBnjD,GAAIiuC,EAAKoH,OAAO/hC,OAAOtT,EACvBwZ,GAAIy0B,EAAKoH,OAAO/hC,OAAOkG,IAG1Bsd,GAAamX,EAAKtX,eAEvByC,GAAa+pB,EAAgBlV,EAAKtX,aACtC,CAIA,OAHIG,GAAa14B,KAAKu4B,eAClByC,GAAa+pB,EAAgB/kD,KAAKu4B,cAE/BwsB,CACX,CACA,eAAAR,CAAgBrhB,GACZ,MAAM8hB,EzDlqBA,CACdpjD,EAFe,CAASpD,IAAK,EAAGC,IAAK,GAGrC2c,EAHe,CAAS5c,IAAK,EAAGC,IAAK,IyDoqB7B29C,GAAY4I,EAAqB9hB,GACjC,IAAA,IAAS3iC,EAAI,EAAGA,EAAIP,KAAKohD,KAAK9gD,OAAQC,IAAK,CACvC,MAAMsvC,EAAO7vC,KAAKohD,KAAK7gD,GACvB,IAAKsvC,EAAKzR,SACN,SACJ,IAAK1F,GAAamX,EAAKtX,cACnB,SACJ+J,GAASuN,EAAKtX,eAAiBsX,EAAKwT,iBACpC,MAAMnG,EAAYnZ,KAElBqY,GAAYc,EADIrN,EAAKqH,kBAErB+F,GAAoB+H,EAAqBnV,EAAKtX,aAAcsX,EAAKuO,SAAWvO,EAAKuO,SAAS9I,eAAY,EAAW4H,EACrH,CAIA,OAHIxkB,GAAa14B,KAAKu4B,eAClB0kB,GAAoB+H,EAAqBhlD,KAAKu4B,cAE3CysB,CACX,CACA,cAAAC,CAAe3gD,GACXtE,KAAKklD,YAAc5gD,EACnBtE,KAAK6R,KAAK+xC,2BACV5jD,KAAK2/C,mBAAoB,CAC7B,CACA,UAAA/f,CAAW1uB,GACPlR,KAAKkR,QAAU,IACRlR,KAAKkR,WACLA,EACH6uB,eAAiC,IAAtB7uB,EAAQ6uB,WAA0B7uB,EAAQ6uB,UAE7D,CACA,iBAAAujB,GACItjD,KAAKi3C,YAAS,EACdj3C,KAAK42B,YAAS,EACd52B,KAAKo+C,cAAW,EAChBp+C,KAAKojD,gCAA6B,EAClCpjD,KAAKklD,iBAAc,EACnBllD,KAAK+N,YAAS,EACd/N,KAAKu+C,eAAgB,CACzB,CACA,kCAAA4G,GACSnlD,KAAKolD,gBAQNplD,KAAKolD,eAAerE,2BACpBl7C,EAAUtB,WACVvE,KAAKolD,eAAexE,oBAAmB,EAE/C,CACA,kBAAAA,CAAmByE,GAAqB,SAMpC,MAAMzH,EAAO59C,KAAKslD,UAClBtlD,KAAK2/C,oBAAsB3/C,KAAK2/C,kBAAoB/B,EAAK+B,mBACzD3/C,KAAKumC,mBAAqBvmC,KAAKumC,iBAAmBqX,EAAKrX,kBACvDvmC,KAAK4/C,0BAA4B5/C,KAAK4/C,wBAA0BhC,EAAKgC,yBACrE,MAAM2F,EAAW58C,QAAQ3I,KAAK0+C,eAAiB1+C,OAAS49C,EAWxD,KANkByH,GACbE,GAAYvlD,KAAK4/C,yBAClB5/C,KAAK2/C,oBACL,OAAAzzC,EAAAlM,KAAKquB,aAAL,EAAAniB,EAAayzC,oBACb3/C,KAAKwlD,gCACLxlD,KAAK6R,KAAKiuC,uBAEV,OACJ,MAAQlpB,OAAAA,EAAAA,SAAQuB,GAAan4B,KAAKkR,QAIlC,GAAKlR,KAAK42B,SAAYA,GAAUuB,GAAhC,CAQA,GANAn4B,KAAK+gD,yBAA2Bl7C,EAAUtB,WAMrCvE,KAAKklD,cAAgBllD,KAAKmiD,eAAgB,CAC3C,MAAMiD,EAAiBplD,KAAKylD,6BACxBL,GACAA,EAAexuB,QACY,IAA3B52B,KAAKkhD,mBACLlhD,KAAKolD,eAAiBA,EACtBplD,KAAKmlD,qCACLnlD,KAAKmiD,ezDlwBP,CACdvgD,EAFe,CAASpD,IAAK,EAAGC,IAAK,GAGrC2c,EAHe,CAAS5c,IAAK,EAAGC,IAAK,IyDowBrBuB,KAAK0lD,qBzDnwBP,CACd9jD,EAFe,CAASpD,IAAK,EAAGC,IAAK,GAGrC2c,EAHe,CAAS5c,IAAK,EAAGC,IAAK,IyDqwBrBsyC,GAAqB/wC,KAAK0lD,qBAAsB1lD,KAAK42B,OAAO0e,UAAW8P,EAAexuB,OAAO0e,WAC7F8G,GAAYp8C,KAAKmiD,eAAgBniD,KAAK0lD,uBAGtC1lD,KAAKolD,eAAiBplD,KAAKmiD,oBAAiB,CAEpD,CpB/uBZ,IAAyBp0C,EAAQ8iC,EAAUxiB,EoBovB/B,GAAKruB,KAAKmiD,gBAAmBniD,KAAKklD,YAyClC,GApCKllD,KAAK+N,SACN/N,KAAK+N,OzDrxBH,CACdnM,EAFe,CAASpD,IAAK,EAAGC,IAAK,GAGrC2c,EAHe,CAAS5c,IAAK,EAAGC,IAAK,IyDuxBzBuB,KAAK2lD,qBzDtxBH,CACd/jD,EAFe,CAASpD,IAAK,EAAGC,IAAK,GAGrC2c,EAHe,CAAS5c,IAAK,EAAGC,IAAK,KyD4xBzBuB,KAAKmiD,gBACLniD,KAAK0lD,sBACL1lD,KAAKolD,gBACLplD,KAAKolD,eAAer3C,QACpB/N,KAAKmlD,qCpBpwBIp3C,EoBqwBO/N,KAAK+N,OpBrwBJ8iC,EoBqwBY7wC,KAAKmiD,epBrwBP9zB,EoBqwBuBruB,KAAKolD,eAAer3C,OpBpwBlF6iC,GAAiB7iC,EAAOnM,EAAGivC,EAASjvC,EAAGysB,EAAOzsB,GAC9CgvC,GAAiB7iC,EAAOqN,EAAGy1B,EAASz1B,EAAGiT,EAAOjT,IoBwwB7Bpb,KAAKklD,aACNv8C,QAAQ3I,KAAK0+C,cAEb1+C,KAAK+N,OAAS/N,KAAK6kD,eAAe7kD,KAAK42B,OAAO0e,WAG9C8G,GAAYp8C,KAAK+N,OAAQ/N,KAAK42B,OAAO0e,WAEzCrS,GAAcjjC,KAAK+N,OAAQ/N,KAAKklD,cAMhC9I,GAAYp8C,KAAK+N,OAAQ/N,KAAK42B,OAAO0e,WAKrCt1C,KAAKwlD,+BAAgC,CACrCxlD,KAAKwlD,gCAAiC,EACtC,MAAMJ,EAAiBplD,KAAKylD,6BACxBL,GACAz8C,QAAQy8C,EAAe1G,gBACnB/1C,QAAQ3I,KAAK0+C,gBAChB0G,EAAel0C,QAAQsuB,cACxB4lB,EAAer3C,QACY,IAA3B/N,KAAKkhD,mBACLlhD,KAAKolD,eAAiBA,EACtBplD,KAAKmlD,qCACLnlD,KAAKmiD,ezDn0BP,CACdvgD,EAFe,CAASpD,IAAK,EAAGC,IAAK,GAGrC2c,EAHe,CAAS5c,IAAK,EAAGC,IAAK,IyDq0BrBuB,KAAK0lD,qBzDp0BP,CACd9jD,EAFe,CAASpD,IAAK,EAAGC,IAAK,GAGrC2c,EAHe,CAAS5c,IAAK,EAAGC,IAAK,IyDs0BrBsyC,GAAqB/wC,KAAK0lD,qBAAsB1lD,KAAK+N,OAAQq3C,EAAer3C,QAC5EquC,GAAYp8C,KAAKmiD,eAAgBniD,KAAK0lD,uBAGtC1lD,KAAKolD,eAAiBplD,KAAKmiD,oBAAiB,CAEpD,CAvFI,CA8FR,CACA,0BAAAsD,GACI,GAAKzlD,KAAKquB,SACNiU,GAAStiC,KAAKquB,OAAOkK,gBACrBgK,GAAeviC,KAAKquB,OAAOkK,cAG/B,OAAIv4B,KAAKquB,OAAO+a,eACLppC,KAAKquB,OAGLruB,KAAKquB,OAAOo3B,4BAE3B,CACA,YAAArc,GACI,OAAOzgC,SAAS3I,KAAKmiD,gBACjBniD,KAAKklD,aACLllD,KAAKkR,QAAQuuB,aACbz/B,KAAK42B,OACb,CACA,cAAAiqB,SACI,MAAMjD,EAAO59C,KAAKslD,UACZC,EAAW58C,QAAQ3I,KAAK0+C,eAAiB1+C,OAAS49C,EACxD,IAAIgI,GAAU,EAuBd,IAlBI5lD,KAAK2/C,oBAAqB,OAAAzzC,EAAAlM,KAAKquB,iBAAQsxB,sBACvCiG,GAAU,GAMVL,IACCvlD,KAAK4/C,yBAA2B5/C,KAAKumC,oBACtCqf,GAAU,GAMV5lD,KAAK+gD,2BAA6Bl7C,EAAUtB,YAC5CqhD,GAAU,GAEVA,EACA,OACJ,MAAQhvB,OAAAA,EAAAA,SAAQuB,GAAan4B,KAAKkR,QAWlC,GANAlR,KAAK0/C,gBAAkB/2C,QAAS3I,KAAKquB,QAAUruB,KAAKquB,OAAOqxB,iBACvD1/C,KAAK86C,kBACL96C,KAAK6lD,kBACJ7lD,KAAK0/C,kBACN1/C,KAAKklD,YAAcllD,KAAKmiD,oBAAiB,IAExCniD,KAAK42B,SAAYA,IAAUuB,EAC5B,OAKJikB,GAAYp8C,KAAK+jD,gBAAiB/jD,KAAK42B,OAAO0e,WAI9C,MAAMwQ,EAAiB9lD,KAAKq5C,UAAUz3C,EAChCmkD,EAAiB/lD,KAAKq5C,UAAUj+B,G3Dz3BlD,SAAyB8nB,EAAKmW,EAAW2M,EAAUC,GAAqB,GACpE,MAAMC,EAAaF,EAAS1lD,OAC5B,IAAK4lD,EACD,OAGJ,IAAIrW,EACAvrC,EAFJ+0C,EAAUz3C,EAAIy3C,EAAUj+B,EAAI,EAG5B,IAAA,IAAS7a,EAAI,EAAGA,EAAI2lD,EAAY3lD,IAAK,CACjCsvC,EAAOmW,EAASzlD,GAChB+D,EAAQurC,EAAKyJ,gBAKb,MAAM56B,cAAEA,GAAkBmxB,EAAK3+B,QAC3BwN,GACAA,EAAc5hB,MAAMmlB,OACkB,aAAtCvD,EAAc5hB,MAAMmlB,MAAMkkC,UAG1BF,GACApW,EAAK3+B,QAAQsuB,cACbqQ,EAAKoH,QACLpH,IAASA,EAAKh+B,MACdmpB,GAAakI,EAAK,CACdthC,GAAIiuC,EAAKoH,OAAO/hC,OAAOtT,EACvBwZ,GAAIy0B,EAAKoH,OAAO/hC,OAAOkG,IAG3B9W,IAEA+0C,EAAUz3C,GAAK0C,EAAM1C,EAAEuG,MACvBkxC,EAAUj+B,GAAK9W,EAAM8W,EAAEjT,MAEvB86B,GAAcC,EAAK5+B,IAEnB2hD,GAAsBvtB,GAAamX,EAAKtX,eACxCyC,GAAakI,EAAK2M,EAAKtX,cAE/B,CAKI8gB,EAAUz3C,EAAIwhC,IACdiW,EAAUz3C,EAAIuhC,KACdkW,EAAUz3C,EAAI,GAEdy3C,EAAUj+B,EAAIgoB,IACdiW,EAAUj+B,EAAI+nB,KACdkW,EAAUj+B,EAAI,EAEtB,C2Dy0BYgrC,CAAgBpmD,KAAK+jD,gBAAiB/jD,KAAKq5C,UAAWr5C,KAAKohD,KAAMmE,IAK7D3H,EAAKhnB,QACJgnB,EAAK7vC,QACgB,IAArB/N,KAAKq5C,UAAUz3C,GAAgC,IAArB5B,KAAKq5C,UAAUj+B,IAC1CwiC,EAAK7vC,OAAS6vC,EAAKhnB,OAAO0e,UAC1BsI,EAAK+H,qBzDt6BH,CACd/jD,EAFe,CAASpD,IAAK,EAAGC,IAAK,GAGrC2c,EAHe,CAAS5c,IAAK,EAAGC,IAAK,KyDy6B7B,MAAMsP,OAAEA,GAAW6vC,EACd7vC,GAYA/N,KAAKs5C,iBAAoBt5C,KAAKqmD,qBAI/B/J,GAAkBt8C,KAAKqmD,oBAAoBzkD,EAAG5B,KAAKs5C,gBAAgB13C,GACnE06C,GAAkBt8C,KAAKqmD,oBAAoBjrC,EAAGpb,KAAKs5C,gBAAgBl+B,IAJnEpb,KAAKsmD,yBAeT3V,GAAa3wC,KAAKs5C,gBAAiBt5C,KAAK+jD,gBAAiBh2C,EAAQ/N,KAAKu4B,cAClEv4B,KAAKq5C,UAAUz3C,IAAMkkD,GACrB9lD,KAAKq5C,UAAUj+B,IAAM2qC,GACpBtI,GAAgBz9C,KAAKs5C,gBAAgB13C,EAAG5B,KAAKqmD,oBAAoBzkD,IACjE67C,GAAgBz9C,KAAKs5C,gBAAgBl+B,EAAGpb,KAAKqmD,oBAAoBjrC,KAClEpb,KAAKghD,cAAe,EACpBhhD,KAAKilC,iBACLjlC,KAAKqhD,gBAAgB,mBAAoBtzC,KA7BrC/N,KAAKqmD,sBACLrmD,KAAKsmD,yBACLtmD,KAAKilC,iBAmCjB,CACA,IAAAuZ,GACIx+C,KAAKihD,WAAY,CAErB,CACA,IAAAhD,GACIj+C,KAAKihD,WAAY,CAErB,CACA,cAAAhc,CAAeshB,GAAY,SAEvB,GADA,OAAAr6C,EAAAlM,KAAKkR,QAAQwN,gBAAbxS,EAA4B+4B,iBACxBshB,EAAW,CACX,MAAM5L,EAAQ36C,KAAK46C,WACnBD,GAASA,EAAM1V,gBACnB,CACIjlC,KAAK0+C,eAAiB1+C,KAAK0+C,aAAatgB,WACxCp+B,KAAK0+C,kBAAe,EAE5B,CACA,sBAAA4H,GACItmD,KAAKqmD,oBzD7+BG,CAChBzkD,EAPoB,CACpBihC,UAAW,EACX16B,MAAO,EACP2F,OAAQ,EACR60B,YAAa,GAIbvnB,EARoB,CACpBynB,UAAW,EACX16B,MAAO,EACP2F,OAAQ,EACR60B,YAAa,IyDg/BL3iC,KAAKs5C,gBzD9+BG,CAChB13C,EAPoB,CACpBihC,UAAW,EACX16B,MAAO,EACP2F,OAAQ,EACR60B,YAAa,GAIbvnB,EARoB,CACpBynB,UAAW,EACX16B,MAAO,EACP2F,OAAQ,EACR60B,YAAa,IyDi/BL3iC,KAAKwmD,6BzD/+BG,CAChB5kD,EAPoB,CACpBihC,UAAW,EACX16B,MAAO,EACP2F,OAAQ,EACR60B,YAAa,GAIbvnB,EARoB,CACpBynB,UAAW,EACX16B,MAAO,EACP2F,OAAQ,EACR60B,YAAa,GyDk/BT,CACA,kBAAAigB,CAAmBt+C,EAAOo+C,GAA+B,GACrD,MAAMtE,EAAWp+C,KAAKo+C,SAChBqI,EAAuBrI,EAAWA,EAAS7lB,aAAe,CAAA,EAC1DmuB,EAAc,IAAK1mD,KAAKu4B,cACxB2sB,EzDr/BE,CAChBtjD,EAPoB,CACpBihC,UAAW,EACX16B,MAAO,EACP2F,OAAQ,EACR60B,YAAa,GAIbvnB,EARoB,CACpBynB,UAAW,EACX16B,MAAO,EACP2F,OAAQ,EACR60B,YAAa,IyDw/BA3iC,KAAKolD,gBACLplD,KAAKolD,eAAel0C,QAAQuuB,aAC7Bz/B,KAAKmiD,eAAiBniD,KAAK0lD,0BAAuB,GAEtD1lD,KAAKwlD,gCAAkC9C,EACvC,MAAMiE,EzDt/BA,CACd/kD,EAFe,CAASpD,IAAK,EAAGC,IAAK,GAGrC2c,EAHe,CAAS5c,IAAK,EAAGC,IAAK,IyD0/BvBmoD,GAFiBxI,EAAWA,EAASxyC,YAAS,MAC/B5L,KAAK42B,OAAS52B,KAAK42B,OAAOhrB,YAAS,GAElD+uC,EAAQ36C,KAAK46C,WACbiM,GAAgBlM,GAASA,EAAME,QAAQv6C,QAAU,EACjDwmD,EAAyBn+C,QAAQi+C,IAClCC,IAC0B,IAA3B7mD,KAAKkR,QAAQ6uB,YACZ//B,KAAKohD,KAAKhwC,KAAK21C,KAEpB,IAAIC,EADJhnD,KAAKkhD,kBAAoB,EAEzBlhD,KAAKinD,eAAkBpzC,IACnB,MAAMnU,EAAWmU,EAAS,IFngC1C,IAAmBzX,EAAGE,EEwhDNwP,EAAQnM,EAAMC,EAAI/D,EAphBlBqrD,GAAahC,EAAYtjD,EAAG0C,EAAM1C,EAAGlC,GACrCwnD,GAAahC,EAAY9pC,EAAG9W,EAAM8W,EAAG1b,GACrCM,KAAKilD,eAAeC,GAChBllD,KAAKmiD,gBACLniD,KAAK0lD,sBACL1lD,KAAK42B,QACL52B,KAAKolD,gBACLplD,KAAKolD,eAAexuB,SACpBma,GAAqB4V,EAAgB3mD,KAAK42B,OAAO0e,UAAWt1C,KAAKolD,eAAexuB,OAAO0e,WA4gB3FxpC,EA3gBW9L,KAAKmiD,eA2gBRxiD,EA3gBwBK,KAAK0lD,qBA2gBvB9lD,EA3gB6C+mD,EA2gBzC9qD,EA3gByD6D,EA4gBvFynD,GAAQr7C,EAAOlK,EAAGjC,EAAKiC,EAAGhC,EAAGgC,EAAG/F,GAChCsrD,GAAQr7C,EAAOsP,EAAGzb,EAAKyb,EAAGxb,EAAGwb,EAAGvf,GAxgBZmrD,IFlhCL5qD,EEmhCe4D,KAAKmiD,eFnhCjB7lD,EEmhCiC0qD,EFlhC5C3J,GAAWjhD,EAAEwF,EAAGtF,EAAEsF,IAAMy7C,GAAWjhD,EAAEgf,EAAG9e,EAAE8e,MEmhC7Bpb,KAAK2/C,mBAAoB,GAExBqH,IACDA,EzDvhCN,CACdplD,EAFe,CAASpD,IAAK,EAAGC,IAAK,GAGrC2c,EAHe,CAAS5c,IAAK,EAAGC,IAAK,KyDyhCrB29C,GAAY4K,EAAoBhnD,KAAKmiD,iBAErCyE,IACA5mD,KAAKq+C,gBAAkBqI,EL/hC3C,SAAmB34C,EAAQq5C,EAAQxJ,EAAMl+C,EAAUonD,EAAwBD,GACnEC,GACA/4C,EAAO4S,QAAUnU,GAAU,EAAGoxC,EAAKj9B,SAAW,EAAGo7B,GAAgBr8C,IACjEqO,EAAOs5C,YAAc76C,GAAU46C,EAAOzmC,SAAW,EAAG,EAAGs7B,GAAiBv8C,KAEnEmnD,IACL94C,EAAO4S,QAAUnU,GAAU46C,EAAOzmC,SAAW,EAAGi9B,EAAKj9B,SAAW,EAAGjhB,IAKvE,IAAA,IAASa,EAAI,EAAGA,EAAIm7C,GAAYn7C,IAAK,CACjC,MAAM+mD,EAAc,SAAS7L,GAAQl7C,WACrC,IAAIgnD,EAAe1L,GAAUuL,EAAQE,GACjCE,EAAa3L,GAAU+B,EAAM0J,QACZ,IAAjBC,QAA6C,IAAfC,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACA5L,GAAK2L,KAAkB3L,GAAK4L,IAE5Bz5C,EAAOu5C,GAAerlD,KAAKxD,IAAI+N,GAAUmvC,GAAS4L,GAAe5L,GAAS6L,GAAa9nD,GAAW,IAC9FuK,GAAQpL,KAAK2oD,IAAev9C,GAAQpL,KAAK0oD,MACzCx5C,EAAOu5C,IAAgB,MAI3Bv5C,EAAOu5C,GAAeE,EAE9B,EAIIJ,EAAOrsC,QAAU6iC,EAAK7iC,UACtBhN,EAAOgN,OAASvO,GAAU46C,EAAOrsC,QAAU,EAAG6iC,EAAK7iC,QAAU,EAAGrb,GAExE,CK0/BoB+nD,CAAUf,EAAaD,EAAsBzmD,KAAKu4B,aAAc74B,EAAUonD,EAAwBD,IAEtG7mD,KAAK6R,KAAK+xC,2BACV5jD,KAAKilC,iBACLjlC,KAAKkhD,kBAAoBxhD,GAE7BM,KAAKinD,eAAejnD,KAAKkR,QAAQuuB,WAAa,IAAO,EACzD,CACA,cAAA/S,CAAexb,aACXlR,KAAKqhD,gBAAgB,kBACrB,OAAAn1C,EAAAlM,KAAK86C,mBAAL5uC,EAAuB4C,OACvB,OAAA44C,EAAA,OAAAv7C,EAAAnM,KAAK0+C,mBAAL,EAAAvyC,EAAmB2uC,mBAAnB4M,EAAqC54C,OACjC9O,KAAK6lD,mBACLh/C,EAAY7G,KAAK6lD,kBACjB7lD,KAAK6lD,sBAAmB,GAO5B7lD,KAAK6lD,iBAAmBj/C,EAAMR,OAAO,KACjCyyC,GAAsBC,wBAAyB,EAE/C94C,KAAKiY,cAAgBjY,KAAKiY,YAAcA,GAAY,IACpDjY,KAAK86C,iBG7jCrB,SAA4B/7C,EAAOyS,EAAWN,GAC1C,MAAMy2C,EAAgB52B,GAAchyB,GAASA,EAAQkZ,GAAYlZ,GAEjE,OADA4oD,EAAc94C,MAAM67B,GAAmB,GAAIid,EAAen2C,EAAWN,IAC9Dy2C,EAAc/lC,SACzB,CHyjCwCgmC,CAAmB5nD,KAAKiY,YAAa,CAAC,EAAG,KAAO,IACjE/G,EACHnQ,SAAU,EACVqqC,QAAQ,EACR/xB,SAAWxF,IACP7T,KAAKinD,eAAepzC,GACpB3C,EAAQmI,UAAYnI,EAAQmI,SAASxF,IAEzCwE,OAAQ,OAGRgC,WAAY,KAERnJ,EAAQmJ,YAAcnJ,EAAQmJ,aAC9Bra,KAAK6nD,uBAGT7nD,KAAK0+C,eACL1+C,KAAK0+C,aAAa5D,iBAAmB96C,KAAK86C,kBAE9C96C,KAAK6lD,sBAAmB,GAEhC,CACA,iBAAAgC,GACQ7nD,KAAK0+C,eACL1+C,KAAK0+C,aAAa5D,sBAAmB,EACrC96C,KAAK0+C,aAAaP,qBAAkB,GAExC,MAAMxD,EAAQ36C,KAAK46C,WACnBD,GAASA,EAAM8D,wBACfz+C,KAAK0+C,aACD1+C,KAAK86C,iBACD96C,KAAKq+C,qBACD,EACZr+C,KAAKqhD,gBAAgB,oBACzB,CACA,eAAAS,GACQ9hD,KAAK86C,mBACL96C,KAAKinD,gBAAkBjnD,KAAKinD,eAvkCpB,KAwkCRjnD,KAAK86C,iBAAiBhsC,QAE1B9O,KAAK6nD,mBACT,CACA,uBAAAC,GACI,MAAMlK,EAAO59C,KAAKslD,UAClB,IAAIK,qBAAEA,EAAA53C,OAAsBA,EAAQ6oB,OAAAA,EAAAA,aAAQ2B,GAAiBqlB,EAC7D,GAAK+H,GAAyB53C,GAAW6oB,EAAzC,CAOA,GAAI52B,OAAS49C,GACT59C,KAAK42B,QACLA,GACAmxB,GAA0B/nD,KAAKkR,QAAQ4uB,cAAe9/B,KAAK42B,OAAO0e,UAAW1e,EAAO0e,WAAY,CAChGvnC,EAAS/N,KAAK+N,QzD9mCZ,CACdnM,EAFe,CAASpD,IAAK,EAAGC,IAAK,GAGrC2c,EAHe,CAAS5c,IAAK,EAAGC,IAAK,IyDgnCzB,MAAMupD,EAAUvX,GAAWzwC,KAAK42B,OAAO0e,UAAU1zC,GACjDmM,EAAOnM,EAAEpD,IAAMo/C,EAAK7vC,OAAOnM,EAAEpD,IAC7BuP,EAAOnM,EAAEnD,IAAMsP,EAAOnM,EAAEpD,IAAMwpD,EAC9B,MAAMC,EAAUxX,GAAWzwC,KAAK42B,OAAO0e,UAAUl6B,GACjDrN,EAAOqN,EAAE5c,IAAMo/C,EAAK7vC,OAAOqN,EAAE5c,IAC7BuP,EAAOqN,EAAE3c,IAAMsP,EAAOqN,EAAE5c,IAAMypD,CAClC,CACA7L,GAAYuJ,EAAsB53C,GAMlCitB,GAAa2qB,EAAsBptB,GAOnCoY,GAAa3wC,KAAKwmD,6BAA8BxmD,KAAK+jD,gBAAiB4B,EAAsBptB,EA/BxF,CAgCR,CACA,kBAAAwpB,CAAmB5pB,EAAU0X,GACpB7vC,KAAKmhD,YAAY/7C,IAAI+yB,IACtBn4B,KAAKmhD,YAAYj6C,IAAIixB,EAAU,IAAIulB,IAEzB19C,KAAKmhD,YAAYviC,IAAIuZ,GAC7Bj4B,IAAI2vC,GACV,MAAM1S,EAAS0S,EAAK3+B,QAAQouB,uBAC5BuQ,EAAK4K,QAAQ,CACT3jC,WAAYqmB,EAASA,EAAOrmB,gBAAa,EACzCknC,sBAAuB7gB,GAAUA,EAAO+qB,4BAClC/qB,EAAO+qB,4BAA4BrY,QACnC,GAEd,CACA,MAAAkL,GACI,MAAMJ,EAAQ36C,KAAK46C,WACnB,OAAOD,GAAQA,EAAMiD,OAAS59C,IAClC,CACA,OAAAslD,SACI,MAAMntB,SAAEA,GAAan4B,KAAKkR,QAC1B,OAAOinB,IAAW,OAAAjsB,EAAAlM,KAAK46C,iBAAL,EAAA1uC,EAAiB0xC,OAAe59C,IACtD,CACA,WAAAmoD,SACI,MAAMhwB,SAAEA,GAAan4B,KAAKkR,QAC1B,OAAOinB,EAAW,OAAAjsB,EAAAlM,KAAK46C,qBAAY+C,cAAW,CAClD,CACA,QAAA/C,GACI,MAAMziB,SAAEA,GAAan4B,KAAKkR,QAC1B,GAAIinB,EACA,OAAOn4B,KAAK6R,KAAKsvC,YAAYviC,IAAIuZ,EACzC,CACA,OAAAsiB,EAAQuF,WAAEA,EAAAlpC,WAAYA,wBAAYknC,GAA2B,CAAA,GACzD,MAAMrD,EAAQ36C,KAAK46C,WACfD,GACAA,EAAMF,QAAQz6C,KAAMg+C,GACpBgC,IACAhgD,KAAKs5C,qBAAkB,EACvBt5C,KAAKggD,YAAa,GAElBlpC,GACA9W,KAAK4/B,WAAW,CAAE9oB,cAC1B,CACA,QAAA4jC,GACI,MAAMC,EAAQ36C,KAAK46C,WACnB,QAAID,GACOA,EAAMD,SAAS16C,KAK9B,CACA,oBAAAijD,GACI,MAAMvkC,cAAEA,GAAkB1e,KAAKkR,QAC/B,IAAKwN,EACD,OAEJ,IAAI0pC,GAAyB,EAK7B,MAAM7vB,aAAEA,GAAiB7Z,EAWzB,IAVI6Z,EAAaxc,GACbwc,EAAaxd,QACbwd,EAAatc,SACbsc,EAAarc,SACbqc,EAAa9c,SACb8c,EAAa7c,OACb6c,EAAa3c,SACbwsC,GAAyB,IAGxBA,EACD,OACJ,MAAMC,EAAc,CAAA,EAChB9vB,EAAaxc,GACb8iC,GAAyB,IAAKngC,EAAe2pC,EAAaroD,KAAKq+C,iBAGnE,IAAA,IAAS99C,EAAI,EAAGA,EAAIq+C,GAAct+C,OAAQC,IACtCs+C,GAAyB,SAASD,GAAcr+C,KAAMme,EAAe2pC,EAAaroD,KAAKq+C,iBACvFQ,GAAyB,OAAOD,GAAcr+C,KAAMme,EAAe2pC,EAAaroD,KAAKq+C,iBAIzF3/B,EAAcpY,SAEd,IAAA,MAAWxK,KAAOusD,EACd3pC,EAAcyoB,eAAerrC,EAAKusD,EAAYvsD,IAC1CkE,KAAKq+C,kBACLr+C,KAAKq+C,gBAAgBviD,GAAOusD,EAAYvsD,IAKhD4iB,EAAcumB,gBAClB,CACA,qBAAAiE,CAAsBof,EACtBztB,GACI,IAAK76B,KAAKo+B,UAAYp+B,KAAK+/C,MACvB,OACJ,IAAK//C,KAAKihD,UAEN,YADAqH,EAAYC,WAAa,UAG7B,MAAM3jC,EAAoB5kB,KAAKkjD,uBAC/B,GAAIljD,KAAKggD,WASL,OARAhgD,KAAKggD,YAAa,EAClBsI,EAAYC,WAAa,GACzBD,EAAY3nC,QAAU,GACtB2nC,EAAYE,cACRlsB,GAAmB,MAAAzB,OAAA,EAAAA,EAAW2tB,gBAAkB,QACpDF,EAAYrgD,UAAY2c,EAClBA,EAAkB5kB,KAAKu4B,aAAc,IACrC,QAGV,MAAMqlB,EAAO59C,KAAKslD,UAClB,IAAKtlD,KAAKs5C,kBAAoBt5C,KAAK42B,SAAWgnB,EAAK7vC,OAe/C,OAdI/N,KAAKkR,QAAQinB,WACbmwB,EAAY3nC,aACsB,IAA9B3gB,KAAKu4B,aAAa5X,QACZ3gB,KAAKu4B,aAAa5X,QAClB,EACV2nC,EAAYE,cACRlsB,GAAmB,MAAAzB,OAAA,EAAAA,EAAW2tB,gBAAkB,SAEpDxoD,KAAKghD,eAAiBtoB,GAAa14B,KAAKu4B,gBACxC+vB,EAAYrgD,UAAY2c,EAClBA,EAAkB,CAAA,EAAI,IACtB,OACN5kB,KAAKghD,cAAe,IAI5BsH,EAAYC,WAAa,GACzB,MAAME,EAAiB7K,EAAKS,iBAAmBT,EAAKrlB,aACpDv4B,KAAK8nD,0BACL,IAAI7/C,EI1xChB,SAAkC3D,EAAO+0C,EAAWqP,GAChD,IAAIzgD,EAAY,GAOhB,MAAM0gD,EAAarkD,EAAM1C,EAAEihC,UAAYwW,EAAUz3C,EAC3CgnD,EAAatkD,EAAM8W,EAAEynB,UAAYwW,EAAUj+B,EAC3CytC,SAAaH,WAAiB3sC,IAAK,EAWzC,IAVI4sC,GAAcC,GAAcC,KAC5B5gD,EAAY,eAAe0gD,QAAiBC,QAAiBC,SAM7C,IAAhBxP,EAAUz3C,GAA2B,IAAhBy3C,EAAUj+B,IAC/BnT,GAAa,SAAS,EAAIoxC,EAAUz3C,MAAM,EAAIy3C,EAAUj+B,OAExDstC,EAAiB,CACjB,MAAMpgC,qBAAEA,EAAsBvN,OAAAA,EAAAA,QAAQkB,UAASC,EAAAR,MAASA,EAAAE,MAAOA,GAAU8sC,EACrEpgC,IACArgB,EAAY,eAAeqgB,QAA2BrgB,KACtD8S,IACA9S,GAAa,UAAU8S,UACvBkB,IACAhU,GAAa,WAAWgU,UACxBC,IACAjU,GAAa,WAAWiU,UACxBR,IACAzT,GAAa,SAASyT,UACtBE,IACA3T,GAAa,SAAS2T,SAC9B,CAKA,MAAMktC,EAAgBxkD,EAAM1C,EAAEuG,MAAQkxC,EAAUz3C,EAC1CmnD,EAAgBzkD,EAAM8W,EAAEjT,MAAQkxC,EAAUj+B,EAIhD,OAHsB,IAAlB0tC,GAAyC,IAAlBC,IACvB9gD,GAAa,SAAS6gD,MAAkBC,MAErC9gD,GAAa,MACxB,CJ4uC4B+gD,CAAyBhpD,KAAKwmD,6BAA8BxmD,KAAKq5C,UAAWoP,GACxF7jC,IACA3c,EAAY2c,EAAkB6jC,EAAgBxgD,IAElDqgD,EAAYrgD,UAAYA,EACxB,MAAMrG,EAAEA,EAAAwZ,EAAGA,GAAMpb,KAAKs5C,gBACtBgP,EAAY7vB,gBAAkB,GAAc,IAAX72B,EAAEkM,WAA4B,IAAXsN,EAAEtN,YAClD8vC,EAAKS,gBAKLiK,EAAY3nC,QACRi9B,IAAS59C,KACHyoD,EAAe9nC,SACb3gB,KAAKu4B,aAAa5X,SAClB,EACF3gB,KAAKm+C,gBACDn+C,KAAKu4B,aAAa5X,QAClB8nC,EAAepB,YAO7BiB,EAAY3nC,QACRi9B,IAAS59C,UACwB,IAA3ByoD,EAAe9nC,QACX8nC,EAAe9nC,QACf,QAC2B,IAA/B8nC,EAAepB,YACXoB,EAAepB,YACf,EAKlB,IAAA,MAAWvrD,KAAOm8B,GAAiB,CAC/B,QAA4B,IAAxBwwB,EAAe3sD,GACf,SACJ,MAAMq9C,QAAEA,EAAAiC,QAASA,EAAAlB,cAASA,GAAkBjiB,GAAgBn8B,GAOtDmtD,EAA0B,SAAdhhD,EACZwgD,EAAe3sD,GACfq9C,EAAQsP,EAAe3sD,GAAM8hD,GACnC,GAAIxC,EAAS,CACT,MAAM8N,EAAM9N,EAAQ96C,OACpB,IAAA,IAASC,EAAI,EAAGA,EAAI2oD,EAAK3oD,IACrB+nD,EAAYlN,EAAQ76C,IAAM0oD,CAElC,MAKQ/O,EACAl6C,KAAKkR,QAAQwN,cAAc6e,YAAY/E,KAAK18B,GAAOmtD,EAGnDX,EAAYxsD,GAAOmtD,CAG/B,CAMIjpD,KAAKkR,QAAQinB,WACbmwB,EAAYE,cACR5K,IAAS59C,KACHs8B,GAAmB,MAAAzB,OAAA,EAAAA,EAAW2tB,gBAAkB,GAChD,OAElB,CACA,aAAA9E,GACI1jD,KAAKk+C,WAAal+C,KAAKo+C,cAAW,CACtC,CAEA,SAAA+K,GACInpD,KAAK6R,KAAK6uC,MAAM56C,QAAS+pC,UAAS,OAAA,OAAA3jC,EAAA2jC,EAAKiL,uBAAL,EAAA5uC,EAAuB4C,SACzD9O,KAAK6R,KAAK6uC,MAAM56C,QAAQw9C,IACxBtjD,KAAK6R,KAAKsvC,YAAY1gD,OAC1B,EAER,CACA,SAAS23C,GAAavI,GAClBA,EAAKuI,cACT,CACA,SAASqL,GAAmB5T,SACxB,MAAMuO,GAAW,OAAAlyC,EAAA2jC,EAAKqO,iBAAL,EAAAhyC,EAAiBkyC,WAAYvO,EAAKuO,SACnD,GAAIvO,EAAKkL,UACLlL,EAAKjZ,QACLwnB,GACAvO,EAAK0R,aAAa,aAAc,CAChC,MAAQjM,UAAW1e,EAAQitB,YAAauF,GAAmBvZ,EAAKjZ,QAC1DkJ,cAAEA,GAAkB+P,EAAK3+B,QACzBq0C,EAAWnH,EAASxyC,SAAWikC,EAAKjZ,OAAOhrB,OAG3B,SAAlBk0B,EACAkR,GAAUhO,IACN,MAAMqmB,EAAe9D,EACfnH,EAASyF,YAAY7gB,GACrBob,EAAS9I,UAAUtS,GACnB1iC,EAASmwC,GAAW4Y,GAC1BA,EAAa7qD,IAAMo4B,EAAOoM,GAAMxkC,IAChC6qD,EAAa5qD,IAAM4qD,EAAa7qD,IAAM8B,IAGrCynD,GAA0BjoB,EAAese,EAAS9I,UAAW1e,IAClEoa,GAAUhO,IACN,MAAMqmB,EAAe9D,EACfnH,EAASyF,YAAY7gB,GACrBob,EAAS9I,UAAUtS,GACnB1iC,EAASmwC,GAAW7Z,EAAOoM,IACjCqmB,EAAa5qD,IAAM4qD,EAAa7qD,IAAM8B,EAIlCuvC,EAAKsS,iBAAmBtS,EAAKiL,mBAC7BjL,EAAK8P,mBAAoB,EACzB9P,EAAKsS,eAAenf,GAAMvkC,IACtBoxC,EAAKsS,eAAenf,GAAMxkC,IAAM8B,KAIhD,MAAMgpD,EzDz5CM,CAChB1nD,EAPoB,CACpBihC,UAAW,EACX16B,MAAO,EACP2F,OAAQ,EACR60B,YAAa,GAIbvnB,EARoB,CACpBynB,UAAW,EACX16B,MAAO,EACP2F,OAAQ,EACR60B,YAAa,IyD45CTgO,GAAa2Y,EAAa1yB,EAAQwnB,EAAS9I,WAC3C,MAAMiU,EzD35CM,CAChB3nD,EAPoB,CACpBihC,UAAW,EACX16B,MAAO,EACP2F,OAAQ,EACR60B,YAAa,GAIbvnB,EARoB,CACpBynB,UAAW,EACX16B,MAAO,EACP2F,OAAQ,EACR60B,YAAa,IyD85CL4iB,EACA5U,GAAa4Y,EAAa1Z,EAAKgV,eAAeuE,GAAgB,GAAOhL,EAASyF,aAG9ElT,GAAa4Y,EAAa3yB,EAAQwnB,EAAS9I,WAE/C,MAAMqD,GAAoByE,GAAYkM,GACtC,IAAItH,GAA2B,EAC/B,IAAKnS,EAAKqO,WAAY,CAClB,MAAMkH,EAAiBvV,EAAK4V,6BAK5B,GAAIL,IAAmBA,EAAelH,WAAY,CAC9C,MAAQE,SAAUoL,EAAgB5yB,OAAQ6yB,GAAiBrE,EAC3D,GAAIoE,GAAkBC,EAAc,CAChC,MAAMC,EzDx6CR,CACd9nD,EAFe,CAASpD,IAAK,EAAGC,IAAK,GAGrC2c,EAHe,CAAS5c,IAAK,EAAGC,IAAK,IyD06CrBsyC,GAAqB2Y,EAAkBtL,EAAS9I,UAAWkU,EAAelU,WAC1E,MAAMqR,EzD16CR,CACd/kD,EAFe,CAASpD,IAAK,EAAGC,IAAK,GAGrC2c,EAHe,CAAS5c,IAAK,EAAGC,IAAK,IyD46CrBsyC,GAAqB4V,EAAgB/vB,EAAQ6yB,EAAanU,WACrDiI,GAAiBmM,EAAkB/C,KACpC3E,GAA2B,GAE3BoD,EAAel0C,QAAQuuB,aACvBoQ,EAAKsS,eAAiBwE,EACtB9W,EAAK6V,qBAAuBgE,EAC5B7Z,EAAKuV,eAAiBA,EAE9B,CACJ,CACJ,CACAvV,EAAKwR,gBAAgB,YAAa,CAC9BzqB,OAAAA,EACAwnB,WACA95C,MAAOilD,EACPD,cACA3Q,mBACAqJ,4BAER,MAAA,GACSnS,EAAKkL,SAAU,CACpB,MAAMxnB,eAAEA,GAAmBsc,EAAK3+B,QAChCqiB,GAAkBA,GACtB,CAMAsc,EAAK3+B,QAAQ4F,gBAAa,CAC9B,CACA,SAAS6pC,GAAoB9Q,GAOpBA,EAAKxhB,SAQLwhB,EAAKzG,iBACNyG,EAAK8P,kBAAoB9P,EAAKxhB,OAAOsxB,mBAOzC9P,EAAK+P,0BAA4B/P,EAAK+P,wBAA0Bj3C,QAAQknC,EAAK8P,mBACzE9P,EAAKxhB,OAAOsxB,mBACZ9P,EAAKxhB,OAAOuxB,0BAChB/P,EAAKtJ,mBAAqBsJ,EAAKtJ,iBAAmBsJ,EAAKxhB,OAAOkY,kBAClE,CACA,SAASua,GAAgBjR,GACrBA,EAAK8P,kBACD9P,EAAK+P,wBACD/P,EAAKtJ,kBACD,CAChB,CACA,SAASmd,GAAc7T,GACnBA,EAAK6T,eACT,CACA,SAASJ,GAAkBzT,GACvBA,EAAKyT,mBACT,CACA,SAASC,GAAmB1T,GACxBA,EAAK0O,eAAgB,CACzB,CACA,SAASiF,GAAoB3T,GACzB,MAAMnxB,cAAEA,GAAkBmxB,EAAK3+B,QAC3BwN,GAAiBA,EAAcmG,WAAW8kC,uBAC1CjrC,EAActe,OAAO,uBAEzByvC,EAAK0P,gBACT,CACA,SAASuC,GAAgBjS,GACrBA,EAAKiS,kBACLjS,EAAKqV,YAAcrV,EAAKsS,eAAiBtS,EAAK9hC,YAAS,EACvD8hC,EAAK8P,mBAAoB,CAC7B,CACA,SAASiB,GAAmB/Q,GACxBA,EAAK+Q,oBACT,CACA,SAASC,GAAehR,GACpBA,EAAKgR,gBACT,CACA,SAASoC,GAAqBpT,GAC1BA,EAAKoT,sBACT,CACA,SAASU,GAAoBhJ,GACzBA,EAAMgE,oBACV,CACA,SAASuI,GAAap7C,EAAQxH,EAAOzI,GACjCiQ,EAAO+2B,UAAYr2B,GAAUlI,EAAMu+B,UAAW,EAAGhnC,GACjDiQ,EAAO3D,MAAQqE,GAAUlI,EAAM6D,MAAO,EAAGtM,GACzCiQ,EAAOgC,OAASxJ,EAAMwJ,OACtBhC,EAAO62B,YAAcr+B,EAAMq+B,WAC/B,CACA,SAASwkB,GAAQr7C,EAAQnM,EAAMC,EAAI/D,GAC/BiQ,EAAOtN,IAAMgO,GAAU7M,EAAKnB,IAAKoB,EAAGpB,IAAK3C,GACzCiQ,EAAOrN,IAAM+N,GAAU7M,EAAKlB,IAAKmB,EAAGnB,IAAK5C,EAC7C,CAKA,SAASkrD,GAAoBlX,GACzB,OAAQA,EAAKwO,sBAAwD,IAArCxO,EAAKwO,gBAAgBgJ,WACzD,CACA,MAAMhF,GAA0B,CAC5BrzC,SAAU,IACVqF,KAAM,CAAC,GAAK,EAAG,GAAK,IAElBu1C,GAAqBC,GAAgC,oBAAdC,WACzCA,UAAUC,WACVD,UAAUC,UAAUzuB,cAAcjf,SAASwtC,GAMzCG,GAAaJ,GAAkB,kBAAoBA,GAAkB,WACrE3nD,KAAKqG,MACLlJ,EACN,SAASslD,GAAU1hB,GAEfA,EAAKxkC,IAAMwrD,GAAWhnB,EAAKxkC,KAC3BwkC,EAAKvkC,IAAMurD,GAAWhnB,EAAKvkC,IAC/B,CAKA,SAASspD,GAA0BjoB,EAAese,EAAUxnB,GACxD,MAA0B,aAAlBkJ,GACe,oBAAlBA,IpBzjDO/gC,EoB0jDIy+C,GAAYY,GpB1jDTrwC,EoB0jDoByvC,GAAY5mB,GpB1jDxBqzB,EoB0jDiC,KpBzjDrDhoD,KAAKC,IAAInD,EAAQgP,IAAWk8C,IADvC,IAAgBlrD,EAAOgP,EAAQk8C,CoB2jD/B,CACA,SAAStF,GAAuB9U,SAC5B,OAAOA,IAASA,EAAKh+B,OAAQ,OAAA3F,EAAA2jC,EAAKoH,aAAL,EAAA/qC,EAAag4C,QAC9C,CKtkDA,MAAMgG,GAAyBlqB,GAAqB,CAChDmf,qBAAsB,CAACpjD,EAAKqE,IAAW+vC,GAAYp0C,EAAK,SAAUqE,GAClEi/C,cAAe,KAAA,CACXz9C,EAAG4e,SAAS2pC,gBAAgBC,YAAc5pC,SAAS6pC,KAAKD,WACxDhvC,EAAGoF,SAAS2pC,gBAAgBG,WAAa9pC,SAAS6pC,KAAKC,YAE3DhL,kBAAmB,KAAM,ICNvBvI,GAAqB,CACvB/5C,aAAS,GAEPutD,GAAqBvqB,GAAqB,CAC5Cqf,cAAgBjhB,IAAA,CACZx8B,EAAGw8B,EAASgsB,WACZhvC,EAAGgjB,EAASksB,YAEhBlL,cAAe,KACX,IAAKrI,GAAmB/5C,QAAS,CAC7B,MAAMwtD,EAAe,IAAIN,GAAuB,IAChDM,EAAalsB,MAAM5gC,QACnB8sD,EAAa5qB,WAAW,CAAEJ,cAAc,IACxCuX,GAAmB/5C,QAAUwtD,CACjC,CACA,OAAOzT,GAAmB/5C,SAE9BuiD,eAAgB,CAACnhB,EAAUr/B,KACvBq/B,EAASnc,MAAMha,eAAsB,IAAVlJ,EAAsBA,EAAQ,QAE7DugD,kBAAoBlhB,GAAaz1B,QAAuD,UAA/CjL,OAAOkoB,iBAAiBwY,GAAUqsB,YClBzEn0B,GAAO,CACTI,IAAK,CACDoQ,QnBKR,cAAyBA,GACrB,WAAA/mC,GACI4X,SAASixB,WACT5oC,KAAK0qD,0BAA4BtrD,CACrC,CACA,aAAAurD,CAAcC,GACV5qD,KAAK6qD,QAAU,IAAIzZ,GAAWwZ,EAAkB5qD,KAAK8qD,oBAAqB,CACtE55B,mBAAoBlxB,KAAK6vC,KAAK7H,wBAC9BsJ,cAAeL,GAAiBjxC,KAAK6vC,OAE7C,CACA,iBAAAib,GACI,MAAMC,kBAAEA,aAAmBC,EAAAC,MAAYA,EAAAC,SAAOA,GAAalrD,KAAK6vC,KAAKhrB,WACrE,MAAO,CACHiuB,eAAgB8F,GAAamS,GAC7B3Y,QAASwG,GAAaoS,GACtB3Y,OAAQ4Y,EACRxY,MAAO,CAACvkB,EAAO0jB,YACJ5xC,KAAK6qD,QACRK,GACAtkD,EAAML,WAAW,IAAM2kD,EAASh9B,EAAO0jB,KAIvD,CACA,KAAAtT,GACIt+B,KAAK0qD,0BAA4Bna,GAAgBvwC,KAAK6vC,KAAK7yC,QAAS,cAAgBkxB,GAAUluB,KAAK2qD,cAAcz8B,GACrH,CACA,MAAA9nB,GACIpG,KAAK6qD,SAAW7qD,KAAK6qD,QAAQ7X,eAAehzC,KAAK8qD,oBACrD,CACA,OAAAvsB,GACIv+B,KAAK0qD,4BACL1qD,KAAK6qD,SAAW7qD,KAAK6qD,QAAQrY,KACjC,ImBrCAlc,KAAM,CACFwQ,QCNR,cAA0BA,GACtB,WAAA/mC,CAAY8vC,GACRl4B,MAAMk4B,GACN7vC,KAAKmrD,oBAAsB/rD,EAC3BY,KAAK+yC,gBAAkB3zC,EACvBY,KAAKorD,SAAW,IAAIjX,GAA0BtE,EAClD,CACA,KAAAvR,GAGI,MAAM+sB,aAAEA,GAAiBrrD,KAAK6vC,KAAKhrB,WAC/BwmC,IACArrD,KAAKmrD,oBAAsBE,EAAa92B,UAAUv0B,KAAKorD,WAE3DprD,KAAK+yC,gBAAkB/yC,KAAKorD,SAAS/S,gBAAkBj5C,CAC3D,CACA,OAAAm/B,GACIv+B,KAAKmrD,sBACLnrD,KAAK+yC,iBACT,GDZItR,eAAgB8oB,GAChBnpB,mBERR,SAASkqB,GAAiBzb,EAAM3hB,EAAOq9B,GACnC,MAAMzuD,MAAEA,GAAU+yC,EACdA,EAAKpP,gBAAkB3jC,EAAM4yC,YAC7BG,EAAKpP,eAAe2O,UAAU,aAA4B,UAAdmc,GAEhD,MACMrsD,EAAWpC,EADE,UAAYyuD,GAE3BrsD,GACA0H,EAAML,WAAW,IAAMrH,EAASgvB,EAAOkiB,GAAiBliB,IAEhE,CCVA,SAASs9B,GAAiB3b,EAAM3hB,EAAOq9B,GACnC,MAAMzuD,MAAEA,GAAU+yC,EAClB,GAAIA,EAAK7yC,mBAAmByuD,mBAAqB5b,EAAK7yC,QAAQ0uD,SAC1D,OAEA7b,EAAKpP,gBAAkB3jC,EAAMm9B,UAC7B4V,EAAKpP,eAAe2O,UAAU,WAA0B,UAAdmc,GAE9C,MACMrsD,EAAWpC,EADE,SAAyB,QAAdyuD,EAAsB,GAAKA,IAErDrsD,GACA0H,EAAML,WAAW,IAAMrH,EAASgvB,EAAOkiB,GAAiBliB,IAEhE,CCZA,MAAMy9B,OAAwBxnB,QAMxBynB,OAAgBznB,QAChB0nB,GAAwBC,IAC1B,MAAM5sD,EAAWysD,GAAkB/sC,IAAIktC,EAAM/9C,QAC7C7O,GAAYA,EAAS4sD,IAEnBC,GAA4BC,IAC9BA,EAAQlmD,QAAQ+lD,KAqBpB,SAASI,GAAoB3tC,EAASpN,EAAShS,GAC3C,MAAMgtD,EApBV,UAAkCr6C,KAAEA,KAASX,IACzC,MAAMi7C,EAAat6C,GAAQ2O,SAItBorC,GAAUxmD,IAAI+mD,IACfP,GAAU1kD,IAAIilD,EAAY,IAE9B,MAAMC,EAAgBR,GAAUhtC,IAAIutC,GAC9BrwD,EAAMuwD,KAAKC,UAAUp7C,GAQ3B,OAHKk7C,EAActwD,KACfswD,EAActwD,GAAO,IAAIywD,qBAAqBR,GAA0B,CAAEl6C,UAASX,KAEhFk7C,EAActwD,EACzB,CAEsC0wD,CAAyBt7C,GAG3D,OAFAy6C,GAAkBzkD,IAAIoX,EAASpf,GAC/BgtD,EAA0BtxC,QAAQ0D,GAC3B,KACHqtC,GAAkBhmD,OAAO2Y,GACzB4tC,EAA0BO,UAAUnuC,GAE5C,CC3CA,MAAMouC,GAAiB,CACnBt7C,KAAM,EACN66B,IAAK,GCAT,MCDM0gB,GAAuB5qB,GCCP,IACf6J,MFDmB,CACtBjV,OAAQ,CACJmQ,QDAR,cAA4BA,GACxB,WAAA/mC,GACI4X,SAASixB,WACT5oC,KAAK4sD,gBAAiB,EACtB5sD,KAAK6sD,UAAW,CACpB,CACA,aAAAC,GACI9sD,KAAKu+B,UACL,MAAMwuB,SAAEA,EAAW,CAAA,GAAO/sD,KAAK6vC,KAAKhrB,YAC9BhT,KAAEA,EAAM+V,OAAQolC,SAAYC,EAAS,OAAAC,KAAQA,GAASH,EACtD77C,EAAU,CACZW,KAAMA,EAAOA,EAAK7U,aAAU,EAC5BgwD,aACAG,UAA6B,iBAAXF,EAAsBA,EAASP,GAAeO,IA+BpE,OAAOhB,GAAoBjsD,KAAK6vC,KAAK7yC,QAASkU,EA7BhB46C,IAC1B,MAAMsB,eAAEA,GAAmBtB,EAI3B,GAAI9rD,KAAK6sD,WAAaO,EAClB,OAMJ,GALAptD,KAAK6sD,SAAWO,EAKZF,IAASE,GAAkBptD,KAAK4sD,eAChC,OAEKQ,IACLptD,KAAK4sD,gBAAiB,GAEtB5sD,KAAK6vC,KAAKpP,gBACVzgC,KAAK6vC,KAAKpP,eAAe2O,UAAU,cAAege,GAMtD,MAAMC,gBAAEA,EAAAC,gBAAiBA,GAAoBttD,KAAK6vC,KAAKhrB,WACjD3lB,EAAWkuD,EAAiBC,EAAkBC,EACpDpuD,GAAYA,EAAS4sD,IAG7B,CACA,KAAAxtB,GACIt+B,KAAK8sD,eACT,CACA,MAAA1mD,GACI,GAAoC,oBAAzBmmD,qBACP,OACJ,MAAMzvD,MAAEA,EAAA00B,UAAOA,GAAcxxB,KAAK6vC,KACR,CAAC,SAAU,SAAU,QAAQz+B,KAO/D,UAAkC27C,SAAEA,EAAW,KAAQA,SAAUQ,EAAe,IAAO,IACnF,OAAQnxC,GAAS2wC,EAAS3wC,KAAUmxC,EAAanxC,EACrD,CAToEoxC,CAAyB1wD,EAAO00B,KAExFxxB,KAAK8sD,eAEb,CACA,OAAAvuB,GAAY,ICxDZ9H,IAAK,CACDqQ,QHQR,cAA2BA,GACvB,KAAAxI,GACI,MAAMthC,QAAEA,GAAYgD,KAAK6vC,KACpB7yC,IAELgD,KAAKu+B,QAAUpP,GAAMnyB,EAAS,CAACywD,EAAU/9B,KACrC87B,GAAiBxrD,KAAK6vC,KAAMngB,EAAY,SACjC,CAACI,GAAYC,aAAcy7B,GAAiBxrD,KAAK6vC,KAAM/f,EAAUC,EAAU,MAAQ,WAC3F,CAAEK,gBAAiBpwB,KAAK6vC,KAAK/yC,MAAM4wD,kBAC1C,CACA,OAAAnvB,GAAY,IGhBZhI,MAAO,CACHuQ,QGTR,cAA2BA,GACvB,WAAA/mC,GACI4X,SAASixB,WACT5oC,KAAKiuC,UAAW,CACpB,CACA,OAAA0f,GACI,IAAIC,GAAiB,EAOrB,IACIA,EAAiB5tD,KAAK6vC,KAAK7yC,QAAQ8oC,QAAQ,iBAC/C,OACOtpC,GACHoxD,GAAiB,CACrB,CACKA,GAAmB5tD,KAAK6vC,KAAKpP,iBAElCzgC,KAAK6vC,KAAKpP,eAAe2O,UAAU,cAAc,GACjDpvC,KAAKiuC,UAAW,EACpB,CACA,MAAA4f,GACS7tD,KAAKiuC,UAAajuC,KAAK6vC,KAAKpP,iBAEjCzgC,KAAK6vC,KAAKpP,eAAe2O,UAAU,cAAc,GACjDpvC,KAAKiuC,UAAW,EACpB,CACA,KAAA3P,GACIt+B,KAAKu+B,QAAUh/B,EAAK4wC,GAAYnwC,KAAK6vC,KAAK7yC,QAAS,QAAS,IAAMgD,KAAK2tD,WAAYxd,GAAYnwC,KAAK6vC,KAAK7yC,QAAS,OAAQ,IAAMgD,KAAK6tD,UACzI,CACA,OAAAtvB,GAAY,IHtBZ/H,MAAO,CACHsQ,QJDR,cAA2BA,GACvB,KAAAxI,GACI,MAAMthC,QAAEA,GAAYgD,KAAK6vC,KACpB7yC,IAELgD,KAAKu+B,QhIPb,SAAelR,EAAmBygC,EAAc58C,EAAU,CAAA,GACtD,MAAOoc,EAAUiC,EAAc7pB,GAAU0nB,GAAaC,EAAmBnc,GACnE68C,EAAkBC,IACpB,IAAK//B,GAAa+/B,GACd,OACJ,MAAMjgD,OAAEA,GAAWigD,EACbC,EAAaH,EAAa//C,EAAQigD,GACxC,GAA0B,mBAAfC,IAA8BlgD,EACrC,OACJ,MAAMmgD,EAAkBC,IACflgC,GAAakgC,KAElBF,EAAWE,GACXpgD,EAAOiiB,oBAAoB,eAAgBk+B,KAE/CngD,EAAOuiB,iBAAiB,eAAgB49B,EAAgB3+B,IAK5D,OAHAjC,EAASxnB,QAASwY,IACdA,EAAQgS,iBAAiB,eAAgBy9B,EAAgBx+B,KAEtD7pB,CACX,CgIduB8wB,CAAMx5B,EAAS,CAACywD,EAAU/9B,KACrC47B,GAAiBtrD,KAAK6vC,KAAMngB,EAAY,SAChCI,GAAaw7B,GAAiBtrD,KAAK6vC,KAAM/f,EAAU,SAEnE,CACA,OAAAyO,GAAY,QMjBTjI,MELQ,CACXM,OAAQ,CACJ6K,eAAgB8oB,GAChBnpB,oBHFsD0I","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257]}